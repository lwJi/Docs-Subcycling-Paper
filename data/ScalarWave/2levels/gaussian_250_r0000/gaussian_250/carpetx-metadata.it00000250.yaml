# CarpetX Metadata
---
!carpetx-metadata-1.0.0
nghostzones: [3, 3, 3]
iteration: 250
time: 1
delta_time: 0.0080000000000000002
ghext: !ghext-2.0.0
  globaldata: !globaldata-1.0.0
    arraygroupdata:
      - !arraygroupdata-1.0.0
        commongroupdata: !commongroupdata-1.0.0
          groupname: BOXINBOX::ACTIVE
          numvars: 3
          varnames: ["active[0]", "active[1]", "active[2]"]
          do_checkpoint: true
          do_restrict: true
          valid:
            -
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
        data:
          -
            - 1
            - 1
            - 1
      - !arraygroupdata-1.0.0
        commongroupdata: !commongroupdata-1.0.0
          groupname: BOXINBOX::NUM_LEVELS
          numvars: 3
          varnames: ["num_levels[0]", "num_levels[1]", "num_levels[2]"]
          do_checkpoint: true
          do_restrict: true
          valid:
            -
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
        data:
          -
            - 2
            - 1
            - 1
      - !arraygroupdata-1.0.0
        commongroupdata: !commongroupdata-1.0.0
          groupname: BOXINBOX::POSITIONS
          numvars: 9
          varnames: ["position_x[0]", "position_x[1]", "position_x[2]", "position_y[0]", "position_y[1]", "position_y[2]", "position_z[0]", "position_z[1]", "position_z[2]"]
          do_checkpoint: true
          do_restrict: true
          valid:
            -
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  ghosts: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
        data:
          -
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
            - 0
      - !arraygroupdata-1.0.0
        commongroupdata: !commongroupdata-1.0.0
          groupname: BOXINBOX::RADII
          numvars: 3
          varnames: ["radius[0]", "radius[1]", "radius[2]"]
          do_checkpoint: true
          do_restrict: true
          valid:
            -
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
        data:
          -
            - -1
            - 1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
      - !arraygroupdata-1.0.0
        commongroupdata: !commongroupdata-1.0.0
          groupname: BOXINBOX::RADIIXYZ
          numvars: 9
          varnames: ["radius_x[0]", "radius_x[1]", "radius_x[2]", "radius_y[0]", "radius_y[1]", "radius_y[2]", "radius_z[0]", "radius_z[1]", "radius_z[2]"]
          do_checkpoint: true
          do_restrict: true
          valid:
            -
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
              - !why_valid-1.0.0
                valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                why:
                  int: "CallFunction iteration 0 CCTK_INITIAL: BoxInBox::BoxInBox_Init: Mark output variables as valid"
                  outer: SetupGlobals
                  ghosts: SetupGlobals
        data:
          -
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
            - -1
  patchdata:
    - !patchdata-1.0.0
      patch: 0
      amrcore: !amrcore-1.0.0
        maxLevel: 1
        finestLevel: 1
        geometry:
          - !geometry-1.0.0
            prob_domain: !realbox-1.0.0 {xlo: [-4, -4, -4], xhi: [4, 4, 4]}
            domain: !box-1.0.0 {small: [0, 0, 0], big: [249, 249, 249]}
            is_periodic: [1, 1, 1]
          - !geometry-1.0.0
            prob_domain: !realbox-1.0.0 {xlo: [-4, -4, -4], xhi: [4, 4, 4]}
            domain: !box-1.0.0 {small: [0, 0, 0], big: [499, 499, 499]}
            is_periodic: [1, 1, 1]
        distributionMapping:
          - !distributionmapping-1.0.0
            processorMap: [15, 15, 15, 15, 21, 21, 21, 10, 15, 15, 15, 15, 21, 10, 10, 10, 15, 16, 16, 16, 10, 10, 10, 27, 16, 16, 16, 16, 10, 10, 10, 27, 8, 8, 12, 12, 14, 5, 5, 5, 8, 8, 12, 12, 5, 5, 5, 5, 8, 8, 12, 12, 5, 5, 5, 25, 12, 12, 12, 6, 25, 25, 25, 25, 15, 15, 15, 15, 10, 10, 10, 10, 15, 15, 15, 15, 10, 10, 10, 10, 16, 16, 16, 16, 27, 27, 27, 27, 16, 16, 16, 16, 27, 27, 27, 27, 8, 8, 12, 12, 5, 5, 5, 25, 8, 8, 12, 12, 5, 5, 5, 25, 8, 12, 12, 12, 5, 5, 5, 25, 12, 12, 6, 6, 25, 25, 25, 25, 16, 16, 17, 17, 27, 27, 27, 11, 17, 17, 17, 17, 27, 27, 27, 11, 17, 17, 21, 21, 11, 11, 11, 8, 17, 21, 21, 21, 11, 11, 11, 8, 6, 6, 6, 6, 25, 25, 25, 7, 6, 6, 6, 14, 25, 25, 7, 7, 6, 6, 14, 14, 25, 7, 7, 7, 14, 14, 14, 14, 7, 22, 22, 22, 17, 17, 17, 17, 27, 11, 11, 11, 17, 17, 17, 17, 11, 11, 11, 11, 21, 21, 21, 21, 11, 11, 11, 8, 21, 21, 21, 21, 8, 8, 8, 8, 6, 6, 14, 14, 7, 7, 7, 7, 6, 6, 14, 14, 7, 7, 7, 7, 6, 6, 14, 14, 7, 7, 7, 7, 14, 14, 14, 14, 22, 22, 22, 22, 22, 22, 4, 4, 20, 3, 3, 3, 22, 22, 4, 4, 3, 3, 3, 3, 4, 4, 13, 13, 23, 23, 23, 18, 4, 4, 13, 13, 23, 23, 23, 18, 2, 2, 24, 24, 9, 9, 9, 26, 2, 2, 24, 24, 9, 1, 1, 26, 2, 2, 24, 24, 1, 1, 1, 26, 19, 19, 19, 19, 26, 26, 26, 0, 22, 22, 4, 4, 3, 3, 3, 23, 22, 22, 4, 4, 3, 3, 3, 23, 4, 13, 13, 13, 23, 23, 23, 18, 13, 13, 13, 13, 23, 18, 18, 18, 2, 2, 24, 24, 1, 1, 1, 26, 2, 24, 24, 19, 1, 1, 1, 26, 2, 24, 24, 19, 1, 1, 1, 26, 19, 19, 19, 19, 26, 26, 26, 0, 22, 22, 4, 4, 3, 3, 3, 23, 22, 4, 4, 4, 3, 3, 3, 23, 13, 13, 13, 13, 23, 23, 23, 18, 13, 13, 13, 20, 23, 18, 18, 18, 2, 2, 24, 24, 1, 1, 1, 26, 24, 24, 19, 19, 1, 1, 26, 26, 24, 24, 19, 19, 1, 26, 26, 26, 19, 19, 19, 19, 26, 0, 0, 0, 20, 20, 20, 20, 18, 18, 18, 18, 20, 20, 20, 20, 18, 18, 18, 18, 20, 20, 20, 20, 18, 2, 2, 2, 20, 20, 20, 20, 2, 2, 2, 2, 19, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 0, 0, 0, 0, 9, 9, 9, 9, 0, 0, 0, 0]
          - !distributionmapping-1.0.0
            processorMap: [16, 16, 17, 4, 17, 20, 14, 4, 20, 14, 10, 9, 5, 5, 26, 24, 10, 11, 12, 9, 13, 18, 19, 25, 8, 19, 6, 25, 26, 3, 3, 0, 11, 12, 13, 25, 8, 6, 27, 7, 18, 27, 27, 7, 26, 24, 24, 0, 23, 23, 23, 21, 2, 1, 1, 22, 2, 21, 21, 22, 22, 15, 15, 15]
        boxArray:
          - !boxarray-1.0.0
            - !box-1.0.0 {small: [0, 0, 0], big: [31, 31, 31]}
            - !box-1.0.0 {small: [32, 0, 0], big: [63, 31, 31]}
            - !box-1.0.0 {small: [64, 0, 0], big: [95, 31, 31]}
            - !box-1.0.0 {small: [96, 0, 0], big: [127, 31, 31]}
            - !box-1.0.0 {small: [128, 0, 0], big: [159, 31, 31]}
            - !box-1.0.0 {small: [160, 0, 0], big: [189, 31, 31]}
            - !box-1.0.0 {small: [190, 0, 0], big: [219, 31, 31]}
            - !box-1.0.0 {small: [220, 0, 0], big: [249, 31, 31]}
            - !box-1.0.0 {small: [0, 32, 0], big: [31, 63, 31]}
            - !box-1.0.0 {small: [32, 32, 0], big: [63, 63, 31]}
            - !box-1.0.0 {small: [64, 32, 0], big: [95, 63, 31]}
            - !box-1.0.0 {small: [96, 32, 0], big: [127, 63, 31]}
            - !box-1.0.0 {small: [128, 32, 0], big: [159, 63, 31]}
            - !box-1.0.0 {small: [160, 32, 0], big: [189, 63, 31]}
            - !box-1.0.0 {small: [190, 32, 0], big: [219, 63, 31]}
            - !box-1.0.0 {small: [220, 32, 0], big: [249, 63, 31]}
            - !box-1.0.0 {small: [0, 64, 0], big: [31, 95, 31]}
            - !box-1.0.0 {small: [32, 64, 0], big: [63, 95, 31]}
            - !box-1.0.0 {small: [64, 64, 0], big: [95, 95, 31]}
            - !box-1.0.0 {small: [96, 64, 0], big: [127, 95, 31]}
            - !box-1.0.0 {small: [128, 64, 0], big: [159, 95, 31]}
            - !box-1.0.0 {small: [160, 64, 0], big: [189, 95, 31]}
            - !box-1.0.0 {small: [190, 64, 0], big: [219, 95, 31]}
            - !box-1.0.0 {small: [220, 64, 0], big: [249, 95, 31]}
            - !box-1.0.0 {small: [0, 96, 0], big: [31, 127, 31]}
            - !box-1.0.0 {small: [32, 96, 0], big: [63, 127, 31]}
            - !box-1.0.0 {small: [64, 96, 0], big: [95, 127, 31]}
            - !box-1.0.0 {small: [96, 96, 0], big: [127, 127, 31]}
            - !box-1.0.0 {small: [128, 96, 0], big: [159, 127, 31]}
            - !box-1.0.0 {small: [160, 96, 0], big: [189, 127, 31]}
            - !box-1.0.0 {small: [190, 96, 0], big: [219, 127, 31]}
            - !box-1.0.0 {small: [220, 96, 0], big: [249, 127, 31]}
            - !box-1.0.0 {small: [0, 128, 0], big: [31, 159, 31]}
            - !box-1.0.0 {small: [32, 128, 0], big: [63, 159, 31]}
            - !box-1.0.0 {small: [64, 128, 0], big: [95, 159, 31]}
            - !box-1.0.0 {small: [96, 128, 0], big: [127, 159, 31]}
            - !box-1.0.0 {small: [128, 128, 0], big: [159, 159, 31]}
            - !box-1.0.0 {small: [160, 128, 0], big: [189, 159, 31]}
            - !box-1.0.0 {small: [190, 128, 0], big: [219, 159, 31]}
            - !box-1.0.0 {small: [220, 128, 0], big: [249, 159, 31]}
            - !box-1.0.0 {small: [0, 160, 0], big: [31, 189, 31]}
            - !box-1.0.0 {small: [32, 160, 0], big: [63, 189, 31]}
            - !box-1.0.0 {small: [64, 160, 0], big: [95, 189, 31]}
            - !box-1.0.0 {small: [96, 160, 0], big: [127, 189, 31]}
            - !box-1.0.0 {small: [128, 160, 0], big: [159, 189, 31]}
            - !box-1.0.0 {small: [160, 160, 0], big: [189, 189, 31]}
            - !box-1.0.0 {small: [190, 160, 0], big: [219, 189, 31]}
            - !box-1.0.0 {small: [220, 160, 0], big: [249, 189, 31]}
            - !box-1.0.0 {small: [0, 190, 0], big: [31, 219, 31]}
            - !box-1.0.0 {small: [32, 190, 0], big: [63, 219, 31]}
            - !box-1.0.0 {small: [64, 190, 0], big: [95, 219, 31]}
            - !box-1.0.0 {small: [96, 190, 0], big: [127, 219, 31]}
            - !box-1.0.0 {small: [128, 190, 0], big: [159, 219, 31]}
            - !box-1.0.0 {small: [160, 190, 0], big: [189, 219, 31]}
            - !box-1.0.0 {small: [190, 190, 0], big: [219, 219, 31]}
            - !box-1.0.0 {small: [220, 190, 0], big: [249, 219, 31]}
            - !box-1.0.0 {small: [0, 220, 0], big: [31, 249, 31]}
            - !box-1.0.0 {small: [32, 220, 0], big: [63, 249, 31]}
            - !box-1.0.0 {small: [64, 220, 0], big: [95, 249, 31]}
            - !box-1.0.0 {small: [96, 220, 0], big: [127, 249, 31]}
            - !box-1.0.0 {small: [128, 220, 0], big: [159, 249, 31]}
            - !box-1.0.0 {small: [160, 220, 0], big: [189, 249, 31]}
            - !box-1.0.0 {small: [190, 220, 0], big: [219, 249, 31]}
            - !box-1.0.0 {small: [220, 220, 0], big: [249, 249, 31]}
            - !box-1.0.0 {small: [0, 0, 32], big: [31, 31, 63]}
            - !box-1.0.0 {small: [32, 0, 32], big: [63, 31, 63]}
            - !box-1.0.0 {small: [64, 0, 32], big: [95, 31, 63]}
            - !box-1.0.0 {small: [96, 0, 32], big: [127, 31, 63]}
            - !box-1.0.0 {small: [128, 0, 32], big: [159, 31, 63]}
            - !box-1.0.0 {small: [160, 0, 32], big: [189, 31, 63]}
            - !box-1.0.0 {small: [190, 0, 32], big: [219, 31, 63]}
            - !box-1.0.0 {small: [220, 0, 32], big: [249, 31, 63]}
            - !box-1.0.0 {small: [0, 32, 32], big: [31, 63, 63]}
            - !box-1.0.0 {small: [32, 32, 32], big: [63, 63, 63]}
            - !box-1.0.0 {small: [64, 32, 32], big: [95, 63, 63]}
            - !box-1.0.0 {small: [96, 32, 32], big: [127, 63, 63]}
            - !box-1.0.0 {small: [128, 32, 32], big: [159, 63, 63]}
            - !box-1.0.0 {small: [160, 32, 32], big: [189, 63, 63]}
            - !box-1.0.0 {small: [190, 32, 32], big: [219, 63, 63]}
            - !box-1.0.0 {small: [220, 32, 32], big: [249, 63, 63]}
            - !box-1.0.0 {small: [0, 64, 32], big: [31, 95, 63]}
            - !box-1.0.0 {small: [32, 64, 32], big: [63, 95, 63]}
            - !box-1.0.0 {small: [64, 64, 32], big: [95, 95, 63]}
            - !box-1.0.0 {small: [96, 64, 32], big: [127, 95, 63]}
            - !box-1.0.0 {small: [128, 64, 32], big: [159, 95, 63]}
            - !box-1.0.0 {small: [160, 64, 32], big: [189, 95, 63]}
            - !box-1.0.0 {small: [190, 64, 32], big: [219, 95, 63]}
            - !box-1.0.0 {small: [220, 64, 32], big: [249, 95, 63]}
            - !box-1.0.0 {small: [0, 96, 32], big: [31, 127, 63]}
            - !box-1.0.0 {small: [32, 96, 32], big: [63, 127, 63]}
            - !box-1.0.0 {small: [64, 96, 32], big: [95, 127, 63]}
            - !box-1.0.0 {small: [96, 96, 32], big: [127, 127, 63]}
            - !box-1.0.0 {small: [128, 96, 32], big: [159, 127, 63]}
            - !box-1.0.0 {small: [160, 96, 32], big: [189, 127, 63]}
            - !box-1.0.0 {small: [190, 96, 32], big: [219, 127, 63]}
            - !box-1.0.0 {small: [220, 96, 32], big: [249, 127, 63]}
            - !box-1.0.0 {small: [0, 128, 32], big: [31, 159, 63]}
            - !box-1.0.0 {small: [32, 128, 32], big: [63, 159, 63]}
            - !box-1.0.0 {small: [64, 128, 32], big: [95, 159, 63]}
            - !box-1.0.0 {small: [96, 128, 32], big: [127, 159, 63]}
            - !box-1.0.0 {small: [128, 128, 32], big: [159, 159, 63]}
            - !box-1.0.0 {small: [160, 128, 32], big: [189, 159, 63]}
            - !box-1.0.0 {small: [190, 128, 32], big: [219, 159, 63]}
            - !box-1.0.0 {small: [220, 128, 32], big: [249, 159, 63]}
            - !box-1.0.0 {small: [0, 160, 32], big: [31, 189, 63]}
            - !box-1.0.0 {small: [32, 160, 32], big: [63, 189, 63]}
            - !box-1.0.0 {small: [64, 160, 32], big: [95, 189, 63]}
            - !box-1.0.0 {small: [96, 160, 32], big: [127, 189, 63]}
            - !box-1.0.0 {small: [128, 160, 32], big: [159, 189, 63]}
            - !box-1.0.0 {small: [160, 160, 32], big: [189, 189, 63]}
            - !box-1.0.0 {small: [190, 160, 32], big: [219, 189, 63]}
            - !box-1.0.0 {small: [220, 160, 32], big: [249, 189, 63]}
            - !box-1.0.0 {small: [0, 190, 32], big: [31, 219, 63]}
            - !box-1.0.0 {small: [32, 190, 32], big: [63, 219, 63]}
            - !box-1.0.0 {small: [64, 190, 32], big: [95, 219, 63]}
            - !box-1.0.0 {small: [96, 190, 32], big: [127, 219, 63]}
            - !box-1.0.0 {small: [128, 190, 32], big: [159, 219, 63]}
            - !box-1.0.0 {small: [160, 190, 32], big: [189, 219, 63]}
            - !box-1.0.0 {small: [190, 190, 32], big: [219, 219, 63]}
            - !box-1.0.0 {small: [220, 190, 32], big: [249, 219, 63]}
            - !box-1.0.0 {small: [0, 220, 32], big: [31, 249, 63]}
            - !box-1.0.0 {small: [32, 220, 32], big: [63, 249, 63]}
            - !box-1.0.0 {small: [64, 220, 32], big: [95, 249, 63]}
            - !box-1.0.0 {small: [96, 220, 32], big: [127, 249, 63]}
            - !box-1.0.0 {small: [128, 220, 32], big: [159, 249, 63]}
            - !box-1.0.0 {small: [160, 220, 32], big: [189, 249, 63]}
            - !box-1.0.0 {small: [190, 220, 32], big: [219, 249, 63]}
            - !box-1.0.0 {small: [220, 220, 32], big: [249, 249, 63]}
            - !box-1.0.0 {small: [0, 0, 64], big: [31, 31, 95]}
            - !box-1.0.0 {small: [32, 0, 64], big: [63, 31, 95]}
            - !box-1.0.0 {small: [64, 0, 64], big: [95, 31, 95]}
            - !box-1.0.0 {small: [96, 0, 64], big: [127, 31, 95]}
            - !box-1.0.0 {small: [128, 0, 64], big: [159, 31, 95]}
            - !box-1.0.0 {small: [160, 0, 64], big: [189, 31, 95]}
            - !box-1.0.0 {small: [190, 0, 64], big: [219, 31, 95]}
            - !box-1.0.0 {small: [220, 0, 64], big: [249, 31, 95]}
            - !box-1.0.0 {small: [0, 32, 64], big: [31, 63, 95]}
            - !box-1.0.0 {small: [32, 32, 64], big: [63, 63, 95]}
            - !box-1.0.0 {small: [64, 32, 64], big: [95, 63, 95]}
            - !box-1.0.0 {small: [96, 32, 64], big: [127, 63, 95]}
            - !box-1.0.0 {small: [128, 32, 64], big: [159, 63, 95]}
            - !box-1.0.0 {small: [160, 32, 64], big: [189, 63, 95]}
            - !box-1.0.0 {small: [190, 32, 64], big: [219, 63, 95]}
            - !box-1.0.0 {small: [220, 32, 64], big: [249, 63, 95]}
            - !box-1.0.0 {small: [0, 64, 64], big: [31, 95, 95]}
            - !box-1.0.0 {small: [32, 64, 64], big: [63, 95, 95]}
            - !box-1.0.0 {small: [64, 64, 64], big: [95, 95, 95]}
            - !box-1.0.0 {small: [96, 64, 64], big: [127, 95, 95]}
            - !box-1.0.0 {small: [128, 64, 64], big: [159, 95, 95]}
            - !box-1.0.0 {small: [160, 64, 64], big: [189, 95, 95]}
            - !box-1.0.0 {small: [190, 64, 64], big: [219, 95, 95]}
            - !box-1.0.0 {small: [220, 64, 64], big: [249, 95, 95]}
            - !box-1.0.0 {small: [0, 96, 64], big: [31, 127, 95]}
            - !box-1.0.0 {small: [32, 96, 64], big: [63, 127, 95]}
            - !box-1.0.0 {small: [64, 96, 64], big: [95, 127, 95]}
            - !box-1.0.0 {small: [96, 96, 64], big: [127, 127, 95]}
            - !box-1.0.0 {small: [128, 96, 64], big: [159, 127, 95]}
            - !box-1.0.0 {small: [160, 96, 64], big: [189, 127, 95]}
            - !box-1.0.0 {small: [190, 96, 64], big: [219, 127, 95]}
            - !box-1.0.0 {small: [220, 96, 64], big: [249, 127, 95]}
            - !box-1.0.0 {small: [0, 128, 64], big: [31, 159, 95]}
            - !box-1.0.0 {small: [32, 128, 64], big: [63, 159, 95]}
            - !box-1.0.0 {small: [64, 128, 64], big: [95, 159, 95]}
            - !box-1.0.0 {small: [96, 128, 64], big: [127, 159, 95]}
            - !box-1.0.0 {small: [128, 128, 64], big: [159, 159, 95]}
            - !box-1.0.0 {small: [160, 128, 64], big: [189, 159, 95]}
            - !box-1.0.0 {small: [190, 128, 64], big: [219, 159, 95]}
            - !box-1.0.0 {small: [220, 128, 64], big: [249, 159, 95]}
            - !box-1.0.0 {small: [0, 160, 64], big: [31, 189, 95]}
            - !box-1.0.0 {small: [32, 160, 64], big: [63, 189, 95]}
            - !box-1.0.0 {small: [64, 160, 64], big: [95, 189, 95]}
            - !box-1.0.0 {small: [96, 160, 64], big: [127, 189, 95]}
            - !box-1.0.0 {small: [128, 160, 64], big: [159, 189, 95]}
            - !box-1.0.0 {small: [160, 160, 64], big: [189, 189, 95]}
            - !box-1.0.0 {small: [190, 160, 64], big: [219, 189, 95]}
            - !box-1.0.0 {small: [220, 160, 64], big: [249, 189, 95]}
            - !box-1.0.0 {small: [0, 190, 64], big: [31, 219, 95]}
            - !box-1.0.0 {small: [32, 190, 64], big: [63, 219, 95]}
            - !box-1.0.0 {small: [64, 190, 64], big: [95, 219, 95]}
            - !box-1.0.0 {small: [96, 190, 64], big: [127, 219, 95]}
            - !box-1.0.0 {small: [128, 190, 64], big: [159, 219, 95]}
            - !box-1.0.0 {small: [160, 190, 64], big: [189, 219, 95]}
            - !box-1.0.0 {small: [190, 190, 64], big: [219, 219, 95]}
            - !box-1.0.0 {small: [220, 190, 64], big: [249, 219, 95]}
            - !box-1.0.0 {small: [0, 220, 64], big: [31, 249, 95]}
            - !box-1.0.0 {small: [32, 220, 64], big: [63, 249, 95]}
            - !box-1.0.0 {small: [64, 220, 64], big: [95, 249, 95]}
            - !box-1.0.0 {small: [96, 220, 64], big: [127, 249, 95]}
            - !box-1.0.0 {small: [128, 220, 64], big: [159, 249, 95]}
            - !box-1.0.0 {small: [160, 220, 64], big: [189, 249, 95]}
            - !box-1.0.0 {small: [190, 220, 64], big: [219, 249, 95]}
            - !box-1.0.0 {small: [220, 220, 64], big: [249, 249, 95]}
            - !box-1.0.0 {small: [0, 0, 96], big: [31, 31, 127]}
            - !box-1.0.0 {small: [32, 0, 96], big: [63, 31, 127]}
            - !box-1.0.0 {small: [64, 0, 96], big: [95, 31, 127]}
            - !box-1.0.0 {small: [96, 0, 96], big: [127, 31, 127]}
            - !box-1.0.0 {small: [128, 0, 96], big: [159, 31, 127]}
            - !box-1.0.0 {small: [160, 0, 96], big: [189, 31, 127]}
            - !box-1.0.0 {small: [190, 0, 96], big: [219, 31, 127]}
            - !box-1.0.0 {small: [220, 0, 96], big: [249, 31, 127]}
            - !box-1.0.0 {small: [0, 32, 96], big: [31, 63, 127]}
            - !box-1.0.0 {small: [32, 32, 96], big: [63, 63, 127]}
            - !box-1.0.0 {small: [64, 32, 96], big: [95, 63, 127]}
            - !box-1.0.0 {small: [96, 32, 96], big: [127, 63, 127]}
            - !box-1.0.0 {small: [128, 32, 96], big: [159, 63, 127]}
            - !box-1.0.0 {small: [160, 32, 96], big: [189, 63, 127]}
            - !box-1.0.0 {small: [190, 32, 96], big: [219, 63, 127]}
            - !box-1.0.0 {small: [220, 32, 96], big: [249, 63, 127]}
            - !box-1.0.0 {small: [0, 64, 96], big: [31, 95, 127]}
            - !box-1.0.0 {small: [32, 64, 96], big: [63, 95, 127]}
            - !box-1.0.0 {small: [64, 64, 96], big: [95, 95, 127]}
            - !box-1.0.0 {small: [96, 64, 96], big: [127, 95, 127]}
            - !box-1.0.0 {small: [128, 64, 96], big: [159, 95, 127]}
            - !box-1.0.0 {small: [160, 64, 96], big: [189, 95, 127]}
            - !box-1.0.0 {small: [190, 64, 96], big: [219, 95, 127]}
            - !box-1.0.0 {small: [220, 64, 96], big: [249, 95, 127]}
            - !box-1.0.0 {small: [0, 96, 96], big: [31, 127, 127]}
            - !box-1.0.0 {small: [32, 96, 96], big: [63, 127, 127]}
            - !box-1.0.0 {small: [64, 96, 96], big: [95, 127, 127]}
            - !box-1.0.0 {small: [96, 96, 96], big: [127, 127, 127]}
            - !box-1.0.0 {small: [128, 96, 96], big: [159, 127, 127]}
            - !box-1.0.0 {small: [160, 96, 96], big: [189, 127, 127]}
            - !box-1.0.0 {small: [190, 96, 96], big: [219, 127, 127]}
            - !box-1.0.0 {small: [220, 96, 96], big: [249, 127, 127]}
            - !box-1.0.0 {small: [0, 128, 96], big: [31, 159, 127]}
            - !box-1.0.0 {small: [32, 128, 96], big: [63, 159, 127]}
            - !box-1.0.0 {small: [64, 128, 96], big: [95, 159, 127]}
            - !box-1.0.0 {small: [96, 128, 96], big: [127, 159, 127]}
            - !box-1.0.0 {small: [128, 128, 96], big: [159, 159, 127]}
            - !box-1.0.0 {small: [160, 128, 96], big: [189, 159, 127]}
            - !box-1.0.0 {small: [190, 128, 96], big: [219, 159, 127]}
            - !box-1.0.0 {small: [220, 128, 96], big: [249, 159, 127]}
            - !box-1.0.0 {small: [0, 160, 96], big: [31, 189, 127]}
            - !box-1.0.0 {small: [32, 160, 96], big: [63, 189, 127]}
            - !box-1.0.0 {small: [64, 160, 96], big: [95, 189, 127]}
            - !box-1.0.0 {small: [96, 160, 96], big: [127, 189, 127]}
            - !box-1.0.0 {small: [128, 160, 96], big: [159, 189, 127]}
            - !box-1.0.0 {small: [160, 160, 96], big: [189, 189, 127]}
            - !box-1.0.0 {small: [190, 160, 96], big: [219, 189, 127]}
            - !box-1.0.0 {small: [220, 160, 96], big: [249, 189, 127]}
            - !box-1.0.0 {small: [0, 190, 96], big: [31, 219, 127]}
            - !box-1.0.0 {small: [32, 190, 96], big: [63, 219, 127]}
            - !box-1.0.0 {small: [64, 190, 96], big: [95, 219, 127]}
            - !box-1.0.0 {small: [96, 190, 96], big: [127, 219, 127]}
            - !box-1.0.0 {small: [128, 190, 96], big: [159, 219, 127]}
            - !box-1.0.0 {small: [160, 190, 96], big: [189, 219, 127]}
            - !box-1.0.0 {small: [190, 190, 96], big: [219, 219, 127]}
            - !box-1.0.0 {small: [220, 190, 96], big: [249, 219, 127]}
            - !box-1.0.0 {small: [0, 220, 96], big: [31, 249, 127]}
            - !box-1.0.0 {small: [32, 220, 96], big: [63, 249, 127]}
            - !box-1.0.0 {small: [64, 220, 96], big: [95, 249, 127]}
            - !box-1.0.0 {small: [96, 220, 96], big: [127, 249, 127]}
            - !box-1.0.0 {small: [128, 220, 96], big: [159, 249, 127]}
            - !box-1.0.0 {small: [160, 220, 96], big: [189, 249, 127]}
            - !box-1.0.0 {small: [190, 220, 96], big: [219, 249, 127]}
            - !box-1.0.0 {small: [220, 220, 96], big: [249, 249, 127]}
            - !box-1.0.0 {small: [0, 0, 128], big: [31, 31, 159]}
            - !box-1.0.0 {small: [32, 0, 128], big: [63, 31, 159]}
            - !box-1.0.0 {small: [64, 0, 128], big: [95, 31, 159]}
            - !box-1.0.0 {small: [96, 0, 128], big: [127, 31, 159]}
            - !box-1.0.0 {small: [128, 0, 128], big: [159, 31, 159]}
            - !box-1.0.0 {small: [160, 0, 128], big: [189, 31, 159]}
            - !box-1.0.0 {small: [190, 0, 128], big: [219, 31, 159]}
            - !box-1.0.0 {small: [220, 0, 128], big: [249, 31, 159]}
            - !box-1.0.0 {small: [0, 32, 128], big: [31, 63, 159]}
            - !box-1.0.0 {small: [32, 32, 128], big: [63, 63, 159]}
            - !box-1.0.0 {small: [64, 32, 128], big: [95, 63, 159]}
            - !box-1.0.0 {small: [96, 32, 128], big: [127, 63, 159]}
            - !box-1.0.0 {small: [128, 32, 128], big: [159, 63, 159]}
            - !box-1.0.0 {small: [160, 32, 128], big: [189, 63, 159]}
            - !box-1.0.0 {small: [190, 32, 128], big: [219, 63, 159]}
            - !box-1.0.0 {small: [220, 32, 128], big: [249, 63, 159]}
            - !box-1.0.0 {small: [0, 64, 128], big: [31, 95, 159]}
            - !box-1.0.0 {small: [32, 64, 128], big: [63, 95, 159]}
            - !box-1.0.0 {small: [64, 64, 128], big: [95, 95, 159]}
            - !box-1.0.0 {small: [96, 64, 128], big: [127, 95, 159]}
            - !box-1.0.0 {small: [128, 64, 128], big: [159, 95, 159]}
            - !box-1.0.0 {small: [160, 64, 128], big: [189, 95, 159]}
            - !box-1.0.0 {small: [190, 64, 128], big: [219, 95, 159]}
            - !box-1.0.0 {small: [220, 64, 128], big: [249, 95, 159]}
            - !box-1.0.0 {small: [0, 96, 128], big: [31, 127, 159]}
            - !box-1.0.0 {small: [32, 96, 128], big: [63, 127, 159]}
            - !box-1.0.0 {small: [64, 96, 128], big: [95, 127, 159]}
            - !box-1.0.0 {small: [96, 96, 128], big: [127, 127, 159]}
            - !box-1.0.0 {small: [128, 96, 128], big: [159, 127, 159]}
            - !box-1.0.0 {small: [160, 96, 128], big: [189, 127, 159]}
            - !box-1.0.0 {small: [190, 96, 128], big: [219, 127, 159]}
            - !box-1.0.0 {small: [220, 96, 128], big: [249, 127, 159]}
            - !box-1.0.0 {small: [0, 128, 128], big: [31, 159, 159]}
            - !box-1.0.0 {small: [32, 128, 128], big: [63, 159, 159]}
            - !box-1.0.0 {small: [64, 128, 128], big: [95, 159, 159]}
            - !box-1.0.0 {small: [96, 128, 128], big: [127, 159, 159]}
            - !box-1.0.0 {small: [128, 128, 128], big: [159, 159, 159]}
            - !box-1.0.0 {small: [160, 128, 128], big: [189, 159, 159]}
            - !box-1.0.0 {small: [190, 128, 128], big: [219, 159, 159]}
            - !box-1.0.0 {small: [220, 128, 128], big: [249, 159, 159]}
            - !box-1.0.0 {small: [0, 160, 128], big: [31, 189, 159]}
            - !box-1.0.0 {small: [32, 160, 128], big: [63, 189, 159]}
            - !box-1.0.0 {small: [64, 160, 128], big: [95, 189, 159]}
            - !box-1.0.0 {small: [96, 160, 128], big: [127, 189, 159]}
            - !box-1.0.0 {small: [128, 160, 128], big: [159, 189, 159]}
            - !box-1.0.0 {small: [160, 160, 128], big: [189, 189, 159]}
            - !box-1.0.0 {small: [190, 160, 128], big: [219, 189, 159]}
            - !box-1.0.0 {small: [220, 160, 128], big: [249, 189, 159]}
            - !box-1.0.0 {small: [0, 190, 128], big: [31, 219, 159]}
            - !box-1.0.0 {small: [32, 190, 128], big: [63, 219, 159]}
            - !box-1.0.0 {small: [64, 190, 128], big: [95, 219, 159]}
            - !box-1.0.0 {small: [96, 190, 128], big: [127, 219, 159]}
            - !box-1.0.0 {small: [128, 190, 128], big: [159, 219, 159]}
            - !box-1.0.0 {small: [160, 190, 128], big: [189, 219, 159]}
            - !box-1.0.0 {small: [190, 190, 128], big: [219, 219, 159]}
            - !box-1.0.0 {small: [220, 190, 128], big: [249, 219, 159]}
            - !box-1.0.0 {small: [0, 220, 128], big: [31, 249, 159]}
            - !box-1.0.0 {small: [32, 220, 128], big: [63, 249, 159]}
            - !box-1.0.0 {small: [64, 220, 128], big: [95, 249, 159]}
            - !box-1.0.0 {small: [96, 220, 128], big: [127, 249, 159]}
            - !box-1.0.0 {small: [128, 220, 128], big: [159, 249, 159]}
            - !box-1.0.0 {small: [160, 220, 128], big: [189, 249, 159]}
            - !box-1.0.0 {small: [190, 220, 128], big: [219, 249, 159]}
            - !box-1.0.0 {small: [220, 220, 128], big: [249, 249, 159]}
            - !box-1.0.0 {small: [0, 0, 160], big: [31, 31, 189]}
            - !box-1.0.0 {small: [32, 0, 160], big: [63, 31, 189]}
            - !box-1.0.0 {small: [64, 0, 160], big: [95, 31, 189]}
            - !box-1.0.0 {small: [96, 0, 160], big: [127, 31, 189]}
            - !box-1.0.0 {small: [128, 0, 160], big: [159, 31, 189]}
            - !box-1.0.0 {small: [160, 0, 160], big: [189, 31, 189]}
            - !box-1.0.0 {small: [190, 0, 160], big: [219, 31, 189]}
            - !box-1.0.0 {small: [220, 0, 160], big: [249, 31, 189]}
            - !box-1.0.0 {small: [0, 32, 160], big: [31, 63, 189]}
            - !box-1.0.0 {small: [32, 32, 160], big: [63, 63, 189]}
            - !box-1.0.0 {small: [64, 32, 160], big: [95, 63, 189]}
            - !box-1.0.0 {small: [96, 32, 160], big: [127, 63, 189]}
            - !box-1.0.0 {small: [128, 32, 160], big: [159, 63, 189]}
            - !box-1.0.0 {small: [160, 32, 160], big: [189, 63, 189]}
            - !box-1.0.0 {small: [190, 32, 160], big: [219, 63, 189]}
            - !box-1.0.0 {small: [220, 32, 160], big: [249, 63, 189]}
            - !box-1.0.0 {small: [0, 64, 160], big: [31, 95, 189]}
            - !box-1.0.0 {small: [32, 64, 160], big: [63, 95, 189]}
            - !box-1.0.0 {small: [64, 64, 160], big: [95, 95, 189]}
            - !box-1.0.0 {small: [96, 64, 160], big: [127, 95, 189]}
            - !box-1.0.0 {small: [128, 64, 160], big: [159, 95, 189]}
            - !box-1.0.0 {small: [160, 64, 160], big: [189, 95, 189]}
            - !box-1.0.0 {small: [190, 64, 160], big: [219, 95, 189]}
            - !box-1.0.0 {small: [220, 64, 160], big: [249, 95, 189]}
            - !box-1.0.0 {small: [0, 96, 160], big: [31, 127, 189]}
            - !box-1.0.0 {small: [32, 96, 160], big: [63, 127, 189]}
            - !box-1.0.0 {small: [64, 96, 160], big: [95, 127, 189]}
            - !box-1.0.0 {small: [96, 96, 160], big: [127, 127, 189]}
            - !box-1.0.0 {small: [128, 96, 160], big: [159, 127, 189]}
            - !box-1.0.0 {small: [160, 96, 160], big: [189, 127, 189]}
            - !box-1.0.0 {small: [190, 96, 160], big: [219, 127, 189]}
            - !box-1.0.0 {small: [220, 96, 160], big: [249, 127, 189]}
            - !box-1.0.0 {small: [0, 128, 160], big: [31, 159, 189]}
            - !box-1.0.0 {small: [32, 128, 160], big: [63, 159, 189]}
            - !box-1.0.0 {small: [64, 128, 160], big: [95, 159, 189]}
            - !box-1.0.0 {small: [96, 128, 160], big: [127, 159, 189]}
            - !box-1.0.0 {small: [128, 128, 160], big: [159, 159, 189]}
            - !box-1.0.0 {small: [160, 128, 160], big: [189, 159, 189]}
            - !box-1.0.0 {small: [190, 128, 160], big: [219, 159, 189]}
            - !box-1.0.0 {small: [220, 128, 160], big: [249, 159, 189]}
            - !box-1.0.0 {small: [0, 160, 160], big: [31, 189, 189]}
            - !box-1.0.0 {small: [32, 160, 160], big: [63, 189, 189]}
            - !box-1.0.0 {small: [64, 160, 160], big: [95, 189, 189]}
            - !box-1.0.0 {small: [96, 160, 160], big: [127, 189, 189]}
            - !box-1.0.0 {small: [128, 160, 160], big: [159, 189, 189]}
            - !box-1.0.0 {small: [160, 160, 160], big: [189, 189, 189]}
            - !box-1.0.0 {small: [190, 160, 160], big: [219, 189, 189]}
            - !box-1.0.0 {small: [220, 160, 160], big: [249, 189, 189]}
            - !box-1.0.0 {small: [0, 190, 160], big: [31, 219, 189]}
            - !box-1.0.0 {small: [32, 190, 160], big: [63, 219, 189]}
            - !box-1.0.0 {small: [64, 190, 160], big: [95, 219, 189]}
            - !box-1.0.0 {small: [96, 190, 160], big: [127, 219, 189]}
            - !box-1.0.0 {small: [128, 190, 160], big: [159, 219, 189]}
            - !box-1.0.0 {small: [160, 190, 160], big: [189, 219, 189]}
            - !box-1.0.0 {small: [190, 190, 160], big: [219, 219, 189]}
            - !box-1.0.0 {small: [220, 190, 160], big: [249, 219, 189]}
            - !box-1.0.0 {small: [0, 220, 160], big: [31, 249, 189]}
            - !box-1.0.0 {small: [32, 220, 160], big: [63, 249, 189]}
            - !box-1.0.0 {small: [64, 220, 160], big: [95, 249, 189]}
            - !box-1.0.0 {small: [96, 220, 160], big: [127, 249, 189]}
            - !box-1.0.0 {small: [128, 220, 160], big: [159, 249, 189]}
            - !box-1.0.0 {small: [160, 220, 160], big: [189, 249, 189]}
            - !box-1.0.0 {small: [190, 220, 160], big: [219, 249, 189]}
            - !box-1.0.0 {small: [220, 220, 160], big: [249, 249, 189]}
            - !box-1.0.0 {small: [0, 0, 190], big: [31, 31, 219]}
            - !box-1.0.0 {small: [32, 0, 190], big: [63, 31, 219]}
            - !box-1.0.0 {small: [64, 0, 190], big: [95, 31, 219]}
            - !box-1.0.0 {small: [96, 0, 190], big: [127, 31, 219]}
            - !box-1.0.0 {small: [128, 0, 190], big: [159, 31, 219]}
            - !box-1.0.0 {small: [160, 0, 190], big: [189, 31, 219]}
            - !box-1.0.0 {small: [190, 0, 190], big: [219, 31, 219]}
            - !box-1.0.0 {small: [220, 0, 190], big: [249, 31, 219]}
            - !box-1.0.0 {small: [0, 32, 190], big: [31, 63, 219]}
            - !box-1.0.0 {small: [32, 32, 190], big: [63, 63, 219]}
            - !box-1.0.0 {small: [64, 32, 190], big: [95, 63, 219]}
            - !box-1.0.0 {small: [96, 32, 190], big: [127, 63, 219]}
            - !box-1.0.0 {small: [128, 32, 190], big: [159, 63, 219]}
            - !box-1.0.0 {small: [160, 32, 190], big: [189, 63, 219]}
            - !box-1.0.0 {small: [190, 32, 190], big: [219, 63, 219]}
            - !box-1.0.0 {small: [220, 32, 190], big: [249, 63, 219]}
            - !box-1.0.0 {small: [0, 64, 190], big: [31, 95, 219]}
            - !box-1.0.0 {small: [32, 64, 190], big: [63, 95, 219]}
            - !box-1.0.0 {small: [64, 64, 190], big: [95, 95, 219]}
            - !box-1.0.0 {small: [96, 64, 190], big: [127, 95, 219]}
            - !box-1.0.0 {small: [128, 64, 190], big: [159, 95, 219]}
            - !box-1.0.0 {small: [160, 64, 190], big: [189, 95, 219]}
            - !box-1.0.0 {small: [190, 64, 190], big: [219, 95, 219]}
            - !box-1.0.0 {small: [220, 64, 190], big: [249, 95, 219]}
            - !box-1.0.0 {small: [0, 96, 190], big: [31, 127, 219]}
            - !box-1.0.0 {small: [32, 96, 190], big: [63, 127, 219]}
            - !box-1.0.0 {small: [64, 96, 190], big: [95, 127, 219]}
            - !box-1.0.0 {small: [96, 96, 190], big: [127, 127, 219]}
            - !box-1.0.0 {small: [128, 96, 190], big: [159, 127, 219]}
            - !box-1.0.0 {small: [160, 96, 190], big: [189, 127, 219]}
            - !box-1.0.0 {small: [190, 96, 190], big: [219, 127, 219]}
            - !box-1.0.0 {small: [220, 96, 190], big: [249, 127, 219]}
            - !box-1.0.0 {small: [0, 128, 190], big: [31, 159, 219]}
            - !box-1.0.0 {small: [32, 128, 190], big: [63, 159, 219]}
            - !box-1.0.0 {small: [64, 128, 190], big: [95, 159, 219]}
            - !box-1.0.0 {small: [96, 128, 190], big: [127, 159, 219]}
            - !box-1.0.0 {small: [128, 128, 190], big: [159, 159, 219]}
            - !box-1.0.0 {small: [160, 128, 190], big: [189, 159, 219]}
            - !box-1.0.0 {small: [190, 128, 190], big: [219, 159, 219]}
            - !box-1.0.0 {small: [220, 128, 190], big: [249, 159, 219]}
            - !box-1.0.0 {small: [0, 160, 190], big: [31, 189, 219]}
            - !box-1.0.0 {small: [32, 160, 190], big: [63, 189, 219]}
            - !box-1.0.0 {small: [64, 160, 190], big: [95, 189, 219]}
            - !box-1.0.0 {small: [96, 160, 190], big: [127, 189, 219]}
            - !box-1.0.0 {small: [128, 160, 190], big: [159, 189, 219]}
            - !box-1.0.0 {small: [160, 160, 190], big: [189, 189, 219]}
            - !box-1.0.0 {small: [190, 160, 190], big: [219, 189, 219]}
            - !box-1.0.0 {small: [220, 160, 190], big: [249, 189, 219]}
            - !box-1.0.0 {small: [0, 190, 190], big: [31, 219, 219]}
            - !box-1.0.0 {small: [32, 190, 190], big: [63, 219, 219]}
            - !box-1.0.0 {small: [64, 190, 190], big: [95, 219, 219]}
            - !box-1.0.0 {small: [96, 190, 190], big: [127, 219, 219]}
            - !box-1.0.0 {small: [128, 190, 190], big: [159, 219, 219]}
            - !box-1.0.0 {small: [160, 190, 190], big: [189, 219, 219]}
            - !box-1.0.0 {small: [190, 190, 190], big: [219, 219, 219]}
            - !box-1.0.0 {small: [220, 190, 190], big: [249, 219, 219]}
            - !box-1.0.0 {small: [0, 220, 190], big: [31, 249, 219]}
            - !box-1.0.0 {small: [32, 220, 190], big: [63, 249, 219]}
            - !box-1.0.0 {small: [64, 220, 190], big: [95, 249, 219]}
            - !box-1.0.0 {small: [96, 220, 190], big: [127, 249, 219]}
            - !box-1.0.0 {small: [128, 220, 190], big: [159, 249, 219]}
            - !box-1.0.0 {small: [160, 220, 190], big: [189, 249, 219]}
            - !box-1.0.0 {small: [190, 220, 190], big: [219, 249, 219]}
            - !box-1.0.0 {small: [220, 220, 190], big: [249, 249, 219]}
            - !box-1.0.0 {small: [0, 0, 220], big: [31, 31, 249]}
            - !box-1.0.0 {small: [32, 0, 220], big: [63, 31, 249]}
            - !box-1.0.0 {small: [64, 0, 220], big: [95, 31, 249]}
            - !box-1.0.0 {small: [96, 0, 220], big: [127, 31, 249]}
            - !box-1.0.0 {small: [128, 0, 220], big: [159, 31, 249]}
            - !box-1.0.0 {small: [160, 0, 220], big: [189, 31, 249]}
            - !box-1.0.0 {small: [190, 0, 220], big: [219, 31, 249]}
            - !box-1.0.0 {small: [220, 0, 220], big: [249, 31, 249]}
            - !box-1.0.0 {small: [0, 32, 220], big: [31, 63, 249]}
            - !box-1.0.0 {small: [32, 32, 220], big: [63, 63, 249]}
            - !box-1.0.0 {small: [64, 32, 220], big: [95, 63, 249]}
            - !box-1.0.0 {small: [96, 32, 220], big: [127, 63, 249]}
            - !box-1.0.0 {small: [128, 32, 220], big: [159, 63, 249]}
            - !box-1.0.0 {small: [160, 32, 220], big: [189, 63, 249]}
            - !box-1.0.0 {small: [190, 32, 220], big: [219, 63, 249]}
            - !box-1.0.0 {small: [220, 32, 220], big: [249, 63, 249]}
            - !box-1.0.0 {small: [0, 64, 220], big: [31, 95, 249]}
            - !box-1.0.0 {small: [32, 64, 220], big: [63, 95, 249]}
            - !box-1.0.0 {small: [64, 64, 220], big: [95, 95, 249]}
            - !box-1.0.0 {small: [96, 64, 220], big: [127, 95, 249]}
            - !box-1.0.0 {small: [128, 64, 220], big: [159, 95, 249]}
            - !box-1.0.0 {small: [160, 64, 220], big: [189, 95, 249]}
            - !box-1.0.0 {small: [190, 64, 220], big: [219, 95, 249]}
            - !box-1.0.0 {small: [220, 64, 220], big: [249, 95, 249]}
            - !box-1.0.0 {small: [0, 96, 220], big: [31, 127, 249]}
            - !box-1.0.0 {small: [32, 96, 220], big: [63, 127, 249]}
            - !box-1.0.0 {small: [64, 96, 220], big: [95, 127, 249]}
            - !box-1.0.0 {small: [96, 96, 220], big: [127, 127, 249]}
            - !box-1.0.0 {small: [128, 96, 220], big: [159, 127, 249]}
            - !box-1.0.0 {small: [160, 96, 220], big: [189, 127, 249]}
            - !box-1.0.0 {small: [190, 96, 220], big: [219, 127, 249]}
            - !box-1.0.0 {small: [220, 96, 220], big: [249, 127, 249]}
            - !box-1.0.0 {small: [0, 128, 220], big: [31, 159, 249]}
            - !box-1.0.0 {small: [32, 128, 220], big: [63, 159, 249]}
            - !box-1.0.0 {small: [64, 128, 220], big: [95, 159, 249]}
            - !box-1.0.0 {small: [96, 128, 220], big: [127, 159, 249]}
            - !box-1.0.0 {small: [128, 128, 220], big: [159, 159, 249]}
            - !box-1.0.0 {small: [160, 128, 220], big: [189, 159, 249]}
            - !box-1.0.0 {small: [190, 128, 220], big: [219, 159, 249]}
            - !box-1.0.0 {small: [220, 128, 220], big: [249, 159, 249]}
            - !box-1.0.0 {small: [0, 160, 220], big: [31, 189, 249]}
            - !box-1.0.0 {small: [32, 160, 220], big: [63, 189, 249]}
            - !box-1.0.0 {small: [64, 160, 220], big: [95, 189, 249]}
            - !box-1.0.0 {small: [96, 160, 220], big: [127, 189, 249]}
            - !box-1.0.0 {small: [128, 160, 220], big: [159, 189, 249]}
            - !box-1.0.0 {small: [160, 160, 220], big: [189, 189, 249]}
            - !box-1.0.0 {small: [190, 160, 220], big: [219, 189, 249]}
            - !box-1.0.0 {small: [220, 160, 220], big: [249, 189, 249]}
            - !box-1.0.0 {small: [0, 190, 220], big: [31, 219, 249]}
            - !box-1.0.0 {small: [32, 190, 220], big: [63, 219, 249]}
            - !box-1.0.0 {small: [64, 190, 220], big: [95, 219, 249]}
            - !box-1.0.0 {small: [96, 190, 220], big: [127, 219, 249]}
            - !box-1.0.0 {small: [128, 190, 220], big: [159, 219, 249]}
            - !box-1.0.0 {small: [160, 190, 220], big: [189, 219, 249]}
            - !box-1.0.0 {small: [190, 190, 220], big: [219, 219, 249]}
            - !box-1.0.0 {small: [220, 190, 220], big: [249, 219, 249]}
            - !box-1.0.0 {small: [0, 220, 220], big: [31, 249, 249]}
            - !box-1.0.0 {small: [32, 220, 220], big: [63, 249, 249]}
            - !box-1.0.0 {small: [64, 220, 220], big: [95, 249, 249]}
            - !box-1.0.0 {small: [96, 220, 220], big: [127, 249, 249]}
            - !box-1.0.0 {small: [128, 220, 220], big: [159, 249, 249]}
            - !box-1.0.0 {small: [160, 220, 220], big: [189, 249, 249]}
            - !box-1.0.0 {small: [190, 220, 220], big: [219, 249, 249]}
            - !box-1.0.0 {small: [220, 220, 220], big: [249, 249, 249]}
          - !boxarray-1.0.0
            - !box-1.0.0 {small: [188, 188, 188], big: [219, 219, 219]}
            - !box-1.0.0 {small: [220, 188, 188], big: [251, 219, 219]}
            - !box-1.0.0 {small: [252, 188, 188], big: [283, 219, 219]}
            - !box-1.0.0 {small: [284, 188, 188], big: [311, 219, 219]}
            - !box-1.0.0 {small: [188, 220, 188], big: [219, 251, 219]}
            - !box-1.0.0 {small: [220, 220, 188], big: [251, 251, 219]}
            - !box-1.0.0 {small: [252, 220, 188], big: [283, 251, 219]}
            - !box-1.0.0 {small: [284, 220, 188], big: [311, 251, 219]}
            - !box-1.0.0 {small: [188, 252, 188], big: [219, 283, 219]}
            - !box-1.0.0 {small: [220, 252, 188], big: [251, 283, 219]}
            - !box-1.0.0 {small: [252, 252, 188], big: [283, 283, 219]}
            - !box-1.0.0 {small: [284, 252, 188], big: [311, 283, 219]}
            - !box-1.0.0 {small: [188, 284, 188], big: [219, 311, 219]}
            - !box-1.0.0 {small: [220, 284, 188], big: [251, 311, 219]}
            - !box-1.0.0 {small: [252, 284, 188], big: [283, 311, 219]}
            - !box-1.0.0 {small: [284, 284, 188], big: [311, 311, 219]}
            - !box-1.0.0 {small: [188, 188, 220], big: [219, 219, 251]}
            - !box-1.0.0 {small: [220, 188, 220], big: [251, 219, 251]}
            - !box-1.0.0 {small: [252, 188, 220], big: [283, 219, 251]}
            - !box-1.0.0 {small: [284, 188, 220], big: [311, 219, 251]}
            - !box-1.0.0 {small: [188, 220, 220], big: [219, 251, 251]}
            - !box-1.0.0 {small: [220, 220, 220], big: [251, 251, 251]}
            - !box-1.0.0 {small: [252, 220, 220], big: [283, 251, 251]}
            - !box-1.0.0 {small: [284, 220, 220], big: [311, 251, 251]}
            - !box-1.0.0 {small: [188, 252, 220], big: [219, 283, 251]}
            - !box-1.0.0 {small: [220, 252, 220], big: [251, 283, 251]}
            - !box-1.0.0 {small: [252, 252, 220], big: [283, 283, 251]}
            - !box-1.0.0 {small: [284, 252, 220], big: [311, 283, 251]}
            - !box-1.0.0 {small: [188, 284, 220], big: [219, 311, 251]}
            - !box-1.0.0 {small: [220, 284, 220], big: [251, 311, 251]}
            - !box-1.0.0 {small: [252, 284, 220], big: [283, 311, 251]}
            - !box-1.0.0 {small: [284, 284, 220], big: [311, 311, 251]}
            - !box-1.0.0 {small: [188, 188, 252], big: [219, 219, 283]}
            - !box-1.0.0 {small: [220, 188, 252], big: [251, 219, 283]}
            - !box-1.0.0 {small: [252, 188, 252], big: [283, 219, 283]}
            - !box-1.0.0 {small: [284, 188, 252], big: [311, 219, 283]}
            - !box-1.0.0 {small: [188, 220, 252], big: [219, 251, 283]}
            - !box-1.0.0 {small: [220, 220, 252], big: [251, 251, 283]}
            - !box-1.0.0 {small: [252, 220, 252], big: [283, 251, 283]}
            - !box-1.0.0 {small: [284, 220, 252], big: [311, 251, 283]}
            - !box-1.0.0 {small: [188, 252, 252], big: [219, 283, 283]}
            - !box-1.0.0 {small: [220, 252, 252], big: [251, 283, 283]}
            - !box-1.0.0 {small: [252, 252, 252], big: [283, 283, 283]}
            - !box-1.0.0 {small: [284, 252, 252], big: [311, 283, 283]}
            - !box-1.0.0 {small: [188, 284, 252], big: [219, 311, 283]}
            - !box-1.0.0 {small: [220, 284, 252], big: [251, 311, 283]}
            - !box-1.0.0 {small: [252, 284, 252], big: [283, 311, 283]}
            - !box-1.0.0 {small: [284, 284, 252], big: [311, 311, 283]}
            - !box-1.0.0 {small: [188, 188, 284], big: [219, 219, 311]}
            - !box-1.0.0 {small: [220, 188, 284], big: [251, 219, 311]}
            - !box-1.0.0 {small: [252, 188, 284], big: [283, 219, 311]}
            - !box-1.0.0 {small: [284, 188, 284], big: [311, 219, 311]}
            - !box-1.0.0 {small: [188, 220, 284], big: [219, 251, 311]}
            - !box-1.0.0 {small: [220, 220, 284], big: [251, 251, 311]}
            - !box-1.0.0 {small: [252, 220, 284], big: [283, 251, 311]}
            - !box-1.0.0 {small: [284, 220, 284], big: [311, 251, 311]}
            - !box-1.0.0 {small: [188, 252, 284], big: [219, 283, 311]}
            - !box-1.0.0 {small: [220, 252, 284], big: [251, 283, 311]}
            - !box-1.0.0 {small: [252, 252, 284], big: [283, 283, 311]}
            - !box-1.0.0 {small: [284, 252, 284], big: [311, 283, 311]}
            - !box-1.0.0 {small: [188, 284, 284], big: [219, 311, 311]}
            - !box-1.0.0 {small: [220, 284, 284], big: [251, 311, 311]}
            - !box-1.0.0 {small: [252, 284, 284], big: [283, 311, 311]}
            - !box-1.0.0 {small: [284, 284, 284], big: [311, 311, 311]}
      leveldata:
        - !leveldata-1.1.0
          patch: 0
          level: 0
          is_subcycling_level: false
          iteration: !rational-1.0.0 [125, 1]
          delta_iteration: !rational-1.0.0 [1, 1]
          fab: !fabarraybase-1.0.0
            ixType: [0, 0, 0]
            nGrowVect: [3, 3, 3]
            boxArray: !boxarray-1.0.0
              - !box-1.0.0 {small: [0, 0, 0], big: [31, 31, 31]}
              - !box-1.0.0 {small: [32, 0, 0], big: [63, 31, 31]}
              - !box-1.0.0 {small: [64, 0, 0], big: [95, 31, 31]}
              - !box-1.0.0 {small: [96, 0, 0], big: [127, 31, 31]}
              - !box-1.0.0 {small: [128, 0, 0], big: [159, 31, 31]}
              - !box-1.0.0 {small: [160, 0, 0], big: [189, 31, 31]}
              - !box-1.0.0 {small: [190, 0, 0], big: [219, 31, 31]}
              - !box-1.0.0 {small: [220, 0, 0], big: [249, 31, 31]}
              - !box-1.0.0 {small: [0, 32, 0], big: [31, 63, 31]}
              - !box-1.0.0 {small: [32, 32, 0], big: [63, 63, 31]}
              - !box-1.0.0 {small: [64, 32, 0], big: [95, 63, 31]}
              - !box-1.0.0 {small: [96, 32, 0], big: [127, 63, 31]}
              - !box-1.0.0 {small: [128, 32, 0], big: [159, 63, 31]}
              - !box-1.0.0 {small: [160, 32, 0], big: [189, 63, 31]}
              - !box-1.0.0 {small: [190, 32, 0], big: [219, 63, 31]}
              - !box-1.0.0 {small: [220, 32, 0], big: [249, 63, 31]}
              - !box-1.0.0 {small: [0, 64, 0], big: [31, 95, 31]}
              - !box-1.0.0 {small: [32, 64, 0], big: [63, 95, 31]}
              - !box-1.0.0 {small: [64, 64, 0], big: [95, 95, 31]}
              - !box-1.0.0 {small: [96, 64, 0], big: [127, 95, 31]}
              - !box-1.0.0 {small: [128, 64, 0], big: [159, 95, 31]}
              - !box-1.0.0 {small: [160, 64, 0], big: [189, 95, 31]}
              - !box-1.0.0 {small: [190, 64, 0], big: [219, 95, 31]}
              - !box-1.0.0 {small: [220, 64, 0], big: [249, 95, 31]}
              - !box-1.0.0 {small: [0, 96, 0], big: [31, 127, 31]}
              - !box-1.0.0 {small: [32, 96, 0], big: [63, 127, 31]}
              - !box-1.0.0 {small: [64, 96, 0], big: [95, 127, 31]}
              - !box-1.0.0 {small: [96, 96, 0], big: [127, 127, 31]}
              - !box-1.0.0 {small: [128, 96, 0], big: [159, 127, 31]}
              - !box-1.0.0 {small: [160, 96, 0], big: [189, 127, 31]}
              - !box-1.0.0 {small: [190, 96, 0], big: [219, 127, 31]}
              - !box-1.0.0 {small: [220, 96, 0], big: [249, 127, 31]}
              - !box-1.0.0 {small: [0, 128, 0], big: [31, 159, 31]}
              - !box-1.0.0 {small: [32, 128, 0], big: [63, 159, 31]}
              - !box-1.0.0 {small: [64, 128, 0], big: [95, 159, 31]}
              - !box-1.0.0 {small: [96, 128, 0], big: [127, 159, 31]}
              - !box-1.0.0 {small: [128, 128, 0], big: [159, 159, 31]}
              - !box-1.0.0 {small: [160, 128, 0], big: [189, 159, 31]}
              - !box-1.0.0 {small: [190, 128, 0], big: [219, 159, 31]}
              - !box-1.0.0 {small: [220, 128, 0], big: [249, 159, 31]}
              - !box-1.0.0 {small: [0, 160, 0], big: [31, 189, 31]}
              - !box-1.0.0 {small: [32, 160, 0], big: [63, 189, 31]}
              - !box-1.0.0 {small: [64, 160, 0], big: [95, 189, 31]}
              - !box-1.0.0 {small: [96, 160, 0], big: [127, 189, 31]}
              - !box-1.0.0 {small: [128, 160, 0], big: [159, 189, 31]}
              - !box-1.0.0 {small: [160, 160, 0], big: [189, 189, 31]}
              - !box-1.0.0 {small: [190, 160, 0], big: [219, 189, 31]}
              - !box-1.0.0 {small: [220, 160, 0], big: [249, 189, 31]}
              - !box-1.0.0 {small: [0, 190, 0], big: [31, 219, 31]}
              - !box-1.0.0 {small: [32, 190, 0], big: [63, 219, 31]}
              - !box-1.0.0 {small: [64, 190, 0], big: [95, 219, 31]}
              - !box-1.0.0 {small: [96, 190, 0], big: [127, 219, 31]}
              - !box-1.0.0 {small: [128, 190, 0], big: [159, 219, 31]}
              - !box-1.0.0 {small: [160, 190, 0], big: [189, 219, 31]}
              - !box-1.0.0 {small: [190, 190, 0], big: [219, 219, 31]}
              - !box-1.0.0 {small: [220, 190, 0], big: [249, 219, 31]}
              - !box-1.0.0 {small: [0, 220, 0], big: [31, 249, 31]}
              - !box-1.0.0 {small: [32, 220, 0], big: [63, 249, 31]}
              - !box-1.0.0 {small: [64, 220, 0], big: [95, 249, 31]}
              - !box-1.0.0 {small: [96, 220, 0], big: [127, 249, 31]}
              - !box-1.0.0 {small: [128, 220, 0], big: [159, 249, 31]}
              - !box-1.0.0 {small: [160, 220, 0], big: [189, 249, 31]}
              - !box-1.0.0 {small: [190, 220, 0], big: [219, 249, 31]}
              - !box-1.0.0 {small: [220, 220, 0], big: [249, 249, 31]}
              - !box-1.0.0 {small: [0, 0, 32], big: [31, 31, 63]}
              - !box-1.0.0 {small: [32, 0, 32], big: [63, 31, 63]}
              - !box-1.0.0 {small: [64, 0, 32], big: [95, 31, 63]}
              - !box-1.0.0 {small: [96, 0, 32], big: [127, 31, 63]}
              - !box-1.0.0 {small: [128, 0, 32], big: [159, 31, 63]}
              - !box-1.0.0 {small: [160, 0, 32], big: [189, 31, 63]}
              - !box-1.0.0 {small: [190, 0, 32], big: [219, 31, 63]}
              - !box-1.0.0 {small: [220, 0, 32], big: [249, 31, 63]}
              - !box-1.0.0 {small: [0, 32, 32], big: [31, 63, 63]}
              - !box-1.0.0 {small: [32, 32, 32], big: [63, 63, 63]}
              - !box-1.0.0 {small: [64, 32, 32], big: [95, 63, 63]}
              - !box-1.0.0 {small: [96, 32, 32], big: [127, 63, 63]}
              - !box-1.0.0 {small: [128, 32, 32], big: [159, 63, 63]}
              - !box-1.0.0 {small: [160, 32, 32], big: [189, 63, 63]}
              - !box-1.0.0 {small: [190, 32, 32], big: [219, 63, 63]}
              - !box-1.0.0 {small: [220, 32, 32], big: [249, 63, 63]}
              - !box-1.0.0 {small: [0, 64, 32], big: [31, 95, 63]}
              - !box-1.0.0 {small: [32, 64, 32], big: [63, 95, 63]}
              - !box-1.0.0 {small: [64, 64, 32], big: [95, 95, 63]}
              - !box-1.0.0 {small: [96, 64, 32], big: [127, 95, 63]}
              - !box-1.0.0 {small: [128, 64, 32], big: [159, 95, 63]}
              - !box-1.0.0 {small: [160, 64, 32], big: [189, 95, 63]}
              - !box-1.0.0 {small: [190, 64, 32], big: [219, 95, 63]}
              - !box-1.0.0 {small: [220, 64, 32], big: [249, 95, 63]}
              - !box-1.0.0 {small: [0, 96, 32], big: [31, 127, 63]}
              - !box-1.0.0 {small: [32, 96, 32], big: [63, 127, 63]}
              - !box-1.0.0 {small: [64, 96, 32], big: [95, 127, 63]}
              - !box-1.0.0 {small: [96, 96, 32], big: [127, 127, 63]}
              - !box-1.0.0 {small: [128, 96, 32], big: [159, 127, 63]}
              - !box-1.0.0 {small: [160, 96, 32], big: [189, 127, 63]}
              - !box-1.0.0 {small: [190, 96, 32], big: [219, 127, 63]}
              - !box-1.0.0 {small: [220, 96, 32], big: [249, 127, 63]}
              - !box-1.0.0 {small: [0, 128, 32], big: [31, 159, 63]}
              - !box-1.0.0 {small: [32, 128, 32], big: [63, 159, 63]}
              - !box-1.0.0 {small: [64, 128, 32], big: [95, 159, 63]}
              - !box-1.0.0 {small: [96, 128, 32], big: [127, 159, 63]}
              - !box-1.0.0 {small: [128, 128, 32], big: [159, 159, 63]}
              - !box-1.0.0 {small: [160, 128, 32], big: [189, 159, 63]}
              - !box-1.0.0 {small: [190, 128, 32], big: [219, 159, 63]}
              - !box-1.0.0 {small: [220, 128, 32], big: [249, 159, 63]}
              - !box-1.0.0 {small: [0, 160, 32], big: [31, 189, 63]}
              - !box-1.0.0 {small: [32, 160, 32], big: [63, 189, 63]}
              - !box-1.0.0 {small: [64, 160, 32], big: [95, 189, 63]}
              - !box-1.0.0 {small: [96, 160, 32], big: [127, 189, 63]}
              - !box-1.0.0 {small: [128, 160, 32], big: [159, 189, 63]}
              - !box-1.0.0 {small: [160, 160, 32], big: [189, 189, 63]}
              - !box-1.0.0 {small: [190, 160, 32], big: [219, 189, 63]}
              - !box-1.0.0 {small: [220, 160, 32], big: [249, 189, 63]}
              - !box-1.0.0 {small: [0, 190, 32], big: [31, 219, 63]}
              - !box-1.0.0 {small: [32, 190, 32], big: [63, 219, 63]}
              - !box-1.0.0 {small: [64, 190, 32], big: [95, 219, 63]}
              - !box-1.0.0 {small: [96, 190, 32], big: [127, 219, 63]}
              - !box-1.0.0 {small: [128, 190, 32], big: [159, 219, 63]}
              - !box-1.0.0 {small: [160, 190, 32], big: [189, 219, 63]}
              - !box-1.0.0 {small: [190, 190, 32], big: [219, 219, 63]}
              - !box-1.0.0 {small: [220, 190, 32], big: [249, 219, 63]}
              - !box-1.0.0 {small: [0, 220, 32], big: [31, 249, 63]}
              - !box-1.0.0 {small: [32, 220, 32], big: [63, 249, 63]}
              - !box-1.0.0 {small: [64, 220, 32], big: [95, 249, 63]}
              - !box-1.0.0 {small: [96, 220, 32], big: [127, 249, 63]}
              - !box-1.0.0 {small: [128, 220, 32], big: [159, 249, 63]}
              - !box-1.0.0 {small: [160, 220, 32], big: [189, 249, 63]}
              - !box-1.0.0 {small: [190, 220, 32], big: [219, 249, 63]}
              - !box-1.0.0 {small: [220, 220, 32], big: [249, 249, 63]}
              - !box-1.0.0 {small: [0, 0, 64], big: [31, 31, 95]}
              - !box-1.0.0 {small: [32, 0, 64], big: [63, 31, 95]}
              - !box-1.0.0 {small: [64, 0, 64], big: [95, 31, 95]}
              - !box-1.0.0 {small: [96, 0, 64], big: [127, 31, 95]}
              - !box-1.0.0 {small: [128, 0, 64], big: [159, 31, 95]}
              - !box-1.0.0 {small: [160, 0, 64], big: [189, 31, 95]}
              - !box-1.0.0 {small: [190, 0, 64], big: [219, 31, 95]}
              - !box-1.0.0 {small: [220, 0, 64], big: [249, 31, 95]}
              - !box-1.0.0 {small: [0, 32, 64], big: [31, 63, 95]}
              - !box-1.0.0 {small: [32, 32, 64], big: [63, 63, 95]}
              - !box-1.0.0 {small: [64, 32, 64], big: [95, 63, 95]}
              - !box-1.0.0 {small: [96, 32, 64], big: [127, 63, 95]}
              - !box-1.0.0 {small: [128, 32, 64], big: [159, 63, 95]}
              - !box-1.0.0 {small: [160, 32, 64], big: [189, 63, 95]}
              - !box-1.0.0 {small: [190, 32, 64], big: [219, 63, 95]}
              - !box-1.0.0 {small: [220, 32, 64], big: [249, 63, 95]}
              - !box-1.0.0 {small: [0, 64, 64], big: [31, 95, 95]}
              - !box-1.0.0 {small: [32, 64, 64], big: [63, 95, 95]}
              - !box-1.0.0 {small: [64, 64, 64], big: [95, 95, 95]}
              - !box-1.0.0 {small: [96, 64, 64], big: [127, 95, 95]}
              - !box-1.0.0 {small: [128, 64, 64], big: [159, 95, 95]}
              - !box-1.0.0 {small: [160, 64, 64], big: [189, 95, 95]}
              - !box-1.0.0 {small: [190, 64, 64], big: [219, 95, 95]}
              - !box-1.0.0 {small: [220, 64, 64], big: [249, 95, 95]}
              - !box-1.0.0 {small: [0, 96, 64], big: [31, 127, 95]}
              - !box-1.0.0 {small: [32, 96, 64], big: [63, 127, 95]}
              - !box-1.0.0 {small: [64, 96, 64], big: [95, 127, 95]}
              - !box-1.0.0 {small: [96, 96, 64], big: [127, 127, 95]}
              - !box-1.0.0 {small: [128, 96, 64], big: [159, 127, 95]}
              - !box-1.0.0 {small: [160, 96, 64], big: [189, 127, 95]}
              - !box-1.0.0 {small: [190, 96, 64], big: [219, 127, 95]}
              - !box-1.0.0 {small: [220, 96, 64], big: [249, 127, 95]}
              - !box-1.0.0 {small: [0, 128, 64], big: [31, 159, 95]}
              - !box-1.0.0 {small: [32, 128, 64], big: [63, 159, 95]}
              - !box-1.0.0 {small: [64, 128, 64], big: [95, 159, 95]}
              - !box-1.0.0 {small: [96, 128, 64], big: [127, 159, 95]}
              - !box-1.0.0 {small: [128, 128, 64], big: [159, 159, 95]}
              - !box-1.0.0 {small: [160, 128, 64], big: [189, 159, 95]}
              - !box-1.0.0 {small: [190, 128, 64], big: [219, 159, 95]}
              - !box-1.0.0 {small: [220, 128, 64], big: [249, 159, 95]}
              - !box-1.0.0 {small: [0, 160, 64], big: [31, 189, 95]}
              - !box-1.0.0 {small: [32, 160, 64], big: [63, 189, 95]}
              - !box-1.0.0 {small: [64, 160, 64], big: [95, 189, 95]}
              - !box-1.0.0 {small: [96, 160, 64], big: [127, 189, 95]}
              - !box-1.0.0 {small: [128, 160, 64], big: [159, 189, 95]}
              - !box-1.0.0 {small: [160, 160, 64], big: [189, 189, 95]}
              - !box-1.0.0 {small: [190, 160, 64], big: [219, 189, 95]}
              - !box-1.0.0 {small: [220, 160, 64], big: [249, 189, 95]}
              - !box-1.0.0 {small: [0, 190, 64], big: [31, 219, 95]}
              - !box-1.0.0 {small: [32, 190, 64], big: [63, 219, 95]}
              - !box-1.0.0 {small: [64, 190, 64], big: [95, 219, 95]}
              - !box-1.0.0 {small: [96, 190, 64], big: [127, 219, 95]}
              - !box-1.0.0 {small: [128, 190, 64], big: [159, 219, 95]}
              - !box-1.0.0 {small: [160, 190, 64], big: [189, 219, 95]}
              - !box-1.0.0 {small: [190, 190, 64], big: [219, 219, 95]}
              - !box-1.0.0 {small: [220, 190, 64], big: [249, 219, 95]}
              - !box-1.0.0 {small: [0, 220, 64], big: [31, 249, 95]}
              - !box-1.0.0 {small: [32, 220, 64], big: [63, 249, 95]}
              - !box-1.0.0 {small: [64, 220, 64], big: [95, 249, 95]}
              - !box-1.0.0 {small: [96, 220, 64], big: [127, 249, 95]}
              - !box-1.0.0 {small: [128, 220, 64], big: [159, 249, 95]}
              - !box-1.0.0 {small: [160, 220, 64], big: [189, 249, 95]}
              - !box-1.0.0 {small: [190, 220, 64], big: [219, 249, 95]}
              - !box-1.0.0 {small: [220, 220, 64], big: [249, 249, 95]}
              - !box-1.0.0 {small: [0, 0, 96], big: [31, 31, 127]}
              - !box-1.0.0 {small: [32, 0, 96], big: [63, 31, 127]}
              - !box-1.0.0 {small: [64, 0, 96], big: [95, 31, 127]}
              - !box-1.0.0 {small: [96, 0, 96], big: [127, 31, 127]}
              - !box-1.0.0 {small: [128, 0, 96], big: [159, 31, 127]}
              - !box-1.0.0 {small: [160, 0, 96], big: [189, 31, 127]}
              - !box-1.0.0 {small: [190, 0, 96], big: [219, 31, 127]}
              - !box-1.0.0 {small: [220, 0, 96], big: [249, 31, 127]}
              - !box-1.0.0 {small: [0, 32, 96], big: [31, 63, 127]}
              - !box-1.0.0 {small: [32, 32, 96], big: [63, 63, 127]}
              - !box-1.0.0 {small: [64, 32, 96], big: [95, 63, 127]}
              - !box-1.0.0 {small: [96, 32, 96], big: [127, 63, 127]}
              - !box-1.0.0 {small: [128, 32, 96], big: [159, 63, 127]}
              - !box-1.0.0 {small: [160, 32, 96], big: [189, 63, 127]}
              - !box-1.0.0 {small: [190, 32, 96], big: [219, 63, 127]}
              - !box-1.0.0 {small: [220, 32, 96], big: [249, 63, 127]}
              - !box-1.0.0 {small: [0, 64, 96], big: [31, 95, 127]}
              - !box-1.0.0 {small: [32, 64, 96], big: [63, 95, 127]}
              - !box-1.0.0 {small: [64, 64, 96], big: [95, 95, 127]}
              - !box-1.0.0 {small: [96, 64, 96], big: [127, 95, 127]}
              - !box-1.0.0 {small: [128, 64, 96], big: [159, 95, 127]}
              - !box-1.0.0 {small: [160, 64, 96], big: [189, 95, 127]}
              - !box-1.0.0 {small: [190, 64, 96], big: [219, 95, 127]}
              - !box-1.0.0 {small: [220, 64, 96], big: [249, 95, 127]}
              - !box-1.0.0 {small: [0, 96, 96], big: [31, 127, 127]}
              - !box-1.0.0 {small: [32, 96, 96], big: [63, 127, 127]}
              - !box-1.0.0 {small: [64, 96, 96], big: [95, 127, 127]}
              - !box-1.0.0 {small: [96, 96, 96], big: [127, 127, 127]}
              - !box-1.0.0 {small: [128, 96, 96], big: [159, 127, 127]}
              - !box-1.0.0 {small: [160, 96, 96], big: [189, 127, 127]}
              - !box-1.0.0 {small: [190, 96, 96], big: [219, 127, 127]}
              - !box-1.0.0 {small: [220, 96, 96], big: [249, 127, 127]}
              - !box-1.0.0 {small: [0, 128, 96], big: [31, 159, 127]}
              - !box-1.0.0 {small: [32, 128, 96], big: [63, 159, 127]}
              - !box-1.0.0 {small: [64, 128, 96], big: [95, 159, 127]}
              - !box-1.0.0 {small: [96, 128, 96], big: [127, 159, 127]}
              - !box-1.0.0 {small: [128, 128, 96], big: [159, 159, 127]}
              - !box-1.0.0 {small: [160, 128, 96], big: [189, 159, 127]}
              - !box-1.0.0 {small: [190, 128, 96], big: [219, 159, 127]}
              - !box-1.0.0 {small: [220, 128, 96], big: [249, 159, 127]}
              - !box-1.0.0 {small: [0, 160, 96], big: [31, 189, 127]}
              - !box-1.0.0 {small: [32, 160, 96], big: [63, 189, 127]}
              - !box-1.0.0 {small: [64, 160, 96], big: [95, 189, 127]}
              - !box-1.0.0 {small: [96, 160, 96], big: [127, 189, 127]}
              - !box-1.0.0 {small: [128, 160, 96], big: [159, 189, 127]}
              - !box-1.0.0 {small: [160, 160, 96], big: [189, 189, 127]}
              - !box-1.0.0 {small: [190, 160, 96], big: [219, 189, 127]}
              - !box-1.0.0 {small: [220, 160, 96], big: [249, 189, 127]}
              - !box-1.0.0 {small: [0, 190, 96], big: [31, 219, 127]}
              - !box-1.0.0 {small: [32, 190, 96], big: [63, 219, 127]}
              - !box-1.0.0 {small: [64, 190, 96], big: [95, 219, 127]}
              - !box-1.0.0 {small: [96, 190, 96], big: [127, 219, 127]}
              - !box-1.0.0 {small: [128, 190, 96], big: [159, 219, 127]}
              - !box-1.0.0 {small: [160, 190, 96], big: [189, 219, 127]}
              - !box-1.0.0 {small: [190, 190, 96], big: [219, 219, 127]}
              - !box-1.0.0 {small: [220, 190, 96], big: [249, 219, 127]}
              - !box-1.0.0 {small: [0, 220, 96], big: [31, 249, 127]}
              - !box-1.0.0 {small: [32, 220, 96], big: [63, 249, 127]}
              - !box-1.0.0 {small: [64, 220, 96], big: [95, 249, 127]}
              - !box-1.0.0 {small: [96, 220, 96], big: [127, 249, 127]}
              - !box-1.0.0 {small: [128, 220, 96], big: [159, 249, 127]}
              - !box-1.0.0 {small: [160, 220, 96], big: [189, 249, 127]}
              - !box-1.0.0 {small: [190, 220, 96], big: [219, 249, 127]}
              - !box-1.0.0 {small: [220, 220, 96], big: [249, 249, 127]}
              - !box-1.0.0 {small: [0, 0, 128], big: [31, 31, 159]}
              - !box-1.0.0 {small: [32, 0, 128], big: [63, 31, 159]}
              - !box-1.0.0 {small: [64, 0, 128], big: [95, 31, 159]}
              - !box-1.0.0 {small: [96, 0, 128], big: [127, 31, 159]}
              - !box-1.0.0 {small: [128, 0, 128], big: [159, 31, 159]}
              - !box-1.0.0 {small: [160, 0, 128], big: [189, 31, 159]}
              - !box-1.0.0 {small: [190, 0, 128], big: [219, 31, 159]}
              - !box-1.0.0 {small: [220, 0, 128], big: [249, 31, 159]}
              - !box-1.0.0 {small: [0, 32, 128], big: [31, 63, 159]}
              - !box-1.0.0 {small: [32, 32, 128], big: [63, 63, 159]}
              - !box-1.0.0 {small: [64, 32, 128], big: [95, 63, 159]}
              - !box-1.0.0 {small: [96, 32, 128], big: [127, 63, 159]}
              - !box-1.0.0 {small: [128, 32, 128], big: [159, 63, 159]}
              - !box-1.0.0 {small: [160, 32, 128], big: [189, 63, 159]}
              - !box-1.0.0 {small: [190, 32, 128], big: [219, 63, 159]}
              - !box-1.0.0 {small: [220, 32, 128], big: [249, 63, 159]}
              - !box-1.0.0 {small: [0, 64, 128], big: [31, 95, 159]}
              - !box-1.0.0 {small: [32, 64, 128], big: [63, 95, 159]}
              - !box-1.0.0 {small: [64, 64, 128], big: [95, 95, 159]}
              - !box-1.0.0 {small: [96, 64, 128], big: [127, 95, 159]}
              - !box-1.0.0 {small: [128, 64, 128], big: [159, 95, 159]}
              - !box-1.0.0 {small: [160, 64, 128], big: [189, 95, 159]}
              - !box-1.0.0 {small: [190, 64, 128], big: [219, 95, 159]}
              - !box-1.0.0 {small: [220, 64, 128], big: [249, 95, 159]}
              - !box-1.0.0 {small: [0, 96, 128], big: [31, 127, 159]}
              - !box-1.0.0 {small: [32, 96, 128], big: [63, 127, 159]}
              - !box-1.0.0 {small: [64, 96, 128], big: [95, 127, 159]}
              - !box-1.0.0 {small: [96, 96, 128], big: [127, 127, 159]}
              - !box-1.0.0 {small: [128, 96, 128], big: [159, 127, 159]}
              - !box-1.0.0 {small: [160, 96, 128], big: [189, 127, 159]}
              - !box-1.0.0 {small: [190, 96, 128], big: [219, 127, 159]}
              - !box-1.0.0 {small: [220, 96, 128], big: [249, 127, 159]}
              - !box-1.0.0 {small: [0, 128, 128], big: [31, 159, 159]}
              - !box-1.0.0 {small: [32, 128, 128], big: [63, 159, 159]}
              - !box-1.0.0 {small: [64, 128, 128], big: [95, 159, 159]}
              - !box-1.0.0 {small: [96, 128, 128], big: [127, 159, 159]}
              - !box-1.0.0 {small: [128, 128, 128], big: [159, 159, 159]}
              - !box-1.0.0 {small: [160, 128, 128], big: [189, 159, 159]}
              - !box-1.0.0 {small: [190, 128, 128], big: [219, 159, 159]}
              - !box-1.0.0 {small: [220, 128, 128], big: [249, 159, 159]}
              - !box-1.0.0 {small: [0, 160, 128], big: [31, 189, 159]}
              - !box-1.0.0 {small: [32, 160, 128], big: [63, 189, 159]}
              - !box-1.0.0 {small: [64, 160, 128], big: [95, 189, 159]}
              - !box-1.0.0 {small: [96, 160, 128], big: [127, 189, 159]}
              - !box-1.0.0 {small: [128, 160, 128], big: [159, 189, 159]}
              - !box-1.0.0 {small: [160, 160, 128], big: [189, 189, 159]}
              - !box-1.0.0 {small: [190, 160, 128], big: [219, 189, 159]}
              - !box-1.0.0 {small: [220, 160, 128], big: [249, 189, 159]}
              - !box-1.0.0 {small: [0, 190, 128], big: [31, 219, 159]}
              - !box-1.0.0 {small: [32, 190, 128], big: [63, 219, 159]}
              - !box-1.0.0 {small: [64, 190, 128], big: [95, 219, 159]}
              - !box-1.0.0 {small: [96, 190, 128], big: [127, 219, 159]}
              - !box-1.0.0 {small: [128, 190, 128], big: [159, 219, 159]}
              - !box-1.0.0 {small: [160, 190, 128], big: [189, 219, 159]}
              - !box-1.0.0 {small: [190, 190, 128], big: [219, 219, 159]}
              - !box-1.0.0 {small: [220, 190, 128], big: [249, 219, 159]}
              - !box-1.0.0 {small: [0, 220, 128], big: [31, 249, 159]}
              - !box-1.0.0 {small: [32, 220, 128], big: [63, 249, 159]}
              - !box-1.0.0 {small: [64, 220, 128], big: [95, 249, 159]}
              - !box-1.0.0 {small: [96, 220, 128], big: [127, 249, 159]}
              - !box-1.0.0 {small: [128, 220, 128], big: [159, 249, 159]}
              - !box-1.0.0 {small: [160, 220, 128], big: [189, 249, 159]}
              - !box-1.0.0 {small: [190, 220, 128], big: [219, 249, 159]}
              - !box-1.0.0 {small: [220, 220, 128], big: [249, 249, 159]}
              - !box-1.0.0 {small: [0, 0, 160], big: [31, 31, 189]}
              - !box-1.0.0 {small: [32, 0, 160], big: [63, 31, 189]}
              - !box-1.0.0 {small: [64, 0, 160], big: [95, 31, 189]}
              - !box-1.0.0 {small: [96, 0, 160], big: [127, 31, 189]}
              - !box-1.0.0 {small: [128, 0, 160], big: [159, 31, 189]}
              - !box-1.0.0 {small: [160, 0, 160], big: [189, 31, 189]}
              - !box-1.0.0 {small: [190, 0, 160], big: [219, 31, 189]}
              - !box-1.0.0 {small: [220, 0, 160], big: [249, 31, 189]}
              - !box-1.0.0 {small: [0, 32, 160], big: [31, 63, 189]}
              - !box-1.0.0 {small: [32, 32, 160], big: [63, 63, 189]}
              - !box-1.0.0 {small: [64, 32, 160], big: [95, 63, 189]}
              - !box-1.0.0 {small: [96, 32, 160], big: [127, 63, 189]}
              - !box-1.0.0 {small: [128, 32, 160], big: [159, 63, 189]}
              - !box-1.0.0 {small: [160, 32, 160], big: [189, 63, 189]}
              - !box-1.0.0 {small: [190, 32, 160], big: [219, 63, 189]}
              - !box-1.0.0 {small: [220, 32, 160], big: [249, 63, 189]}
              - !box-1.0.0 {small: [0, 64, 160], big: [31, 95, 189]}
              - !box-1.0.0 {small: [32, 64, 160], big: [63, 95, 189]}
              - !box-1.0.0 {small: [64, 64, 160], big: [95, 95, 189]}
              - !box-1.0.0 {small: [96, 64, 160], big: [127, 95, 189]}
              - !box-1.0.0 {small: [128, 64, 160], big: [159, 95, 189]}
              - !box-1.0.0 {small: [160, 64, 160], big: [189, 95, 189]}
              - !box-1.0.0 {small: [190, 64, 160], big: [219, 95, 189]}
              - !box-1.0.0 {small: [220, 64, 160], big: [249, 95, 189]}
              - !box-1.0.0 {small: [0, 96, 160], big: [31, 127, 189]}
              - !box-1.0.0 {small: [32, 96, 160], big: [63, 127, 189]}
              - !box-1.0.0 {small: [64, 96, 160], big: [95, 127, 189]}
              - !box-1.0.0 {small: [96, 96, 160], big: [127, 127, 189]}
              - !box-1.0.0 {small: [128, 96, 160], big: [159, 127, 189]}
              - !box-1.0.0 {small: [160, 96, 160], big: [189, 127, 189]}
              - !box-1.0.0 {small: [190, 96, 160], big: [219, 127, 189]}
              - !box-1.0.0 {small: [220, 96, 160], big: [249, 127, 189]}
              - !box-1.0.0 {small: [0, 128, 160], big: [31, 159, 189]}
              - !box-1.0.0 {small: [32, 128, 160], big: [63, 159, 189]}
              - !box-1.0.0 {small: [64, 128, 160], big: [95, 159, 189]}
              - !box-1.0.0 {small: [96, 128, 160], big: [127, 159, 189]}
              - !box-1.0.0 {small: [128, 128, 160], big: [159, 159, 189]}
              - !box-1.0.0 {small: [160, 128, 160], big: [189, 159, 189]}
              - !box-1.0.0 {small: [190, 128, 160], big: [219, 159, 189]}
              - !box-1.0.0 {small: [220, 128, 160], big: [249, 159, 189]}
              - !box-1.0.0 {small: [0, 160, 160], big: [31, 189, 189]}
              - !box-1.0.0 {small: [32, 160, 160], big: [63, 189, 189]}
              - !box-1.0.0 {small: [64, 160, 160], big: [95, 189, 189]}
              - !box-1.0.0 {small: [96, 160, 160], big: [127, 189, 189]}
              - !box-1.0.0 {small: [128, 160, 160], big: [159, 189, 189]}
              - !box-1.0.0 {small: [160, 160, 160], big: [189, 189, 189]}
              - !box-1.0.0 {small: [190, 160, 160], big: [219, 189, 189]}
              - !box-1.0.0 {small: [220, 160, 160], big: [249, 189, 189]}
              - !box-1.0.0 {small: [0, 190, 160], big: [31, 219, 189]}
              - !box-1.0.0 {small: [32, 190, 160], big: [63, 219, 189]}
              - !box-1.0.0 {small: [64, 190, 160], big: [95, 219, 189]}
              - !box-1.0.0 {small: [96, 190, 160], big: [127, 219, 189]}
              - !box-1.0.0 {small: [128, 190, 160], big: [159, 219, 189]}
              - !box-1.0.0 {small: [160, 190, 160], big: [189, 219, 189]}
              - !box-1.0.0 {small: [190, 190, 160], big: [219, 219, 189]}
              - !box-1.0.0 {small: [220, 190, 160], big: [249, 219, 189]}
              - !box-1.0.0 {small: [0, 220, 160], big: [31, 249, 189]}
              - !box-1.0.0 {small: [32, 220, 160], big: [63, 249, 189]}
              - !box-1.0.0 {small: [64, 220, 160], big: [95, 249, 189]}
              - !box-1.0.0 {small: [96, 220, 160], big: [127, 249, 189]}
              - !box-1.0.0 {small: [128, 220, 160], big: [159, 249, 189]}
              - !box-1.0.0 {small: [160, 220, 160], big: [189, 249, 189]}
              - !box-1.0.0 {small: [190, 220, 160], big: [219, 249, 189]}
              - !box-1.0.0 {small: [220, 220, 160], big: [249, 249, 189]}
              - !box-1.0.0 {small: [0, 0, 190], big: [31, 31, 219]}
              - !box-1.0.0 {small: [32, 0, 190], big: [63, 31, 219]}
              - !box-1.0.0 {small: [64, 0, 190], big: [95, 31, 219]}
              - !box-1.0.0 {small: [96, 0, 190], big: [127, 31, 219]}
              - !box-1.0.0 {small: [128, 0, 190], big: [159, 31, 219]}
              - !box-1.0.0 {small: [160, 0, 190], big: [189, 31, 219]}
              - !box-1.0.0 {small: [190, 0, 190], big: [219, 31, 219]}
              - !box-1.0.0 {small: [220, 0, 190], big: [249, 31, 219]}
              - !box-1.0.0 {small: [0, 32, 190], big: [31, 63, 219]}
              - !box-1.0.0 {small: [32, 32, 190], big: [63, 63, 219]}
              - !box-1.0.0 {small: [64, 32, 190], big: [95, 63, 219]}
              - !box-1.0.0 {small: [96, 32, 190], big: [127, 63, 219]}
              - !box-1.0.0 {small: [128, 32, 190], big: [159, 63, 219]}
              - !box-1.0.0 {small: [160, 32, 190], big: [189, 63, 219]}
              - !box-1.0.0 {small: [190, 32, 190], big: [219, 63, 219]}
              - !box-1.0.0 {small: [220, 32, 190], big: [249, 63, 219]}
              - !box-1.0.0 {small: [0, 64, 190], big: [31, 95, 219]}
              - !box-1.0.0 {small: [32, 64, 190], big: [63, 95, 219]}
              - !box-1.0.0 {small: [64, 64, 190], big: [95, 95, 219]}
              - !box-1.0.0 {small: [96, 64, 190], big: [127, 95, 219]}
              - !box-1.0.0 {small: [128, 64, 190], big: [159, 95, 219]}
              - !box-1.0.0 {small: [160, 64, 190], big: [189, 95, 219]}
              - !box-1.0.0 {small: [190, 64, 190], big: [219, 95, 219]}
              - !box-1.0.0 {small: [220, 64, 190], big: [249, 95, 219]}
              - !box-1.0.0 {small: [0, 96, 190], big: [31, 127, 219]}
              - !box-1.0.0 {small: [32, 96, 190], big: [63, 127, 219]}
              - !box-1.0.0 {small: [64, 96, 190], big: [95, 127, 219]}
              - !box-1.0.0 {small: [96, 96, 190], big: [127, 127, 219]}
              - !box-1.0.0 {small: [128, 96, 190], big: [159, 127, 219]}
              - !box-1.0.0 {small: [160, 96, 190], big: [189, 127, 219]}
              - !box-1.0.0 {small: [190, 96, 190], big: [219, 127, 219]}
              - !box-1.0.0 {small: [220, 96, 190], big: [249, 127, 219]}
              - !box-1.0.0 {small: [0, 128, 190], big: [31, 159, 219]}
              - !box-1.0.0 {small: [32, 128, 190], big: [63, 159, 219]}
              - !box-1.0.0 {small: [64, 128, 190], big: [95, 159, 219]}
              - !box-1.0.0 {small: [96, 128, 190], big: [127, 159, 219]}
              - !box-1.0.0 {small: [128, 128, 190], big: [159, 159, 219]}
              - !box-1.0.0 {small: [160, 128, 190], big: [189, 159, 219]}
              - !box-1.0.0 {small: [190, 128, 190], big: [219, 159, 219]}
              - !box-1.0.0 {small: [220, 128, 190], big: [249, 159, 219]}
              - !box-1.0.0 {small: [0, 160, 190], big: [31, 189, 219]}
              - !box-1.0.0 {small: [32, 160, 190], big: [63, 189, 219]}
              - !box-1.0.0 {small: [64, 160, 190], big: [95, 189, 219]}
              - !box-1.0.0 {small: [96, 160, 190], big: [127, 189, 219]}
              - !box-1.0.0 {small: [128, 160, 190], big: [159, 189, 219]}
              - !box-1.0.0 {small: [160, 160, 190], big: [189, 189, 219]}
              - !box-1.0.0 {small: [190, 160, 190], big: [219, 189, 219]}
              - !box-1.0.0 {small: [220, 160, 190], big: [249, 189, 219]}
              - !box-1.0.0 {small: [0, 190, 190], big: [31, 219, 219]}
              - !box-1.0.0 {small: [32, 190, 190], big: [63, 219, 219]}
              - !box-1.0.0 {small: [64, 190, 190], big: [95, 219, 219]}
              - !box-1.0.0 {small: [96, 190, 190], big: [127, 219, 219]}
              - !box-1.0.0 {small: [128, 190, 190], big: [159, 219, 219]}
              - !box-1.0.0 {small: [160, 190, 190], big: [189, 219, 219]}
              - !box-1.0.0 {small: [190, 190, 190], big: [219, 219, 219]}
              - !box-1.0.0 {small: [220, 190, 190], big: [249, 219, 219]}
              - !box-1.0.0 {small: [0, 220, 190], big: [31, 249, 219]}
              - !box-1.0.0 {small: [32, 220, 190], big: [63, 249, 219]}
              - !box-1.0.0 {small: [64, 220, 190], big: [95, 249, 219]}
              - !box-1.0.0 {small: [96, 220, 190], big: [127, 249, 219]}
              - !box-1.0.0 {small: [128, 220, 190], big: [159, 249, 219]}
              - !box-1.0.0 {small: [160, 220, 190], big: [189, 249, 219]}
              - !box-1.0.0 {small: [190, 220, 190], big: [219, 249, 219]}
              - !box-1.0.0 {small: [220, 220, 190], big: [249, 249, 219]}
              - !box-1.0.0 {small: [0, 0, 220], big: [31, 31, 249]}
              - !box-1.0.0 {small: [32, 0, 220], big: [63, 31, 249]}
              - !box-1.0.0 {small: [64, 0, 220], big: [95, 31, 249]}
              - !box-1.0.0 {small: [96, 0, 220], big: [127, 31, 249]}
              - !box-1.0.0 {small: [128, 0, 220], big: [159, 31, 249]}
              - !box-1.0.0 {small: [160, 0, 220], big: [189, 31, 249]}
              - !box-1.0.0 {small: [190, 0, 220], big: [219, 31, 249]}
              - !box-1.0.0 {small: [220, 0, 220], big: [249, 31, 249]}
              - !box-1.0.0 {small: [0, 32, 220], big: [31, 63, 249]}
              - !box-1.0.0 {small: [32, 32, 220], big: [63, 63, 249]}
              - !box-1.0.0 {small: [64, 32, 220], big: [95, 63, 249]}
              - !box-1.0.0 {small: [96, 32, 220], big: [127, 63, 249]}
              - !box-1.0.0 {small: [128, 32, 220], big: [159, 63, 249]}
              - !box-1.0.0 {small: [160, 32, 220], big: [189, 63, 249]}
              - !box-1.0.0 {small: [190, 32, 220], big: [219, 63, 249]}
              - !box-1.0.0 {small: [220, 32, 220], big: [249, 63, 249]}
              - !box-1.0.0 {small: [0, 64, 220], big: [31, 95, 249]}
              - !box-1.0.0 {small: [32, 64, 220], big: [63, 95, 249]}
              - !box-1.0.0 {small: [64, 64, 220], big: [95, 95, 249]}
              - !box-1.0.0 {small: [96, 64, 220], big: [127, 95, 249]}
              - !box-1.0.0 {small: [128, 64, 220], big: [159, 95, 249]}
              - !box-1.0.0 {small: [160, 64, 220], big: [189, 95, 249]}
              - !box-1.0.0 {small: [190, 64, 220], big: [219, 95, 249]}
              - !box-1.0.0 {small: [220, 64, 220], big: [249, 95, 249]}
              - !box-1.0.0 {small: [0, 96, 220], big: [31, 127, 249]}
              - !box-1.0.0 {small: [32, 96, 220], big: [63, 127, 249]}
              - !box-1.0.0 {small: [64, 96, 220], big: [95, 127, 249]}
              - !box-1.0.0 {small: [96, 96, 220], big: [127, 127, 249]}
              - !box-1.0.0 {small: [128, 96, 220], big: [159, 127, 249]}
              - !box-1.0.0 {small: [160, 96, 220], big: [189, 127, 249]}
              - !box-1.0.0 {small: [190, 96, 220], big: [219, 127, 249]}
              - !box-1.0.0 {small: [220, 96, 220], big: [249, 127, 249]}
              - !box-1.0.0 {small: [0, 128, 220], big: [31, 159, 249]}
              - !box-1.0.0 {small: [32, 128, 220], big: [63, 159, 249]}
              - !box-1.0.0 {small: [64, 128, 220], big: [95, 159, 249]}
              - !box-1.0.0 {small: [96, 128, 220], big: [127, 159, 249]}
              - !box-1.0.0 {small: [128, 128, 220], big: [159, 159, 249]}
              - !box-1.0.0 {small: [160, 128, 220], big: [189, 159, 249]}
              - !box-1.0.0 {small: [190, 128, 220], big: [219, 159, 249]}
              - !box-1.0.0 {small: [220, 128, 220], big: [249, 159, 249]}
              - !box-1.0.0 {small: [0, 160, 220], big: [31, 189, 249]}
              - !box-1.0.0 {small: [32, 160, 220], big: [63, 189, 249]}
              - !box-1.0.0 {small: [64, 160, 220], big: [95, 189, 249]}
              - !box-1.0.0 {small: [96, 160, 220], big: [127, 189, 249]}
              - !box-1.0.0 {small: [128, 160, 220], big: [159, 189, 249]}
              - !box-1.0.0 {small: [160, 160, 220], big: [189, 189, 249]}
              - !box-1.0.0 {small: [190, 160, 220], big: [219, 189, 249]}
              - !box-1.0.0 {small: [220, 160, 220], big: [249, 189, 249]}
              - !box-1.0.0 {small: [0, 190, 220], big: [31, 219, 249]}
              - !box-1.0.0 {small: [32, 190, 220], big: [63, 219, 249]}
              - !box-1.0.0 {small: [64, 190, 220], big: [95, 219, 249]}
              - !box-1.0.0 {small: [96, 190, 220], big: [127, 219, 249]}
              - !box-1.0.0 {small: [128, 190, 220], big: [159, 219, 249]}
              - !box-1.0.0 {small: [160, 190, 220], big: [189, 219, 249]}
              - !box-1.0.0 {small: [190, 190, 220], big: [219, 219, 249]}
              - !box-1.0.0 {small: [220, 190, 220], big: [249, 219, 249]}
              - !box-1.0.0 {small: [0, 220, 220], big: [31, 249, 249]}
              - !box-1.0.0 {small: [32, 220, 220], big: [63, 249, 249]}
              - !box-1.0.0 {small: [64, 220, 220], big: [95, 249, 249]}
              - !box-1.0.0 {small: [96, 220, 220], big: [127, 249, 249]}
              - !box-1.0.0 {small: [128, 220, 220], big: [159, 249, 249]}
              - !box-1.0.0 {small: [160, 220, 220], big: [189, 249, 249]}
              - !box-1.0.0 {small: [190, 220, 220], big: [219, 249, 249]}
              - !box-1.0.0 {small: [220, 220, 220], big: [249, 249, 249]}
          groupdata:
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: CARPETXREGRID::REGRID_ERROR
                numvars: 1
                varnames: [regrid_error]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 250 CCTK_POSTSTEP: BoxInBox::EstimateError: Mark output variables as valid"
                        outer: "CallFunction iteration 0 CCTK_BASEGRID: CarpetXRegrid::CarpetXRegrid_InitError: Mark output variables as valid"
                        ghosts: "CallFunction iteration 0 CCTK_BASEGRID: CarpetXRegrid::CarpetXRegrid_InitError: Mark output variables as valid"
              patch: 0
              level: 0
              indextype: [1, 1, 1]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: SUBCYCLING::LEVEL_NEIGHBOR
                numvars: 1
                varnames: [level_neighbor]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 0 Subcycling_RMBndryGroup: Subcycling::Subcycling_SetLevelNeighbor: Mark output variables as valid"
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: SUBCYCLING::ISRMBNDRY
                numvars: 1
                varnames: [isrmbndry]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 0 Subcycling_RMBndryGroup: Subcycling::Subcycling_SetIsRMBndry: Mark output variables as valid"
                        outer: "CallFunction iteration 0 Subcycling_RMBndryGroup: Subcycling::Subcycling_SetIsRMBndry: Mark output variables as valid"
                        ghosts: "CallFunction iteration 0 Subcycling_RMBndryGroup: Subcycling::Subcycling_SetIsRMBndry: Mark output variables as valid"
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::STATE
                numvars: 2
                varnames: [u, rho]
                do_checkpoint: true
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: Set from RHS in ODESolvers
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: Set from RHS in ODESolvers
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::OLD
                numvars: 2
                varnames: [u_old, rho_old]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::RHS
                numvars: 2
                varnames: [u_rhs, rho_rhs]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: false, outer: false, ghosts: false}
                      why:
                        int: ODESolvers updated the state vector
                        outer: ODESolvers updated the state vector
                        ghosts: ODESolvers updated the state vector
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: false, outer: false, ghosts: false}
                      why:
                        int: ODESolvers updated the state vector
                        outer: ODESolvers updated the state vector
                        ghosts: ODESolvers updated the state vector
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::K1
                numvars: 2
                varnames: [u_k1, rho_k1]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::K2
                numvars: 2
                varnames: [u_k2, rho_k2]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::K3
                numvars: 2
                varnames: [u_k3, rho_k3]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::K4
                numvars: 2
                varnames: [u_k4, rho_k4]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::ERROR
                numvars: 2
                varnames: [u_err, rho_err]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 250 ODESolvers_PostStep: TestSubcyclingMC2::TestSubcyclingMC2_Error: Mark output variables as valid"
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 250 ODESolvers_PostStep: TestSubcyclingMC2::TestSubcyclingMC2_Error: Mark output variables as valid"
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
              patch: 0
              level: 0
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
        - !leveldata-1.1.0
          patch: 0
          level: 1
          is_subcycling_level: true
          iteration: !rational-1.0.0 [125, 1]
          delta_iteration: !rational-1.0.0 [1, 2]
          fab: !fabarraybase-1.0.0
            ixType: [0, 0, 0]
            nGrowVect: [3, 3, 3]
            boxArray: !boxarray-1.0.0
              - !box-1.0.0 {small: [188, 188, 188], big: [219, 219, 219]}
              - !box-1.0.0 {small: [220, 188, 188], big: [251, 219, 219]}
              - !box-1.0.0 {small: [252, 188, 188], big: [283, 219, 219]}
              - !box-1.0.0 {small: [284, 188, 188], big: [311, 219, 219]}
              - !box-1.0.0 {small: [188, 220, 188], big: [219, 251, 219]}
              - !box-1.0.0 {small: [220, 220, 188], big: [251, 251, 219]}
              - !box-1.0.0 {small: [252, 220, 188], big: [283, 251, 219]}
              - !box-1.0.0 {small: [284, 220, 188], big: [311, 251, 219]}
              - !box-1.0.0 {small: [188, 252, 188], big: [219, 283, 219]}
              - !box-1.0.0 {small: [220, 252, 188], big: [251, 283, 219]}
              - !box-1.0.0 {small: [252, 252, 188], big: [283, 283, 219]}
              - !box-1.0.0 {small: [284, 252, 188], big: [311, 283, 219]}
              - !box-1.0.0 {small: [188, 284, 188], big: [219, 311, 219]}
              - !box-1.0.0 {small: [220, 284, 188], big: [251, 311, 219]}
              - !box-1.0.0 {small: [252, 284, 188], big: [283, 311, 219]}
              - !box-1.0.0 {small: [284, 284, 188], big: [311, 311, 219]}
              - !box-1.0.0 {small: [188, 188, 220], big: [219, 219, 251]}
              - !box-1.0.0 {small: [220, 188, 220], big: [251, 219, 251]}
              - !box-1.0.0 {small: [252, 188, 220], big: [283, 219, 251]}
              - !box-1.0.0 {small: [284, 188, 220], big: [311, 219, 251]}
              - !box-1.0.0 {small: [188, 220, 220], big: [219, 251, 251]}
              - !box-1.0.0 {small: [220, 220, 220], big: [251, 251, 251]}
              - !box-1.0.0 {small: [252, 220, 220], big: [283, 251, 251]}
              - !box-1.0.0 {small: [284, 220, 220], big: [311, 251, 251]}
              - !box-1.0.0 {small: [188, 252, 220], big: [219, 283, 251]}
              - !box-1.0.0 {small: [220, 252, 220], big: [251, 283, 251]}
              - !box-1.0.0 {small: [252, 252, 220], big: [283, 283, 251]}
              - !box-1.0.0 {small: [284, 252, 220], big: [311, 283, 251]}
              - !box-1.0.0 {small: [188, 284, 220], big: [219, 311, 251]}
              - !box-1.0.0 {small: [220, 284, 220], big: [251, 311, 251]}
              - !box-1.0.0 {small: [252, 284, 220], big: [283, 311, 251]}
              - !box-1.0.0 {small: [284, 284, 220], big: [311, 311, 251]}
              - !box-1.0.0 {small: [188, 188, 252], big: [219, 219, 283]}
              - !box-1.0.0 {small: [220, 188, 252], big: [251, 219, 283]}
              - !box-1.0.0 {small: [252, 188, 252], big: [283, 219, 283]}
              - !box-1.0.0 {small: [284, 188, 252], big: [311, 219, 283]}
              - !box-1.0.0 {small: [188, 220, 252], big: [219, 251, 283]}
              - !box-1.0.0 {small: [220, 220, 252], big: [251, 251, 283]}
              - !box-1.0.0 {small: [252, 220, 252], big: [283, 251, 283]}
              - !box-1.0.0 {small: [284, 220, 252], big: [311, 251, 283]}
              - !box-1.0.0 {small: [188, 252, 252], big: [219, 283, 283]}
              - !box-1.0.0 {small: [220, 252, 252], big: [251, 283, 283]}
              - !box-1.0.0 {small: [252, 252, 252], big: [283, 283, 283]}
              - !box-1.0.0 {small: [284, 252, 252], big: [311, 283, 283]}
              - !box-1.0.0 {small: [188, 284, 252], big: [219, 311, 283]}
              - !box-1.0.0 {small: [220, 284, 252], big: [251, 311, 283]}
              - !box-1.0.0 {small: [252, 284, 252], big: [283, 311, 283]}
              - !box-1.0.0 {small: [284, 284, 252], big: [311, 311, 283]}
              - !box-1.0.0 {small: [188, 188, 284], big: [219, 219, 311]}
              - !box-1.0.0 {small: [220, 188, 284], big: [251, 219, 311]}
              - !box-1.0.0 {small: [252, 188, 284], big: [283, 219, 311]}
              - !box-1.0.0 {small: [284, 188, 284], big: [311, 219, 311]}
              - !box-1.0.0 {small: [188, 220, 284], big: [219, 251, 311]}
              - !box-1.0.0 {small: [220, 220, 284], big: [251, 251, 311]}
              - !box-1.0.0 {small: [252, 220, 284], big: [283, 251, 311]}
              - !box-1.0.0 {small: [284, 220, 284], big: [311, 251, 311]}
              - !box-1.0.0 {small: [188, 252, 284], big: [219, 283, 311]}
              - !box-1.0.0 {small: [220, 252, 284], big: [251, 283, 311]}
              - !box-1.0.0 {small: [252, 252, 284], big: [283, 283, 311]}
              - !box-1.0.0 {small: [284, 252, 284], big: [311, 283, 311]}
              - !box-1.0.0 {small: [188, 284, 284], big: [219, 311, 311]}
              - !box-1.0.0 {small: [220, 284, 284], big: [251, 311, 311]}
              - !box-1.0.0 {small: [252, 284, 284], big: [283, 311, 311]}
              - !box-1.0.0 {small: [284, 284, 284], big: [311, 311, 311]}
          groupdata:
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: CARPETXREGRID::REGRID_ERROR
                numvars: 1
                varnames: [regrid_error]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 250 CCTK_POSTSTEP: BoxInBox::EstimateError: Mark output variables as valid"
                        outer: "CallFunction iteration 0 CCTK_BASEGRID: CarpetXRegrid::CarpetXRegrid_InitError: Mark output variables as valid"
                        ghosts: "CallFunction iteration 0 CCTK_BASEGRID: CarpetXRegrid::CarpetXRegrid_InitError: Mark output variables as valid"
              patch: 0
              level: 1
              indextype: [1, 1, 1]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: SUBCYCLING::LEVEL_NEIGHBOR
                numvars: 1
                varnames: [level_neighbor]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 0 Subcycling_RMBndryGroup: Subcycling::Subcycling_SetLevelNeighbor: Mark output variables as valid"
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: SUBCYCLING::ISRMBNDRY
                numvars: 1
                varnames: [isrmbndry]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 0 Subcycling_RMBndryGroup: Subcycling::Subcycling_SetIsRMBndry: Mark output variables as valid"
                        outer: "CallFunction iteration 0 Subcycling_RMBndryGroup: Subcycling::Subcycling_SetIsRMBndry: Mark output variables as valid"
                        ghosts: "CallFunction iteration 0 Subcycling_RMBndryGroup: Subcycling::Subcycling_SetIsRMBndry: Mark output variables as valid"
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::STATE
                numvars: 2
                varnames: [u, rho]
                do_checkpoint: true
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: Set from RHS in ODESolvers
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: Set from RHS in ODESolvers
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::OLD
                numvars: 2
                varnames: [u_old, rho_old]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::RHS
                numvars: 2
                varnames: [u_rhs, rho_rhs]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: false, outer: false, ghosts: false}
                      why:
                        int: ODESolvers updated the state vector
                        outer: ODESolvers updated the state vector
                        ghosts: ODESolvers updated the state vector
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: false, outer: false, ghosts: false}
                      why:
                        int: ODESolvers updated the state vector
                        outer: ODESolvers updated the state vector
                        ghosts: ODESolvers updated the state vector
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::K1
                numvars: 2
                varnames: [u_k1, rho_k1]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::K2
                numvars: 2
                varnames: [u_k2, rho_k2]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::K3
                numvars: 2
                varnames: [u_k3, rho_k3]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::K4
                numvars: 2
                varnames: [u_k4, rho_k4]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: false, ghosts: false}
                      why:
                        int: "ODESolvers after lincomb: Mark interior as valid"
                        outer: "ODESolvers after lincomb: Mark outer boundary as invalid"
                        ghosts: "ODESolvers after lincomb: Mark ghosts as valid"
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
            - !groupdata-1.1.0
              commongroupdata: !commongroupdata-1.0.0
                groupname: TESTSUBCYCLINGMC2::ERROR
                numvars: 2
                varnames: [u_err, rho_err]
                do_checkpoint: false
                do_restrict: true
                valid:
                  -
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 250 ODESolvers_PostStep: TestSubcyclingMC2::TestSubcyclingMC2_Error: Mark output variables as valid"
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
                    - !why_valid-1.0.0
                      valid: !valid-1.0.0 {int: true, outer: true, ghosts: true}
                      why:
                        int: "CallFunction iteration 250 ODESolvers_PostStep: TestSubcyclingMC2::TestSubcyclingMC2_Error: Mark output variables as valid"
                        outer: "SyncGroupsByDirI after syncing: Mark outer boundaries as valid"
                        ghosts: "SyncGroupsByDirI after syncing: Mark ghost zones as valid"
              patch: 0
              level: 1
              indextype: [0, 0, 0]
              nghostzones: [3, 3, 3]
              parities: [[1, 1, 1], [1, 1, 1]]
              fluxes: ["", "", ""]
...
