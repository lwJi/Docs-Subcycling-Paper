$ mkdir -p q1-Z4cowCarpet-N64-MPI1792_r0000
$ cp q1-Z4cowCarpet.par q1-Z4cowCarpet-N64-MPI1792_r0000
$ cd q1-Z4cowCarpet-N64-MPI1792_r0000
======================================================================
Launch MPI code...
----------------------------------------------------------------------
MPIRUN = ibrun /work2/08708/liwei/frontera/Cannon/Cactus/exe/cactus_sim q1-Z4cowCarpet.par

Job started on c108-112.frontera.tacc.utexas.edu at Sun Mar  9 03:40:33 CDT 2025
======================================================================
TACC:  Starting up job 6975991 
TACC:  Starting parallel tasks... 
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.17.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.17.0
Compile date:      Feb 15 2025 (15:16:47)
Run date:          Mar 09 2025 (03:40:56-0500)
Run host:          c108-112.frontera.tacc.utexas.edu (pid=220017)
Working directory: /scratch1/08708/liwei/Carpet/q1-strong/q1-Z4cowCarpet-N64-MPI1792_r0000
Executable:        /work2/08708/liwei/frontera/Cannon/Cactus/exe/cactus_sim
Parameter file:    q1-Z4cowCarpet.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Carpet CarpetLib CarpetInterp CarpetReduce IOUtil NaNChecker Boundary CartGrid3D CoordBase SymBase CarpetRegrid2 MoL Time TwoPunctures ADMBase StaticConformal TmunuBase Z4cowCarpet NewRad CarpetIOBasic CarpetIOASCII TimerReport<---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn Carpet requests automatic activation of LoopControl
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn NewRad requests automatic activation of GenericFD
Thorn TwoPunctures requests automatic activation of GSL
Thorn LoopControl requests automatic activation of hwloc
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetRegrid2...Success -> active implementation CarpetRegrid2
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn GSL...Success -> active implementation GSL
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn NewRad...Success -> active implementation NewRad
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn TimerReport...Success -> active implementation timerreport
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn TwoPunctures...Success -> active implementation TwoPunctures
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn Z4cowCarpet...Success -> active implementation Z4cowCarpet
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      Timers::Timer_Startup: Prepare hierarchical timers
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CarpetRegrid2::CarpetRegrid2_Initialise: [global] Initialise locations of refined regions
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        Z4cowCarpet::Z4cowCarpet_RegisterVars: [global] register evolution system with mol
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CarpetRegrid2::CarpetRegrid2_ParamCheck: Check parameters
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      MoL::MoL_ParamCheck: Basic parameter checking
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      TwoPunctures::TwoPunctures_ParamCheck: Check parameters and thorn needs
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          GROUP TwoPunctures_Group: TwoPunctures initial data group
            TwoPunctures::TwoPunctures: Create puncture black hole initial data
            TwoPunctures::TwoPunctures_Metadata: [global] Output TwoPunctures metadata
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        MoL::MoL_StartLoop: [level] Initialise the step size control
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        GROUP Z4cowCarpet_InitialGroup: Convert ADM to Z4c variables
          Z4cowCarpet::Z4cowCarpet_Initial1: Convert ADM to Z4c variables, part 1
          Z4cowCarpet::Z4cowCarpet_Initial2: Convert ADM to Z4c variables, part 2
          Z4cowCarpet::Z4cowCarpet_InitialLapse: Set initial lapse
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
          Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
          Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
          Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        TimerReport::zzz_TimerReport_Output: [global] Print the timer report
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
        Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
        Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
        GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      ADMBase::ADMBase_Static: Copy the metric and extrinsic curvature to the current time level
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                Z4cowCarpet::Z4cowCarpet_RHS: Calculate Z4c RHS
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
                GROUP SetTmunu: Group for calculating the stress-energy tensor
                  TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
                  GROUP AddToTmunu: Add to the stress-energy tensor here
                Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
                Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
                GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
        Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
        Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
        GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
      TimerReport::zzz_TimerReport_Checkpoint: [global] Print the timer report
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
        Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
        Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
        GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1791: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.371234 ns per clock tick (2.69372 GHz)
INFO (Vectors): Using vector size 8 for architecture AVX512 (64-bit precision)
INFO (hwloc): library version 2.0.4, API version 0x20000
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 1792 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 2 threads, this is thread 0
INFO (Carpet): There are 3584 threads in total
INFO (Carpet): There are 2 threads per process
INFO (Carpet): This process runs on host c108-112.frontera.tacc.utexas.edu, pid=220017
INFO (Carpet): This process runs on 2 cores: 0, 2
INFO (Carpet): Thread 0 runs on 2 cores: 0, 2
INFO (Carpet): Thread 1 runs on 2 cores: 0, 2
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [-400,-400,-400] : [400,400,400]   ([800,800,800])
   interior extent: [-396.667,-396.667,-396.667] : [396.667,396.667,396.667]   ([793.333,793.333,793.333])
   exterior extent: [-406.667,-406.667,-406.667] : [406.667,406.667,406.667]   ([813.333,813.333,813.333])
   base_spacing   : [3.33333,3.33333,3.33333]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [-400,-400,-400] : [400,400,400]   ([800,800,800])
   interior extent   : [-396.667,-396.667,-396.667] : [396.667,396.667,396.667]   ([793.333,793.333,793.333])
   exterior extent   : [-406.667,-406.667,-406.667] : [406.667,406.667,406.667]   ([813.333,813.333,813.333])
   spacing           : [3.33333,3.33333,3.33333]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [245,245,245]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[9,9,9],[9,9,9]]
   [2]: [[9,9,9],[9,9,9]]
   [3]: [[9,9,9],[9,9,9]]
   [4]: [[9,9,9],[9,9,9]]
   [5]: [[9,9,9],[9,9,9]]
   [6]: [[9,9,9],[9,9,9]]
   [7]: [[9,9,9],[9,9,9]]
   [8]: [[9,9,9],[9,9,9]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[0,0,0],[0,0,0]]
   [2]: [[0,0,0],[0,0,0]]
   [3]: [[0,0,0],[0,0,0]]
   [4]: [[0,0,0],[0,0,0]]
   [5]: [[0,0,0],[0,0,0]]
   [6]: [[0,0,0],[0,0,0]]
   [7]: [[0,0,0],[0,0,0]]
   [8]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 654 grid functions in 48 groups
INFO (Carpet):    There are 179 grid scalars in 33 groups
INFO (Carpet):    There are 81 1-dimensional grid arrays in 7 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 397. 22 are registered.
INFO (MoL): The maximum number of slow evolved variables is 397. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 397. 0 are registered.
INFO (MoL): The maximum number of SandR variables is 397. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 397. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 397. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 397. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 18951/18951 tests passed 
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (Carpet): Grid structure (superregions, grid points):
   [0][0][0]   exterior: [0,0,0] : [244,244,244]   ([245,245,245] + PADDING) 14706125
   [1][0][0]   exterior: [101,103,103] : [387,385,385]   ([287,283,283] + PADDING) 22985543
   [2][0][0]   exterior: [342,347,347] : [634,629,629]   ([293,283,283] + PADDING) 23466077
   [3][0][0]   exterior: [825,835,835] : [1127,1117,1117]   ([303,283,283] + PADDING) 24266967
   [4][0][0]   exterior: [1804,1823,1823] : [2100,2081,2081]   ([297,259,259] + PADDING) 19923057
   [5][0][0]   exterior: [3761,3799,3799] : [4047,4009,4009]   ([287,211,211] + PADDING) 12777527
   [6][0][0]   exterior: [7626,7703,7703] : [7990,7913,7913]   ([365,211,211] + PADDING) 16250165
   [7][0][0]   exterior: [15377,15530,15530] : [15548,15702,15702]   ([172,173,173] + PADDING) 5147788
   [7][0][1]   exterior: [15684,15530,15530] : [15855,15702,15702]   ([172,173,173] + PADDING) 5147788
   [8][0][0]   exterior: [30839,31146,31146] : [31011,31318,31318]   ([173,173,173] + PADDING) 5177717
   [8][0][1]   exterior: [31453,31146,31146] : [31625,31318,31318]   ([173,173,173] + PADDING) 5177717
INFO (Carpet): Grid structure (superregions, coordinates):
   [0][0][0]   exterior: [-406.666666666667,-406.666666666667,-406.666666666667] : [406.666666666667,406.666666666667,406.666666666667] : [3.33333333333333,3.33333333333333,3.33333333333333]
   [1][0][0]   exterior: [-238.333333333333,-235,-235] : [238.333333333333,235,235] : [1.66666666666667,1.66666666666667,1.66666666666667]
   [2][0][0]   exterior: [-121.666666666667,-117.5,-117.5] : [121.666666666667,117.5,117.5] : [0.833333333333333,0.833333333333333,0.833333333333333]
   [3][0][0]   exterior: [-62.9166666666667,-58.75,-58.75] : [62.9166666666667,58.75,58.75] : [0.416666666666667,0.416666666666667,0.416666666666667]
   [4][0][0]   exterior: [-30.8333333333333,-26.875,-26.875] : [30.8333333333333,26.875,26.875] : [0.208333333333333,0.208333333333333,0.208333333333333]
   [5][0][0]   exterior: [-14.8958333333333,-10.9375,-10.9375] : [14.8958333333333,10.9375,10.9375] : [0.104166666666667,0.104166666666667,0.104166666666667]
   [6][0][0]   exterior: [-9.47916666666669,-5.46875,-5.46875] : [9.47916666666669,5.46875,5.46875] : [0.0520833333333333,0.0520833333333333,0.0520833333333333]
   [7][0][0]   exterior: [-6.22395833333331,-2.23958333333331,-2.23958333333331] : [-1.77083333333331,2.23958333333331,2.23958333333331] : [0.0260416666666667,0.0260416666666667,0.0260416666666667]
   [7][0][1]   exterior: [1.77083333333331,-2.23958333333331,-2.23958333333331] : [6.22395833333331,2.23958333333331,2.23958333333331] : [0.0260416666666667,0.0260416666666667,0.0260416666666667]
   [8][0][0]   exterior: [-5.1171875,-1.11979166666669,-1.11979166666669] : [-2.87760416666669,1.11979166666669,1.11979166666669] : [0.0130208333333333,0.0130208333333333,0.0130208333333333]
   [8][0][1]   exterior: [2.87760416666669,-1.11979166666669,-1.11979166666669] : [5.1171875,1.11979166666669,1.11979166666669] : [0.0130208333333333,0.0130208333333333,0.0130208333333333]
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "TMUNUBASE::STRESS_ENERGY_SCALAR".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "TMUNUBASE::STRESS_ENERGY_VECTOR".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "TMUNUBASE::STRESS_ENERGY_TENSOR".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::ZTC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::HC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::MTC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::ALLC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::W_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::GAMMA_TILDE_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::K_HAT_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::A_TILDE_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::GAM_TILDE_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::THETA_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::ALPHAG_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::BETAG_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): Global grid structure statistics:
INFO (Carpet): GF: rhs: 8904k active, 11906k owned (+34%), 27251k total (+129%), 511 steps/time
INFO (Carpet): GF: vars: 172, pts: 21649M active, 26483M owned (+22%), 55623M total (+110%), 1.0 comp/proc
INFO (Carpet): GA: vars: 256, pts: 4M active, 4M total (+0%)
INFO (Carpet): Total required memory: 443.725 GByte (for GAs and currently active GFs)
INFO (Carpet): Load balance:  min     avg     max     sdv     max/avg-1
INFO (Carpet): Level  0:       1M      1M      2M      0M owned     15%
INFO (Carpet): Level  1:       2M      2M      2M      0M owned      8%
INFO (Carpet): Level  2:       2M      2M      2M      0M owned      5%
INFO (Carpet): Level  3:       2M      2M      2M      0M owned      6%
INFO (Carpet): Level  4:       2M      2M      2M      0M owned      9%
INFO (Carpet): Level  5:       1M      1M      1M      0M owned     12%
INFO (Carpet): Level  6:       2M      2M      2M      0M owned     12%
INFO (Carpet): Level  7:       1M      1M      1M      0M owned     13%
INFO (Carpet): Level  8:       1M      1M      1M      0M owned     12%
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>3.3333333e+00  dy=>3.3333333e+00  dz=>3.3333333e+00
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-406.667,406.667]  y=>[-406.667,406.667]  z=>[-406.667,406.667]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,244]  y=>[0,244]  z=>[0,244]
INFO (Time): Timestep set to 0.833333 (courant_static)
INFO (TwoPunctures): Solving puncture equation for BH-BH system
INFO (TwoPunctures): b = 4
Newton: it=0 	 |F|=3.372486e-03
bare mass: mp=0.4824 	 mm=0.4824
bicgstab:  itmax 100, tol 3.372486e-06
bicgstab:     0   4.536e-02
bicgstab:     1   1.630e-01   1.032e+00   0.000e+00   6.915e-01
bicgstab:     2   3.747e-02   1.731e+00   2.119e-02   4.256e-01
bicgstab:     3   6.557e-03   6.281e-01   2.121e-01   5.886e-01
bicgstab:     4   1.216e-03   1.084e+00   8.294e-02   3.610e-01
bicgstab:     5   6.239e-04   9.026e-01   2.751e-01   9.005e-01
bicgstab:     6   1.090e-03   5.184e+00   9.036e-02   3.778e-01
bicgstab:     7   6.561e-06   6.053e-02  -6.586e+01   1.151e+00
bicgstab:     8   4.047e-06   1.984e+00  -1.037e-03   1.017e+00
bicgstab:     9   1.548e-05  -1.708e+01  -1.717e-01   4.298e-01
bicgstab:    10   3.618e-07  -1.733e-02  -1.047e+03   4.298e-01
Newton: it=1 	 |F|=1.353488e-06
bare mass: mp=0.4824 	 mm=0.4824
bicgstab:  itmax 100, tol 1.353488e-09
bicgstab:     0   1.593e-05
bicgstab:     1   5.290e-05   1.197e+00   0.000e+00   6.360e-01
bicgstab:     2   4.935e-05  -5.333e-02   8.724e-03   2.177e-01
bicgstab:     3   9.028e-07  -1.281e+01  -1.170e+00   9.091e-01
bicgstab:     4   9.403e-08   6.680e-01   3.517e-01   5.320e-01
bicgstab:     5   1.134e-08   5.114e-01   1.253e-01   6.093e-01
bicgstab:     6   2.804e-09   2.731e+00  -2.519e-01   5.379e-01
bicgstab:     7   2.212e-09  -3.845e-01   1.911e-01   3.978e-01
bicgstab:     8   2.481e-10  -9.326e-01  -2.798e+00   3.978e-01
Newton: it=2 	 |F|=3.541236e-11 
INFO (TwoPunctures): The two puncture masses are mp=0.4824 and mm=0.4824
INFO (TwoPunctures): Puncture 1 ADM mass is 0.500098
INFO (TwoPunctures): Puncture 2 ADM mass is 0.500098
INFO (TwoPunctures): The total ADM mass is 0.988444
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.416667 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.208333 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.104167 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.0520833 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.0260417 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.0130208 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.00651042 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.00325521 (courant_static)
INFO (TwoPunctures): Interpolating result
Memory statistics from CarpetLib:
   Current number of objects: 1642
   Current allocated memory:  241 MB
   Maximum number of objects: 1660
   Maximum allocated memory:  243 MB
   Current administrative memory: 19.9 MB
   Total allocated used system memory: 310 MB
   Total allocated free system memory: 2.96 MB
   gh::allmemory:    7193904
   dh::allmemory:    12356176
   th::allmemory:    9432
   ggf::allmemory:   216640
   gdata::allmemory: 101072
INFO (TimerReport): Timer Report at iteration 0 time 0
INFO (TimerReport): Top timers at iteration 0 time 0
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   105.899 104.620 135.894   CCTK total time
 70.5    74.622  74.542 104.604   meta mode/meta mode/global mode
 69.8    73.923  73.864  73.981   main/Initialise/CallInitial
 63.1    66.807  64.034  68.573   meta mode/meta mode/global mode/level(0)
 40.7    43.118  43.110  43.127   main/Initialise/CallInitial/CallRegridInitialMeta
 40.6    43.006  43.003  43.013   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 39.1    41.363  41.124  41.377   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 39.1    41.363  41.123  41.377   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
 39.1    41.360  41.121  41.374   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 33.2    35.175  35.174  35.176   main/CarpetStartup
 33.0    34.972  34.947  34.977   main/CarpetStartup/CarpetLib::gh::regrid
 33.0    34.967  34.941  34.972   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 29.4    31.183   0.004  31.208   main/Initialise/CallSetup
 25.6    27.064  23.747  30.198   main/Initialise/CallInitial/CCTK_INITIAL
 25.6    27.063  23.746  30.196   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 21.4    22.712  21.581  27.822   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
 21.4    22.679  21.543  27.793   [0053] TwoPunctures: TwoPunctures in CCTK_INITIAL
 21.4    22.679  21.542  27.792   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
 16.5    17.507  17.274  20.143   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
  9.0     9.489   9.373  10.996   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
======================================================================
----------------------------------
Iteration      Time | *me_per_hour
                    |             
----------------------------------
        0     0.000 |    0.0000000
INFO (TimerReport): Timer Report at iteration 64 time 0.208333
INFO (TimerReport): Top timers at iteration 64 time 0.208333
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   222.865 222.845 228.838   meta mode
100.0   222.865 222.845 228.838   main
 99.1   220.805 189.610 220.836   CCTK total time
 84.2   187.698 187.665 193.658   meta mode/meta mode
 84.2   187.644 162.448 187.664   main/Initialise
 82.0   182.812 181.699 188.126   meta mode/meta mode/global mode
 36.7    81.902  81.889  87.896   main/Initialise/CallAnalysis
 36.7    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS
 36.7    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
 36.7    81.898  81.887  87.891   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 36.7    81.825  57.826  81.899   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 36.7    81.824  57.825  81.898   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 33.2    73.923  73.864  73.981   main/Initialise/CallInitial
 30.1    67.102  64.319  68.872   meta mode/meta mode/global mode/level(0)
 19.3    43.118  43.110  43.127   main/Initialise/CallInitial/CallRegridInitialMeta
 19.3    43.006  43.003  43.013   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 18.6    41.363  41.124  41.377   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 18.6    41.363  41.123  41.377   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
 18.6    41.360  41.121  41.374   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 15.8    35.175  35.174  35.176   main/CarpetStartup
======================================================================
       64     0.208 |   12.1718831
INFO (TimerReport): Timer Report at iteration 128 time 0.416667
INFO (TimerReport): Top timers at iteration 128 time 0.416667
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   296.933 265.742 296.963   CCTK total time
 81.4   241.750 235.716 253.858   meta mode/meta mode/global mode
 75.1   222.865 222.845 228.838   meta mode
 75.1   222.865 222.845 228.838   main
 63.2   187.698 187.665 193.658   meta mode/meta mode
 63.2   187.644 162.448 187.664   main/Initialise
 35.4   104.997  92.288 105.071   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 27.6    81.902  81.889  87.896   main/Initialise/CallAnalysis
 27.6    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS
 27.6    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
 27.6    81.898  81.887  87.891   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 27.6    81.824  57.825  81.898   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 24.9    73.923  73.864  73.981   main/Initialise/CallInitial
 22.6    67.245  64.457  69.014   meta mode/meta mode/global mode/level(0)
 15.5    46.141  40.350  51.451   main/Evolve/CallEvol
 15.3    45.512  39.738  50.831   main/Evolve/CallEvol/CCTK_EVOL
 15.3    45.428  39.652  50.748   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 14.5    43.118  43.110  43.127   main/Initialise/CallInitial/CallRegridInitialMeta
 14.5    43.006  43.003  43.013   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 13.9    41.363  41.124  41.377   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
======================================================================
      128     0.417 |   10.8887208
INFO (TimerReport): Timer Report at iteration 192 time 0.625
INFO (TimerReport): Top timers at iteration 192 time 0.625
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   362.698 331.357 362.961   CCTK total time
 81.0   293.961 285.636 315.528   meta mode/meta mode/global mode
 61.4   222.865 222.845 228.838   meta mode
 61.4   222.865 222.845 228.838   main
 51.8   187.698 187.665 193.658   meta mode/meta mode
 51.7   187.644 162.448 187.664   main/Initialise
 35.3   128.161 126.759 128.238   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 22.6    81.902  81.889  87.896   main/Initialise/CallAnalysis
 22.6    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS
 22.6    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
 22.6    81.898  81.887  87.891   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 22.6    81.824  57.825  81.898   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 20.4    73.923  73.864  73.981   main/Initialise/CallInitial
 18.6    67.387  64.595  69.156   meta mode/meta mode/global mode/level(0)
 18.4    66.859  58.998  73.649   main/Evolve/CallEvol
 18.2    65.917  58.083  72.732   main/Evolve/CallEvol/CCTK_EVOL
 18.1    65.789  57.953  72.607   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 13.7    49.675  41.353  57.210   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 12.9    46.702  46.642  69.315   main/Evolve/CallAnalysis
 12.8    46.355  46.326  68.951   main/Evolve/CallAnalysis/CCTK_ANALYSIS
======================================================================
      192     0.625 |   11.0410975
INFO (TimerReport): Timer Report at iteration 256 time 0.833333
INFO (TimerReport): Top timers at iteration 256 time 0.833333
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   424.010 392.818 424.038   CCTK total time
 80.9   343.150 333.844 375.495   meta mode/meta mode/global mode
 52.6   222.865 222.845 228.838   meta mode
 52.6   222.865 222.845 228.838   main
 44.3   187.698 187.665 193.658   meta mode/meta mode
 44.3   187.644 162.448 187.664   main/Initialise
 35.7   151.576 151.206 161.641   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 20.1    85.418  76.601  92.553   main/Evolve/CallEvol
 19.8    84.165  75.379  91.328   main/Evolve/CallEvol/CCTK_EVOL
 19.8    83.996  75.206  91.162   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 19.3    81.902  81.889  87.896   main/Initialise/CallAnalysis
 19.3    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS
 19.3    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
 19.3    81.898  81.887  87.891   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 19.3    81.824  57.825  81.898   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 17.4    73.923  73.864  73.981   main/Initialise/CallInitial
 16.6    70.240  69.965 104.326   main/Evolve/CallAnalysis
 16.5    69.775  69.508 103.839   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 16.5    69.768  69.501 103.832   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 16.5    69.751  69.485 103.815   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
======================================================================
      256     0.833 |   11.3285015
INFO (TimerReport): Timer Report at iteration 320 time 1.04167
INFO (TimerReport): Top timers at iteration 320 time 1.04167
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   485.496 454.303 485.525   CCTK total time
 80.9   392.545 382.108 435.511   meta mode/meta mode/global mode
 45.9   222.865 222.845 228.838   meta mode
 45.9   222.865 222.845 228.838   main
 38.7   187.698 187.665 193.658   meta mode/meta mode
 38.7   187.644 162.448 187.664   main/Initialise
 36.0   174.734 174.358 196.096   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 21.5   104.437  94.671 111.938   main/Evolve/CallEvol
 21.2   102.865  93.138 110.370   main/Evolve/CallEvol/CCTK_EVOL
 21.1   102.652  92.921 110.162   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 19.3    93.522  93.231 138.910   main/Evolve/CallAnalysis
 19.1    92.940  92.664 138.301   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 19.1    92.931  92.655 138.292   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 19.1    92.909  92.635 138.270   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 19.1    92.905  92.631 138.266   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 16.9    81.902  81.889  87.896   main/Initialise/CallAnalysis
 16.9    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS
 16.9    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
 16.9    81.898  81.887  87.891   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 16.9    81.824  57.825  81.898   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
======================================================================
      320     1.042 |   11.4909809
INFO (TimerReport): Timer Report at iteration 384 time 1.25
INFO (TimerReport): Top timers at iteration 384 time 1.25
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   546.898 515.707 546.928   CCTK total time
 80.8   441.794 430.267 495.226   meta mode/meta mode/global mode
 40.8   222.865 222.845 228.838   meta mode
 40.8   222.865 222.845 228.838   main
 36.2   197.924 197.540 230.591   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 34.3   187.698 187.665 193.658   meta mode/meta mode
 34.3   187.644 162.448 187.664   main/Initialise
 22.5   123.107 112.419 130.955   main/Evolve/CallEvol
 22.2   121.224 110.572 129.050   main/Evolve/CallEvol/CCTK_EVOL
 22.1   120.970 110.313 128.792   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 21.4   116.834 116.525 173.533   main/Evolve/CallAnalysis
 21.2   116.135 115.851 172.801   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 21.2   116.124 115.840 172.791   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 21.2   116.099 115.816 172.765   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 21.2   116.094 115.811 172.760   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 16.2    88.785  77.258  98.148   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 15.0    81.902  81.889  87.896   main/Initialise/CallAnalysis
 15.0    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS
 15.0    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
 15.0    81.898  81.887  87.891   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
======================================================================
      384     1.250 |   11.6061264
INFO (TimerReport): Timer Report at iteration 448 time 1.45833
INFO (TimerReport): Top timers at iteration 448 time 1.45833
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   608.190 576.997 608.225   CCTK total time
 80.7   490.981 478.315 555.017   meta mode/meta mode/global mode
 36.6   222.865 222.845 228.838   meta mode
 36.6   222.865 222.845 228.838   main
 36.4   221.102 220.710 265.065   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 30.9   187.698 187.665 193.658   meta mode/meta mode
 30.9   187.644 162.448 187.664   main/Initialise
 23.3   141.928 130.280 150.173   main/Evolve/CallEvol
 23.0   140.135 139.807 208.135   main/Evolve/CallAnalysis
 23.0   139.732 128.125 147.941   main/Evolve/CallEvol/CCTK_EVOL
 22.9   139.435 127.823 147.639   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 22.9   139.319 139.025 207.282   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 22.9   139.306 139.013 207.269   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 22.9   139.277 138.985 207.239   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 22.9   139.271 138.979 207.233   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 16.7   101.862  89.250 111.834   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 14.1    85.507  21.503  98.199   main/Evolve/DoTerminate
 13.5    81.902  81.889  87.896   main/Initialise/CallAnalysis
 13.5    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS
 13.5    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
======================================================================
      448     1.458 |   11.6234557
INFO (TimerReport): Timer Report at iteration 512 time 1.66667
INFO (TimerReport): Top timers at iteration 512 time 1.66667
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   671.843 640.652 671.873   CCTK total time
 80.8   542.533 528.732 617.205   meta mode/meta mode/global mode
 36.8   246.919 246.520 302.196   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 33.2   222.865 222.845 228.838   meta mode
 33.2   222.865 222.845 228.838   main
 27.9   187.698 187.665 193.658   meta mode/meta mode
 27.9   187.644 162.448 187.664   main/Initialise
 24.7   166.076 165.723 245.393   main/Evolve/CallAnalysis
 24.6   165.142 164.840 244.418   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 24.6   165.128 164.826 244.404   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 24.6   165.094 164.793 244.369   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 24.6   165.087 164.787 244.362   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 23.9   160.467 147.853 169.102   main/Evolve/CallEvol
 23.5   157.961 145.389 166.553   main/Evolve/CallEvol/CCTK_EVOL
 23.5   157.622 145.043 166.208   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 17.1   114.739 101.014 125.387   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 14.5    97.542  22.905 111.370   main/Evolve/DoTerminate
 12.8    85.795  49.637 122.437   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 12.2    81.902  81.889  87.896   main/Initialise/CallAnalysis
 12.2    81.898  81.887  87.892   main/Initialise/CallAnalysis/CCTK_ANALYSIS
======================================================================
      512     1.667 |   11.7032279
INFO (TimerReport): Timer Report before terminating at iteration 512 time 1.66667
INFO (TimerReport): Top timers at iteration 512 time 1.66667
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   710.287 679.088 710.331   CCTK total time
 79.6   565.721 551.916 655.637   meta mode/meta mode/global mode
 73.6   522.591 516.629 522.624   main/Evolve
 38.0   270.102 269.696 336.677   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 31.4   222.865 222.845 228.838   meta mode
 31.4   222.865 222.845 228.838   main
 26.6   189.265 188.898 283.826   main/Evolve/CallAnalysis
 26.5   188.325 188.015 278.899   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 26.5   188.311 188.002 278.885   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 26.5   188.277 187.969 278.850   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 26.5   188.270 187.962 278.843   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 26.4   187.698 187.665 193.658   meta mode/meta mode
 26.4   187.644 162.448 187.664   main/Initialise
 22.6   160.467 147.853 169.102   main/Evolve/CallEvol
 22.2   157.961 145.389 166.553   main/Evolve/CallEvol/CCTK_EVOL
 22.2   157.622 145.043 166.208   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 16.2   114.739 101.014 125.387   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 15.9   112.778  22.905 126.615   main/Evolve/DoTerminate
 12.1    85.795  49.637 122.437   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 11.5    81.902  81.889  87.896   main/Initialise/CallAnalysis
======================================================================
--------------------------------------------------------------------------------
Done.
TACC:  Shutdown complete. Exiting. 
======================================================================
Job Ended at Sun Mar  9 03:53:52 CDT 2025
