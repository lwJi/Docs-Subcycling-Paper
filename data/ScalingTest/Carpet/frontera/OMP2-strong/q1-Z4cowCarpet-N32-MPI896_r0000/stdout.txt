$ mkdir -p q1-Z4cowCarpet-N32-MPI896_r0000
$ cp q1-Z4cowCarpet.par q1-Z4cowCarpet-N32-MPI896_r0000
$ cd q1-Z4cowCarpet-N32-MPI896_r0000
======================================================================
Launch MPI code...
----------------------------------------------------------------------
MPIRUN = ibrun /work2/08708/liwei/frontera/Cannon/Cactus/exe/cactus_sim q1-Z4cowCarpet.par

Job started on c201-032.frontera.tacc.utexas.edu at Sun Mar  9 00:14:47 CST 2025
======================================================================
TACC:  Starting up job 6976021 
TACC:  Starting parallel tasks... 
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.17.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.17.0
Compile date:      Feb 15 2025 (15:16:47)
Run date:          Mar 09 2025 (00:15:03-0600)
Run host:          c201-032.frontera.tacc.utexas.edu (pid=230516)
Working directory: /scratch1/08708/liwei/Carpet/q1-strong/q1-Z4cowCarpet-N32-MPI896_r0000
Executable:        /work2/08708/liwei/frontera/Cannon/Cactus/exe/cactus_sim
Parameter file:    q1-Z4cowCarpet.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Carpet CarpetLib CarpetInterp CarpetReduce IOUtil NaNChecker Boundary CartGrid3D CoordBase SymBase CarpetRegrid2 MoL Time TwoPunctures ADMBase StaticConformal TmunuBase Z4cowCarpet NewRad CarpetIOBasic CarpetIOASCII TimerReport<---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn Carpet requests automatic activation of LoopControl
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn NewRad requests automatic activation of GenericFD
Thorn TwoPunctures requests automatic activation of GSL
Thorn LoopControl requests automatic activation of hwloc
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetRegrid2...Success -> active implementation CarpetRegrid2
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn GSL...Success -> active implementation GSL
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn NewRad...Success -> active implementation NewRad
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn TimerReport...Success -> active implementation timerreport
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn TwoPunctures...Success -> active implementation TwoPunctures
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn Z4cowCarpet...Success -> active implementation Z4cowCarpet
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      Timers::Timer_Startup: Prepare hierarchical timers
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CarpetRegrid2::CarpetRegrid2_Initialise: [global] Initialise locations of refined regions
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        Z4cowCarpet::Z4cowCarpet_RegisterVars: [global] register evolution system with mol
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CarpetRegrid2::CarpetRegrid2_ParamCheck: Check parameters
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      MoL::MoL_ParamCheck: Basic parameter checking
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      TwoPunctures::TwoPunctures_ParamCheck: Check parameters and thorn needs
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          GROUP TwoPunctures_Group: TwoPunctures initial data group
            TwoPunctures::TwoPunctures: Create puncture black hole initial data
            TwoPunctures::TwoPunctures_Metadata: [global] Output TwoPunctures metadata
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        MoL::MoL_StartLoop: [level] Initialise the step size control
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        GROUP Z4cowCarpet_InitialGroup: Convert ADM to Z4c variables
          Z4cowCarpet::Z4cowCarpet_Initial1: Convert ADM to Z4c variables, part 1
          Z4cowCarpet::Z4cowCarpet_Initial2: Convert ADM to Z4c variables, part 2
          Z4cowCarpet::Z4cowCarpet_InitialLapse: Set initial lapse
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
          Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
          Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
          Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        TimerReport::zzz_TimerReport_Output: [global] Print the timer report
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
        Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
        Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
        GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      ADMBase::ADMBase_Static: Copy the metric and extrinsic curvature to the current time level
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                Z4cowCarpet::Z4cowCarpet_RHS: Calculate Z4c RHS
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
                GROUP SetTmunu: Group for calculating the stress-energy tensor
                  TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
                  GROUP AddToTmunu: Add to the stress-energy tensor here
                Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
                Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
                GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
        Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
        Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
        GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
      TimerReport::zzz_TimerReport_Checkpoint: [global] Print the timer report
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
        Z4cowCarpet::Z4cowCarpet_Enforce: Enforce algebraic Z4c constraints
        Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
        GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-895: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.371228 ns per clock tick (2.69376 GHz)
INFO (Vectors): Using vector size 8 for architecture AVX512 (64-bit precision)
INFO (hwloc): library version 2.0.4, API version 0x20000
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 896 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 2 threads, this is thread 0
INFO (Carpet): There are 1792 threads in total
INFO (Carpet): There are 2 threads per process
INFO (Carpet): This process runs on host c201-032.frontera.tacc.utexas.edu, pid=230516
INFO (Carpet): This process runs on 2 cores: 0, 2
INFO (Carpet): Thread 0 runs on 2 cores: 0, 2
INFO (Carpet): Thread 1 runs on 2 cores: 0, 2
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [-400,-400,-400] : [400,400,400]   ([800,800,800])
   interior extent: [-396.667,-396.667,-396.667] : [396.667,396.667,396.667]   ([793.333,793.333,793.333])
   exterior extent: [-406.667,-406.667,-406.667] : [406.667,406.667,406.667]   ([813.333,813.333,813.333])
   base_spacing   : [3.33333,3.33333,3.33333]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [-400,-400,-400] : [400,400,400]   ([800,800,800])
   interior extent   : [-396.667,-396.667,-396.667] : [396.667,396.667,396.667]   ([793.333,793.333,793.333])
   exterior extent   : [-406.667,-406.667,-406.667] : [406.667,406.667,406.667]   ([813.333,813.333,813.333])
   spacing           : [3.33333,3.33333,3.33333]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [245,245,245]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[9,9,9],[9,9,9]]
   [2]: [[9,9,9],[9,9,9]]
   [3]: [[9,9,9],[9,9,9]]
   [4]: [[9,9,9],[9,9,9]]
   [5]: [[9,9,9],[9,9,9]]
   [6]: [[9,9,9],[9,9,9]]
   [7]: [[9,9,9],[9,9,9]]
   [8]: [[9,9,9],[9,9,9]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[0,0,0],[0,0,0]]
   [2]: [[0,0,0],[0,0,0]]
   [3]: [[0,0,0],[0,0,0]]
   [4]: [[0,0,0],[0,0,0]]
   [5]: [[0,0,0],[0,0,0]]
   [6]: [[0,0,0],[0,0,0]]
   [7]: [[0,0,0],[0,0,0]]
   [8]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 654 grid functions in 48 groups
INFO (Carpet):    There are 179 grid scalars in 33 groups
INFO (Carpet):    There are 81 1-dimensional grid arrays in 7 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 397. 22 are registered.
INFO (MoL): The maximum number of slow evolved variables is 397. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 397. 0 are registered.
INFO (MoL): The maximum number of SandR variables is 397. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 397. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 397. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 397. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 18951/18951 tests passed 
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (Carpet): Grid structure (superregions, grid points):
   [0][0][0]   exterior: [0,0,0] : [244,244,244]   ([245,245,245] + PADDING) 14706125
   [1][0][0]   exterior: [101,103,103] : [387,385,385]   ([287,283,283] + PADDING) 22985543
   [2][0][0]   exterior: [342,347,347] : [634,629,629]   ([293,283,283] + PADDING) 23466077
   [3][0][0]   exterior: [825,835,835] : [1127,1117,1117]   ([303,283,283] + PADDING) 24266967
   [4][0][0]   exterior: [1804,1823,1823] : [2100,2081,2081]   ([297,259,259] + PADDING) 19923057
   [5][0][0]   exterior: [3761,3799,3799] : [4047,4009,4009]   ([287,211,211] + PADDING) 12777527
   [6][0][0]   exterior: [7626,7703,7703] : [7990,7913,7913]   ([365,211,211] + PADDING) 16250165
   [7][0][0]   exterior: [15377,15530,15530] : [15548,15702,15702]   ([172,173,173] + PADDING) 5147788
   [7][0][1]   exterior: [15684,15530,15530] : [15855,15702,15702]   ([172,173,173] + PADDING) 5147788
   [8][0][0]   exterior: [30839,31146,31146] : [31011,31318,31318]   ([173,173,173] + PADDING) 5177717
   [8][0][1]   exterior: [31453,31146,31146] : [31625,31318,31318]   ([173,173,173] + PADDING) 5177717
INFO (Carpet): Grid structure (superregions, coordinates):
   [0][0][0]   exterior: [-406.666666666667,-406.666666666667,-406.666666666667] : [406.666666666667,406.666666666667,406.666666666667] : [3.33333333333333,3.33333333333333,3.33333333333333]
   [1][0][0]   exterior: [-238.333333333333,-235,-235] : [238.333333333333,235,235] : [1.66666666666667,1.66666666666667,1.66666666666667]
   [2][0][0]   exterior: [-121.666666666667,-117.5,-117.5] : [121.666666666667,117.5,117.5] : [0.833333333333333,0.833333333333333,0.833333333333333]
   [3][0][0]   exterior: [-62.9166666666667,-58.75,-58.75] : [62.9166666666667,58.75,58.75] : [0.416666666666667,0.416666666666667,0.416666666666667]
   [4][0][0]   exterior: [-30.8333333333333,-26.875,-26.875] : [30.8333333333333,26.875,26.875] : [0.208333333333333,0.208333333333333,0.208333333333333]
   [5][0][0]   exterior: [-14.8958333333333,-10.9375,-10.9375] : [14.8958333333333,10.9375,10.9375] : [0.104166666666667,0.104166666666667,0.104166666666667]
   [6][0][0]   exterior: [-9.47916666666669,-5.46875,-5.46875] : [9.47916666666669,5.46875,5.46875] : [0.0520833333333333,0.0520833333333333,0.0520833333333333]
   [7][0][0]   exterior: [-6.22395833333331,-2.23958333333331,-2.23958333333331] : [-1.77083333333331,2.23958333333331,2.23958333333331] : [0.0260416666666667,0.0260416666666667,0.0260416666666667]
   [7][0][1]   exterior: [1.77083333333331,-2.23958333333331,-2.23958333333331] : [6.22395833333331,2.23958333333331,2.23958333333331] : [0.0260416666666667,0.0260416666666667,0.0260416666666667]
   [8][0][0]   exterior: [-5.1171875,-1.11979166666669,-1.11979166666669] : [-2.87760416666669,1.11979166666669,1.11979166666669] : [0.0130208333333333,0.0130208333333333,0.0130208333333333]
   [8][0][1]   exterior: [2.87760416666669,-1.11979166666669,-1.11979166666669] : [5.1171875,1.11979166666669,1.11979166666669] : [0.0130208333333333,0.0130208333333333,0.0130208333333333]
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "TMUNUBASE::STRESS_ENERGY_SCALAR".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "TMUNUBASE::STRESS_ENERGY_VECTOR".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "TMUNUBASE::STRESS_ENERGY_TENSOR".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::ZTC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::HC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::MTC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::ALLC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::W_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::GAMMA_TILDE_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::K_HAT_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::A_TILDE_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::GAM_TILDE_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::THETA_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::ALPHAG_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::BETAG_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): Global grid structure statistics:
INFO (Carpet): GF: rhs: 8904k active, 11906k owned (+34%), 23384k total (+96%), 511 steps/time
INFO (Carpet): GF: vars: 172, pts: 21649M active, 26483M owned (+22%), 48415M total (+83%), 1.0 comp/proc
INFO (Carpet): GA: vars: 256, pts: 2M active, 2M total (+0%)
INFO (Carpet): Total required memory: 386.212 GByte (for GAs and currently active GFs)
INFO (Carpet): Load balance:  min     avg     max     sdv     max/avg-1
INFO (Carpet): Level  0:       2M      3M      3M      0M owned     15%
INFO (Carpet): Level  1:       4M      4M      5M      0M owned      5%
INFO (Carpet): Level  2:       4M      5M      5M      0M owned      6%
INFO (Carpet): Level  3:       4M      5M      5M      0M owned      6%
INFO (Carpet): Level  4:       4M      4M      4M      0M owned      4%
INFO (Carpet): Level  5:       2M      2M      3M      0M owned      5%
INFO (Carpet): Level  6:       3M      3M      3M      0M owned      9%
INFO (Carpet): Level  7:       2M      2M      2M      0M owned      5%
INFO (Carpet): Level  8:       2M      2M      2M      0M owned      5%
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>3.3333333e+00  dy=>3.3333333e+00  dz=>3.3333333e+00
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-406.667,406.667]  y=>[-406.667,406.667]  z=>[-406.667,406.667]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,244]  y=>[0,244]  z=>[0,244]
INFO (Time): Timestep set to 0.833333 (courant_static)
INFO (TwoPunctures): Solving puncture equation for BH-BH system
INFO (TwoPunctures): b = 4
Newton: it=0 	 |F|=3.372486e-03
bare mass: mp=0.4824 	 mm=0.4824
bicgstab:  itmax 100, tol 3.372486e-06
bicgstab:     0   4.536e-02
bicgstab:     1   1.630e-01   1.032e+00   0.000e+00   6.915e-01
bicgstab:     2   3.747e-02   1.731e+00   2.119e-02   4.256e-01
bicgstab:     3   6.557e-03   6.281e-01   2.121e-01   5.886e-01
bicgstab:     4   1.216e-03   1.084e+00   8.294e-02   3.610e-01
bicgstab:     5   6.239e-04   9.026e-01   2.751e-01   9.005e-01
bicgstab:     6   1.090e-03   5.184e+00   9.036e-02   3.778e-01
bicgstab:     7   6.561e-06   6.053e-02  -6.586e+01   1.151e+00
bicgstab:     8   4.047e-06   1.984e+00  -1.037e-03   1.017e+00
bicgstab:     9   1.548e-05  -1.708e+01  -1.717e-01   4.298e-01
bicgstab:    10   3.618e-07  -1.733e-02  -1.047e+03   4.298e-01
Newton: it=1 	 |F|=1.353488e-06
bare mass: mp=0.4824 	 mm=0.4824
bicgstab:  itmax 100, tol 1.353488e-09
bicgstab:     0   1.593e-05
bicgstab:     1   5.290e-05   1.197e+00   0.000e+00   6.360e-01
bicgstab:     2   4.935e-05  -5.333e-02   8.724e-03   2.177e-01
bicgstab:     3   9.028e-07  -1.281e+01  -1.170e+00   9.091e-01
bicgstab:     4   9.403e-08   6.680e-01   3.517e-01   5.320e-01
bicgstab:     5   1.134e-08   5.114e-01   1.253e-01   6.093e-01
bicgstab:     6   2.804e-09   2.731e+00  -2.519e-01   5.379e-01
bicgstab:     7   2.212e-09  -3.845e-01   1.911e-01   3.978e-01
bicgstab:     8   2.481e-10  -9.326e-01  -2.798e+00   3.978e-01
Newton: it=2 	 |F|=3.541236e-11 
INFO (TwoPunctures): The two puncture masses are mp=0.4824 and mm=0.4824
INFO (TwoPunctures): Puncture 1 ADM mass is 0.500098
INFO (TwoPunctures): Puncture 2 ADM mass is 0.500098
INFO (TwoPunctures): The total ADM mass is 0.988444
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.416667 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.208333 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.104167 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.0520833 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.0260417 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.0130208 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.00651042 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.00325521 (courant_static)
INFO (TwoPunctures): Interpolating result
Memory statistics from CarpetLib:
   Current number of objects: 1642
   Current allocated memory:  420 MB
   Maximum number of objects: 1660
   Maximum allocated memory:  423 MB
   Current administrative memory: 10.4 MB
   Total allocated used system memory: 476 MB
   Total allocated free system memory: 3.83 MB
   gh::allmemory:    3609904
   dh::allmemory:    6440416
   th::allmemory:    9432
   ggf::allmemory:   216640
   gdata::allmemory: 101072
INFO (TimerReport): Timer Report at iteration 0 time 0
INFO (TimerReport): Top timers at iteration 0 time 0
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   56.8183 56.4182 65.3554   CCTK total time
 90.5   51.4346 51.0783 59.9794   meta mode/meta mode/global mode
 88.6   50.3575 50.2921 50.4206   main/Initialise/CallInitial
 76.6   43.5144 43.4131 43.5779   meta mode/meta mode/global mode/level(0)
 47.0   26.7007 25.6551 27.3736   main/Initialise/CallInitial/CCTK_INITIAL
 47.0   26.6992 25.6538 27.3720   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 43.4   24.6589 23.5705 25.6139   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
 43.3   24.6050 23.5163 25.5609   [0053] TwoPunctures: TwoPunctures in CCTK_INITIAL
 43.3   24.6045 23.5157 25.5604   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
 39.3   22.3484 22.3404 22.3616   main/Initialise/CallInitial/CallRegridInitialMeta
 39.0   22.1332 22.1316 22.1363   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 37.5   21.3247 21.2060 21.3281   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 37.5   21.3243 21.2057 21.3277   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
 37.5   21.3231 21.2045 21.3265   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 30.9   17.5427 17.5416 17.5436   main/CarpetStartup
 30.7   17.4375 17.4262 17.4399   main/CarpetStartup/CarpetLib::gh::regrid
 30.7   17.4349 17.4237 17.4374   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 15.4    8.7482  8.6237 10.0689   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
  9.3    5.3074  0.0039  5.3195   main/Initialise/CallSetup
  8.4    4.7661  4.7068  5.5237   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
======================================================================
----------------------------------
Iteration      Time | *me_per_hour
                    |             
----------------------------------
        0     0.000 |    0.0000000
INFO (TimerReport): Timer Report at iteration 64 time 0.208333
INFO (TimerReport): Top timers at iteration 64 time 0.208333
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   111.721 106.412 111.734   CCTK total time
 92.0   102.761 102.033 105.523   meta mode/meta mode/global mode
 79.4    88.683  88.674  91.504   meta mode
 79.4    88.683  88.674  91.504   main
 63.7    71.141  71.129  73.960   meta mode/meta mode
 63.7    71.120  68.638  71.126   main/Initialise
 45.1    50.358  50.292  50.421   main/Initialise/CallInitial
 39.2    43.841  43.737  43.916   meta mode/meta mode/global mode/level(0)
 25.6    28.651  27.972  29.154   main/Evolve/CallEvol
 25.2    28.207  27.509  28.698   main/Evolve/CallEvol/CCTK_EVOL
 25.2    28.162  27.463  28.653   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 23.9    26.701  25.655  27.374   main/Initialise/CallInitial/CCTK_INITIAL
 23.9    26.699  25.654  27.372   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 22.1    24.659  23.570  25.614   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
 22.0    24.605  23.516  25.561   [0053] TwoPunctures: TwoPunctures in CCTK_INITIAL
 22.0    24.604  23.516  25.560   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
 20.0    22.348  22.340  22.362   main/Initialise/CallInitial/CallRegridInitialMeta
 19.8    22.133  22.132  22.136   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 19.1    21.325  21.206  21.328   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 19.1    21.324  21.206  21.328   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
======================================================================
       64     0.208 |   13.7201547
INFO (TimerReport): Timer Report at iteration 128 time 0.416667
INFO (TimerReport): Top timers at iteration 128 time 0.416667
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   165.554 160.243 165.567   CCTK total time
 90.8   150.291 148.888 158.516   meta mode/meta mode/global mode
 53.6    88.683  88.674  91.504   meta mode
 53.6    88.683  88.674  91.504   main
 43.0    71.141  71.129  73.960   meta mode/meta mode
 43.0    71.120  68.638  71.126   main/Initialise
 34.1    56.448  55.154  57.405   main/Evolve/CallEvol
 33.6    55.560  54.226  56.505   main/Evolve/CallEvol/CCTK_EVOL
 33.5    55.472  54.135  56.417   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 30.4    50.358  50.292  50.421   main/Initialise/CallInitial
 26.5    43.916  43.810  44.010   meta mode/meta mode/global mode/level(0)
 20.9    34.606  32.306  36.725   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 16.7    27.723  26.146  31.589   meta mode/meta mode/global mode/level(8)
 16.1    26.701  25.655  27.374   main/Initialise/CallInitial/CCTK_INITIAL
 16.1    26.699  25.654  27.372   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 15.5    25.693  17.143  26.041   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 14.9    24.659  23.570  25.614   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
 14.9    24.605  23.516  25.561   [0053] TwoPunctures: TwoPunctures in CCTK_INITIAL
 14.9    24.604  23.516  25.560   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
 14.3    23.694  14.918  34.324   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
======================================================================
      128     0.417 |   13.8285683
INFO (TimerReport): Timer Report at iteration 192 time 0.625
INFO (TimerReport): Top timers at iteration 192 time 0.625
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   219.738 214.428 219.750   CCTK total time
 90.2   198.161 196.073 211.854   meta mode/meta mode/global mode
 40.4    88.683  88.674  91.504   meta mode
 40.4    88.683  88.674  91.504   main
 38.5    84.706  82.811  86.118   main/Evolve/CallEvol
 37.9    83.360  81.410  84.777   main/Evolve/CallEvol/CCTK_EVOL
 37.9    83.228  81.273  84.649   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 32.4    71.141  71.129  73.960   meta mode/meta mode
 32.4    71.120  68.638  71.126   main/Initialise
 23.6    51.899  48.473  55.084   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 22.9    50.358  50.292  50.421   main/Initialise/CallInitial
 20.0    43.992  43.882  44.105   meta mode/meta mode/global mode/level(0)
 18.8    41.270  38.969  47.009   meta mode/meta mode/global mode/level(8)
 16.8    37.009  28.455  42.407   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 16.2    35.503  22.312  51.485   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 14.0    30.828  25.671  33.587   meta mode/meta mode/global mode/level(7)
 13.9    30.489  28.020  32.478   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 12.2    26.701  25.655  27.374   main/Initialise/CallInitial/CCTK_INITIAL
 12.2    26.699  25.654  27.372   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 11.2    24.659  23.570  25.614   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
======================================================================
      192     0.625 |   13.8341235
INFO (TimerReport): Timer Report at iteration 256 time 0.833333
INFO (TimerReport): Top timers at iteration 256 time 0.833333
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   273.715 268.405 273.726   CCTK total time
 89.8   245.826 243.073 264.937   meta mode/meta mode/global mode
 41.2   112.682 110.193 114.540   main/Evolve/CallEvol
 40.5   110.880 108.333 112.759   main/Evolve/CallEvol/CCTK_EVOL
 40.4   110.704 108.152 112.589   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 32.4    88.683  88.674  91.504   meta mode
 32.4    88.683  88.674  91.504   main
 26.0    71.141  71.129  73.960   meta mode/meta mode
 26.0    71.120  68.638  71.126   main/Initialise
 25.2    69.065  64.522  73.332   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 20.0    54.814  51.780  62.425   meta mode/meta mode/global mode/level(8)
 18.4    50.358  50.292  50.421   main/Initialise/CallInitial
 17.7    48.329  39.770  59.265   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 17.3    47.232  29.749  68.537   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 16.1    44.153  44.037  44.299   meta mode/meta mode/global mode/level(0)
 15.0    41.041  34.194  44.751   meta mode/meta mode/global mode/level(7)
 14.8    40.522  37.244  43.177   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 12.6    34.359  34.300  51.033   main/Evolve/CallAnalysis
 12.4    33.999  33.964  50.652   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 12.4    33.992  33.958  50.645   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
======================================================================
      256     0.833 |   13.8476166
INFO (TimerReport): Timer Report at iteration 320 time 1.04167
INFO (TimerReport): Top timers at iteration 320 time 1.04167
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   328.224 322.903 328.244   CCTK total time
 89.6   294.046 290.627 318.624   meta mode/meta mode/global mode
 43.0   141.253 138.150 143.587   main/Evolve/CallEvol
 42.3   138.981 135.812 141.372   main/Evolve/CallEvol/CCTK_EVOL
 42.3   138.761 135.586 141.158   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 27.0    88.683  88.674  91.504   meta mode
 27.0    88.683  88.674  91.504   main
 26.4    86.575  80.856  91.904   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 21.7    71.141  71.129  73.960   meta mode/meta mode
 21.7    71.120  68.638  71.126   main/Initialise
 20.8    68.370  64.606  77.876   meta mode/meta mode/global mode/level(8)
 18.2    59.650  51.087  76.149   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 18.0    59.203  37.223  85.887   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 15.6    51.112  42.565  55.743   meta mode/meta mode/global mode/level(7)
 15.5    50.788  46.669  54.125   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 15.3    50.358  50.292  50.421   main/Initialise/CallInitial
 13.9    45.776  45.701  68.019   main/Evolve/CallAnalysis
 13.8    45.326  45.281  67.542   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 13.8    45.318  45.272  67.533   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 13.8    45.297  45.252  67.512   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
======================================================================
      320     1.042 |   13.8309011
INFO (TimerReport): Timer Report at iteration 384 time 1.25
INFO (TimerReport): Top timers at iteration 384 time 1.25
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   382.058 376.747 382.070   CCTK total time
 89.4   341.603 337.505 371.643   meta mode/meta mode/global mode
 44.3   169.106 165.395 171.893   main/Evolve/CallEvol
 43.5   166.380 162.611 169.253   main/Evolve/CallEvol/CCTK_EVOL
 43.5   166.116 162.339 168.996   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 27.1   103.634  96.786 110.034   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 23.2    88.683  88.674  91.504   meta mode
 23.2    88.683  88.674  91.504   main
 21.4    81.931  77.466  93.349   meta mode/meta mode/global mode/level(8)
 18.6    71.141  71.129  73.960   meta mode/meta mode
 18.6    71.120  68.638  71.126   main/Initialise
 18.6    70.953  62.374  93.022   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 18.5    70.869  44.463 102.810   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 16.0    61.159  50.909  66.681   meta mode/meta mode/global mode/level(7)
 15.9    60.808  55.874  64.794   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 15.0    57.175  57.088  84.994   main/Evolve/CallAnalysis
 14.8    56.634  56.586  84.421   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 14.8    56.624  56.576  84.410   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 14.8    56.599  56.550  84.385   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 14.8    56.594  56.545  84.381   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
======================================================================
      384     1.250 |   13.8475554
INFO (TimerReport): Timer Report at iteration 448 time 1.45833
INFO (TimerReport): Top timers at iteration 448 time 1.45833
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   436.260 430.951 436.273   CCTK total time
 89.3   389.506 384.682 425.056   meta mode/meta mode/global mode
 45.2   197.395 193.045 200.666   main/Evolve/CallEvol
 44.5   194.205 189.798 197.592   main/Evolve/CallEvol/CCTK_EVOL
 44.4   193.897 189.482 197.292   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 27.7   120.964 112.975 128.397   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 21.9    95.496  90.300 108.805   meta mode/meta mode/global mode/level(8)
 20.3    88.683  88.674  91.504   meta mode
 20.3    88.683  88.674  91.504   main
 19.0    82.715  51.906 119.960   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 18.9    82.253  73.668 109.888   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 16.3    71.217  59.242  77.613   meta mode/meta mode/global mode/level(7)
 16.3    71.141  71.129  73.960   meta mode/meta mode
 16.3    71.120  68.638  71.126   main/Initialise
 16.3    70.980  65.229  75.637   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 15.7    68.572  68.469 101.962   main/Evolve/CallAnalysis
 15.6    67.941  67.883 101.292   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 15.6    67.929  67.871 101.280   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 15.6    67.899  67.841 101.250   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 15.6    67.894  67.835 101.245   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
======================================================================
      448     1.458 |   13.8457513
INFO (TimerReport): Timer Report at iteration 512 time 1.66667
INFO (TimerReport): Top timers at iteration 512 time 1.66667
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   490.115 484.807 490.128   CCTK total time
 89.2   437.059 431.535 478.094   meta mode/meta mode/global mode
 46.0   225.295 220.312 229.041   main/Evolve/CallEvol
 45.2   221.651 216.615 225.543   main/Evolve/CallEvol/CCTK_EVOL
 45.2   221.299 216.254 225.200   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 28.2   138.072 128.922 146.558   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 22.2   109.047 103.123 124.219   meta mode/meta mode/global mode/level(8)
 19.3    94.426  59.265 136.895   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 19.1    93.569  84.980 126.759   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 18.1    88.683  88.674  91.504   meta mode
 18.1    88.683  88.674  91.504   main
 16.6    81.280  67.590  88.564   meta mode/meta mode/global mode/level(7)
 16.5    80.998  74.438  86.304   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 16.3    79.984  79.869 118.934   main/Evolve/CallAnalysis
 16.2    79.263  79.196 118.169   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 16.2    79.249  79.182 118.155   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 16.2    79.215  79.149 118.121   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 16.2    79.209  79.142 118.115   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 14.5    71.141  71.129  73.960   meta mode/meta mode
 14.5    71.120  68.638  71.126   main/Initialise
======================================================================
      512     1.667 |   13.8558473
INFO (TimerReport): Timer Report before terminating at iteration 512 time 1.66667
INFO (TimerReport): Top timers at iteration 512 time 1.66667
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   507.004 501.678 513.385   CCTK total time
 88.4   448.362 442.835 494.963   meta mode/meta mode/global mode
 86.0   435.852 433.032 435.865   main/Evolve
 44.4   225.295 220.312 229.041   main/Evolve/CallEvol
 43.7   221.651 216.615 225.543   main/Evolve/CallEvol/CCTK_EVOL
 43.6   221.299 216.254 225.200   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 27.2   138.072 128.922 146.558   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 21.5   109.048 103.124 124.220   meta mode/meta mode/global mode/level(8)
 20.7   104.871  96.277 143.625   [0089] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 18.6    94.426  59.265 136.895   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 18.0    91.289  91.166 135.804   main/Evolve/CallAnalysis
 17.9    90.564  90.486 135.035   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 17.9    90.550  90.472 135.021   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 17.9    90.517  90.439 134.988   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 17.9    90.510  90.432 134.981   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 17.5    88.683  88.674  91.504   meta mode
 17.5    88.683  88.674  91.504   main
 16.0    81.280  67.590  88.564   meta mode/meta mode/global mode/level(7)
 16.0    80.998  74.438  86.304   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 14.0    71.141  71.129  73.960   meta mode/meta mode
======================================================================
--------------------------------------------------------------------------------
Done.
TACC:  Shutdown complete. Exiting. 
======================================================================
Job Ended at Sun Mar  9 00:24:09 CST 2025
