$ mkdir -p q1-Z4cowCarpet-N32-MPI1792_r0000
$ cp q1-Z4cowCarpet.par q1-Z4cowCarpet-N32-MPI1792_r0000
$ cd q1-Z4cowCarpet-N32-MPI1792_r0000
======================================================================
Launch MPI code...
----------------------------------------------------------------------
MPIRUN = ibrun /work2/08708/liwei/frontera/Cannon/Cactus/exe/cactus_sim q1-Z4cowCarpet.par

Job started on c201-032.frontera.tacc.utexas.edu at Fri Feb  7 19:58:47 CST 2025
======================================================================
TACC:  Starting up job 6902897 
TACC:  Starting parallel tasks... 
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.17.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.17.0
Compile date:      Feb 07 2025 (14:28:16)
Run date:          Feb 07 2025 (19:59:13-0600)
Run host:          c201-032.frontera.tacc.utexas.edu (pid=70227)
Working directory: /scratch1/08708/liwei/Carpet/q1-Z4cowCarpet-N32-MPI1792_r0000
Executable:        /work2/08708/liwei/frontera/Cannon/Cactus/exe/cactus_sim
Parameter file:    q1-Z4cowCarpet.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Carpet CarpetLib CarpetInterp CarpetReduce IOUtil NaNChecker Boundary CartGrid3D CoordBase SymBase CarpetRegrid2 MoL Time TwoPunctures ADMBase StaticConformal TmunuBase Z4cowCarpet NewRad CarpetIOBasic TimerReport<---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn Carpet requests automatic activation of LoopControl
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn NewRad requests automatic activation of GenericFD
Thorn TwoPunctures requests automatic activation of GSL
Thorn LoopControl requests automatic activation of hwloc
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetRegrid2...Success -> active implementation CarpetRegrid2
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn GSL...Success -> active implementation GSL
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn NewRad...Success -> active implementation NewRad
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn TimerReport...Success -> active implementation timerreport
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn TwoPunctures...Success -> active implementation TwoPunctures
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn Z4cowCarpet...Success -> active implementation Z4cowCarpet
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CarpetRegrid2::CarpetRegrid2_Initialise: [global] Initialise locations of refined regions
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        Z4cowCarpet::Z4cowCarpet_RegisterVars: [global] register evolution system with mol
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CarpetRegrid2::CarpetRegrid2_ParamCheck: Check parameters
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      MoL::MoL_ParamCheck: Basic parameter checking
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      TwoPunctures::TwoPunctures_ParamCheck: Check parameters and thorn needs
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          GROUP TwoPunctures_Group: TwoPunctures initial data group
            TwoPunctures::TwoPunctures: Create puncture black hole initial data
            TwoPunctures::TwoPunctures_Metadata: [global] Output TwoPunctures metadata
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        MoL::MoL_StartLoop: [level] Initialise the step size control
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        GROUP Z4cowCarpet_InitialGroup: Convert ADM to Z4c variables
          Z4cowCarpet::Z4cowCarpet_Initial1: Convert ADM to Z4c variables, part 1
          Z4cowCarpet::Z4cowCarpet_Initial2: Convert ADM to Z4c variables, part 2
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
          Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
          GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        TimerReport::zzz_TimerReport_Output: [global] Print the timer report
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
        Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
        GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      ADMBase::ADMBase_Static: Copy the metric and extrinsic curvature to the current time level
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                Z4cowCarpet::Z4cowCarpet_RHS: Calculate Z4c RHS
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
                GROUP SetTmunu: Group for calculating the stress-energy tensor
                  TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
                  GROUP AddToTmunu: Add to the stress-energy tensor here
                Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
                GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
        Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
        GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
      TimerReport::zzz_TimerReport_Checkpoint: [global] Print the timer report
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
        Z4cowCarpet::Z4cowCarpet_SelectBoundConds: [level] select boundary conditions
        GROUP Z4cowCarpet_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1791: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.371231 ns per clock tick (2.69374 GHz)
INFO (Vectors): Using vector size 8 for architecture AVX512 (64-bit precision)
INFO (hwloc): library version 2.0.4, API version 0x20000
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 1792 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 1792 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host c201-032.frontera.tacc.utexas.edu, pid=70227
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [-400,-400,-400] : [400,400,400]   ([800,800,800])
   interior extent: [-396.667,-396.667,-396.667] : [396.667,396.667,396.667]   ([793.333,793.333,793.333])
   exterior extent: [-406.667,-406.667,-406.667] : [406.667,406.667,406.667]   ([813.333,813.333,813.333])
   base_spacing   : [3.33333,3.33333,3.33333]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [-400,-400,-400] : [400,400,400]   ([800,800,800])
   interior extent   : [-396.667,-396.667,-396.667] : [396.667,396.667,396.667]   ([793.333,793.333,793.333])
   exterior extent   : [-406.667,-406.667,-406.667] : [406.667,406.667,406.667]   ([813.333,813.333,813.333])
   spacing           : [3.33333,3.33333,3.33333]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [245,245,245]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[9,9,9],[9,9,9]]
   [2]: [[9,9,9],[9,9,9]]
   [3]: [[9,9,9],[9,9,9]]
   [4]: [[9,9,9],[9,9,9]]
   [5]: [[9,9,9],[9,9,9]]
   [6]: [[9,9,9],[9,9,9]]
   [7]: [[9,9,9],[9,9,9]]
   [8]: [[9,9,9],[9,9,9]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[0,0,0],[0,0,0]]
   [2]: [[0,0,0],[0,0,0]]
   [3]: [[0,0,0],[0,0,0]]
   [4]: [[0,0,0],[0,0,0]]
   [5]: [[0,0,0],[0,0,0]]
   [6]: [[0,0,0],[0,0,0]]
   [7]: [[0,0,0],[0,0,0]]
   [8]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 646 grid functions in 44 groups
INFO (Carpet):    There are 167 grid scalars in 30 groups
INFO (Carpet):    There are 81 1-dimensional grid arrays in 7 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 377. 22 are registered.
INFO (MoL): The maximum number of slow evolved variables is 377. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 377. 0 are registered.
INFO (MoL): The maximum number of SandR variables is 377. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 377. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 377. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 377. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 18951/18951 tests passed 
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (Carpet): Grid structure (superregions, grid points):
   [0][0][0]   exterior: [0,0,0] : [244,244,244]   ([245,245,245] + PADDING) 14706125
   [1][0][0]   exterior: [101,103,103] : [387,385,385]   ([287,283,283] + PADDING) 22985543
   [2][0][0]   exterior: [342,347,347] : [634,629,629]   ([293,283,283] + PADDING) 23466077
   [3][0][0]   exterior: [825,835,835] : [1127,1117,1117]   ([303,283,283] + PADDING) 24266967
   [4][0][0]   exterior: [1804,1823,1823] : [2100,2081,2081]   ([297,259,259] + PADDING) 19923057
   [5][0][0]   exterior: [3761,3799,3799] : [4047,4009,4009]   ([287,211,211] + PADDING) 12777527
   [6][0][0]   exterior: [7626,7703,7703] : [7990,7913,7913]   ([365,211,211] + PADDING) 16250165
   [7][0][0]   exterior: [15377,15530,15530] : [15548,15702,15702]   ([172,173,173] + PADDING) 5147788
   [7][0][1]   exterior: [15684,15530,15530] : [15855,15702,15702]   ([172,173,173] + PADDING) 5147788
   [8][0][0]   exterior: [30839,31146,31146] : [31011,31318,31318]   ([173,173,173] + PADDING) 5177717
   [8][0][1]   exterior: [31453,31146,31146] : [31625,31318,31318]   ([173,173,173] + PADDING) 5177717
INFO (Carpet): Grid structure (superregions, coordinates):
   [0][0][0]   exterior: [-406.666666666667,-406.666666666667,-406.666666666667] : [406.666666666667,406.666666666667,406.666666666667] : [3.33333333333333,3.33333333333333,3.33333333333333]
   [1][0][0]   exterior: [-238.333333333333,-235,-235] : [238.333333333333,235,235] : [1.66666666666667,1.66666666666667,1.66666666666667]
   [2][0][0]   exterior: [-121.666666666667,-117.5,-117.5] : [121.666666666667,117.5,117.5] : [0.833333333333333,0.833333333333333,0.833333333333333]
   [3][0][0]   exterior: [-62.9166666666667,-58.75,-58.75] : [62.9166666666667,58.75,58.75] : [0.416666666666667,0.416666666666667,0.416666666666667]
   [4][0][0]   exterior: [-30.8333333333333,-26.875,-26.875] : [30.8333333333333,26.875,26.875] : [0.208333333333333,0.208333333333333,0.208333333333333]
   [5][0][0]   exterior: [-14.8958333333333,-10.9375,-10.9375] : [14.8958333333333,10.9375,10.9375] : [0.104166666666667,0.104166666666667,0.104166666666667]
   [6][0][0]   exterior: [-9.47916666666669,-5.46875,-5.46875] : [9.47916666666669,5.46875,5.46875] : [0.0520833333333333,0.0520833333333333,0.0520833333333333]
   [7][0][0]   exterior: [-6.22395833333331,-2.23958333333331,-2.23958333333331] : [-1.77083333333331,2.23958333333331,2.23958333333331] : [0.0260416666666667,0.0260416666666667,0.0260416666666667]
   [7][0][1]   exterior: [1.77083333333331,-2.23958333333331,-2.23958333333331] : [6.22395833333331,2.23958333333331,2.23958333333331] : [0.0260416666666667,0.0260416666666667,0.0260416666666667]
   [8][0][0]   exterior: [-5.1171875,-1.11979166666669,-1.11979166666669] : [-2.87760416666669,1.11979166666669,1.11979166666669] : [0.0130208333333333,0.0130208333333333,0.0130208333333333]
   [8][0][1]   exterior: [2.87760416666669,-1.11979166666669,-1.11979166666669] : [5.1171875,1.11979166666669,1.11979166666669] : [0.0130208333333333,0.0130208333333333,0.0130208333333333]
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "TMUNUBASE::STRESS_ENERGY_SCALAR".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "TMUNUBASE::STRESS_ENERGY_VECTOR".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "TMUNUBASE::STRESS_ENERGY_TENSOR".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::W_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::GAMMA_TILDE_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::K_HAT_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::A_TILDE_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::GAM_TILDE_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::THETA_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::ALPHAG_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "Z4COWCARPET::BETAG_RHS".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): Global grid structure statistics:
INFO (Carpet): GF: rhs: 8904k active, 11906k owned (+34%), 27251k total (+129%), 511 steps/time
INFO (Carpet): GF: vars: 164, pts: 20642M active, 25251M owned (+22%), 53036M total (+110%), 1.0 comp/proc
INFO (Carpet): GA: vars: 244, pts: 4M active, 4M total (+0%)
INFO (Carpet): Total required memory: 423.028 GByte (for GAs and currently active GFs)
INFO (Carpet): Load balance:  min     avg     max     sdv     max/avg-1
INFO (Carpet): Level  0:       1M      1M      1M      0M owned     15%
INFO (Carpet): Level  1:       2M      2M      2M      0M owned      8%
INFO (Carpet): Level  2:       2M      2M      2M      0M owned      5%
INFO (Carpet): Level  3:       2M      2M      2M      0M owned      6%
INFO (Carpet): Level  4:       2M      2M      2M      0M owned      9%
INFO (Carpet): Level  5:       1M      1M      1M      0M owned     12%
INFO (Carpet): Level  6:       1M      1M      2M      0M owned     12%
INFO (Carpet): Level  7:       1M      1M      1M      0M owned     13%
INFO (Carpet): Level  8:       1M      1M      1M      0M owned     12%
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>3.3333333e+00  dy=>3.3333333e+00  dz=>3.3333333e+00
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-406.667,406.667]  y=>[-406.667,406.667]  z=>[-406.667,406.667]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,244]  y=>[0,244]  z=>[0,244]
INFO (Time): Timestep set to 0.833333 (courant_static)
INFO (TwoPunctures): Solving puncture equation for BH-BH system
INFO (TwoPunctures): b = 4
Newton: it=0 	 |F|=3.372486e-03
bare mass: mp=0.4824 	 mm=0.4824
bicgstab:  itmax 100, tol 3.372486e-06
bicgstab:     0   4.536e-02
bicgstab:     1   1.630e-01   1.032e+00   0.000e+00   6.915e-01
bicgstab:     2   3.747e-02   1.731e+00   2.119e-02   4.256e-01
bicgstab:     3   6.557e-03   6.281e-01   2.121e-01   5.886e-01
bicgstab:     4   1.216e-03   1.084e+00   8.294e-02   3.610e-01
bicgstab:     5   6.239e-04   9.026e-01   2.751e-01   9.005e-01
bicgstab:     6   1.090e-03   5.184e+00   9.036e-02   3.778e-01
bicgstab:     7   6.561e-06   6.053e-02  -6.586e+01   1.151e+00
bicgstab:     8   4.047e-06   1.984e+00  -1.037e-03   1.017e+00
bicgstab:     9   1.548e-05  -1.708e+01  -1.717e-01   4.298e-01
bicgstab:    10   3.618e-07  -1.733e-02  -1.047e+03   4.298e-01
Newton: it=1 	 |F|=1.353488e-06
bare mass: mp=0.4824 	 mm=0.4824
bicgstab:  itmax 100, tol 1.353488e-09
bicgstab:     0   1.593e-05
bicgstab:     1   5.290e-05   1.197e+00   0.000e+00   6.360e-01
bicgstab:     2   4.935e-05  -5.333e-02   8.724e-03   2.177e-01
bicgstab:     3   9.028e-07  -1.281e+01  -1.170e+00   9.091e-01
bicgstab:     4   9.403e-08   6.680e-01   3.517e-01   5.320e-01
bicgstab:     5   1.134e-08   5.114e-01   1.253e-01   6.093e-01
bicgstab:     6   2.804e-09   2.731e+00  -2.519e-01   5.379e-01
bicgstab:     7   2.212e-09  -3.845e-01   1.911e-01   3.978e-01
bicgstab:     8   2.481e-10  -9.326e-01  -2.798e+00   3.978e-01
Newton: it=2 	 |F|=3.541236e-11 
INFO (TwoPunctures): The two puncture masses are mp=0.4824 and mm=0.4824
INFO (TwoPunctures): Puncture 1 ADM mass is 0.500098
INFO (TwoPunctures): Puncture 2 ADM mass is 0.500098
INFO (TwoPunctures): The total ADM mass is 0.988444
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.416667 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.208333 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.104167 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.0520833 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.0260417 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.0130208 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.00651042 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (Time): Timestep set to 0.00325521 (courant_static)
INFO (TwoPunctures): Interpolating result
Memory statistics from CarpetLib:
   Current number of objects: 1567
   Current allocated memory:  230 MB
   Maximum number of objects: 1585
   Maximum allocated memory:  232 MB
   Current administrative memory: 18.7 MB
   Total allocated used system memory: 298 MB
   Total allocated free system memory: 2.81 MB
   gh::allmemory:    6762048
   dh::allmemory:    11620368
   th::allmemory:    8796
   ggf::allmemory:   202192
   gdata::allmemory: 96368
INFO (TimerReport): Timer Report at iteration 0 time 0
INFO (TimerReport): Top timers at iteration 0 time 0
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   86.0564 86.0237 86.0870   CCTK total time
 99.9   85.9984 85.9749 86.0380   meta mode/meta mode/global mode
 99.1   85.3169 85.2424 85.3950   main/Initialise/CallInitial
 88.7   76.3178 74.8148 77.2832   meta mode/meta mode/global mode/level(0)
 50.5   43.4752 43.4610 43.5619   main/Initialise/CallInitial/CallRegridInitialMeta
 50.3   43.3209 43.3166 43.3233   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 48.4   41.6679 41.4234 41.6722   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 48.4   41.6673 41.4227 41.6715   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
 48.4   41.6645 41.4204 41.6690   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 45.7   39.3278 36.7749 41.1742   main/Initialise/CallInitial/CCTK_INITIAL
 45.7   39.3268 36.7740 41.1731   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 41.5   35.7044 34.0624 38.7528   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
 41.4   35.6629 34.0232 38.7103   [0052] TwoPunctures: TwoPunctures in CCTK_INITIAL
 41.4   35.6625 34.0229 38.7098   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
 38.3   32.9918 32.9887 32.9950   main/CarpetStartup
 38.1   32.7622 32.7381 32.7736   main/CarpetStartup/CarpetLib::gh::regrid
 38.1   32.7557 32.7304 32.7670   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 19.0   16.3333 16.1037 18.8663   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
 11.1    9.5123  9.3822 11.0246   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
 10.3    8.9062  1.3009 13.3026   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid/bcast_boxes
======================================================================
----------------------------------
Iteration      Time | *me_per_hour
                    |             
----------------------------------
        0     0.000 |    0.0000000
INFO (TimerReport): Timer Report at iteration 64 time 0.208333
INFO (TimerReport): Top timers at iteration 64 time 0.208333
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   128.032 128.015 132.256   main
100.0   128.032 128.015 132.256   meta mode
 98.1   125.573 125.559 125.586   CCTK total time
 94.1   120.449 119.053 124.129   meta mode/meta mode/global mode
 74.2    95.033  95.019  99.257   meta mode/meta mode
 74.2    95.008  94.998  99.241   main/Initialise
 66.6    85.317  85.242  85.395   main/Initialise/CallInitial
 59.9    76.657  75.142  77.621   meta mode/meta mode/global mode/level(0)
 34.0    43.475  43.461  43.562   main/Initialise/CallInitial/CallRegridInitialMeta
 33.8    43.321  43.317  43.323   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 32.5    41.668  41.423  41.672   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 32.5    41.667  41.423  41.672   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
 32.5    41.665  41.420  41.669   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 30.7    39.328  36.775  41.174   main/Initialise/CallInitial/CCTK_INITIAL
 30.7    39.327  36.774  41.173   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 27.9    35.704  34.062  38.753   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
 27.9    35.663  34.023  38.710   [0052] TwoPunctures: TwoPunctures in CCTK_INITIAL
 27.9    35.663  34.023  38.710   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
 25.8    32.992  32.989  32.995   main/CarpetStartup
 25.6    32.762  32.738  32.774   main/CarpetStartup/CarpetLib::gh::regrid
======================================================================
       64     0.208 |   13.3055055
INFO (TimerReport): Timer Report at iteration 128 time 0.416667
INFO (TimerReport): Top timers at iteration 128 time 0.416667
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   181.432 181.418 181.443   CCTK total time
 91.3   165.674 162.920 178.638   meta mode/meta mode/global mode
 70.6   128.032 128.015 132.256   main
 70.6   128.032 128.015 132.256   meta mode
 52.4    95.033  95.019  99.257   meta mode/meta mode
 52.4    95.008  94.998  99.241   main/Initialise
 47.0    85.317  85.242  85.395   main/Initialise/CallInitial
 42.4    76.877  75.351  77.838   meta mode/meta mode/global mode/level(0)
 24.0    43.475  43.461  43.562   main/Initialise/CallInitial/CallRegridInitialMeta
 23.9    43.321  43.317  43.323   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 23.0    41.668  41.423  41.672   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 23.0    41.667  41.423  41.672   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
 23.0    41.665  41.420  41.669   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 21.7    39.328  36.775  41.174   main/Initialise/CallInitial/CCTK_INITIAL
 21.7    39.327  36.774  41.173   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 20.1    36.413  33.827  37.205   main/Evolve/CallEvol
 19.7    35.704  34.062  38.753   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
 19.7    35.663  34.023  38.710   [0052] TwoPunctures: TwoPunctures in CCTK_INITIAL
 19.7    35.663  34.023  38.710   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
 19.6    35.551  33.049  36.332   main/Evolve/CallEvol/CCTK_EVOL
======================================================================
      128     0.417 |   13.3617492
INFO (TimerReport): Timer Report at iteration 192 time 0.625
INFO (TimerReport): Top timers at iteration 192 time 0.625
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   237.595 237.582 237.607   CCTK total time
 88.9   211.196 207.076 233.442   meta mode/meta mode/global mode
 53.9   128.032 128.015 132.256   main
 53.9   128.032 128.015 132.256   meta mode
 40.0    95.033  95.019  99.257   meta mode/meta mode
 40.0    95.008  94.998  99.241   main/Initialise
 35.9    85.317  85.242  85.395   main/Initialise/CallInitial
 32.4    77.098  75.562  78.058   meta mode/meta mode/global mode/level(0)
 23.0    54.676  50.796  55.877   main/Evolve/CallEvol
 22.5    53.368  49.617  54.550   main/Evolve/CallEvol/CCTK_EVOL
 22.4    53.237  49.486  54.421   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 20.8    49.455  49.415  73.308   [0084] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 18.3    43.475  43.461  43.562   main/Initialise/CallInitial/CallRegridInitialMeta
 18.2    43.321  43.317  43.323   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 17.5    41.668  41.423  41.672   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 17.5    41.667  41.423  41.672   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
 17.5    41.665  41.420  41.669   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 17.2    40.873  40.796  60.553   main/Evolve/CallAnalysis
 17.0    40.507  40.487  60.149   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 17.0    40.502  40.482  60.144   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
======================================================================
      192     0.625 |   13.3569777
INFO (TimerReport): Timer Report at iteration 256 time 0.833333
INFO (TimerReport): Top timers at iteration 256 time 0.833333
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   293.575 293.562 293.586   CCTK total time
 87.4   256.523 251.052 288.078   meta mode/meta mode/global mode
 43.6   128.032 128.015 132.256   main
 43.6   128.032 128.015 132.256   meta mode
 32.4    95.033  95.019  99.257   meta mode/meta mode
 32.4    95.008  94.998  99.241   main/Initialise
 29.1    85.317  85.242  85.395   main/Initialise/CallInitial
 26.4    77.376  75.832  78.361   meta mode/meta mode/global mode/level(0)
 24.8    72.674  67.504  74.269   main/Evolve/CallEvol
 24.2    70.929  65.939  72.490   main/Evolve/CallEvol/CCTK_EVOL
 24.1    70.754  65.764  72.319   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 23.8    69.725  69.678 103.418   [0084] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 20.9    61.272  61.165  90.805   main/Evolve/CallAnalysis
 20.7    60.782  60.754  90.264   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 20.7    60.776  60.748  90.258   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 20.7    60.760  60.733  90.242   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 20.7    60.757  60.730  90.239   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 15.8    46.476  40.571  50.029   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 14.8    43.475  43.461  43.562   main/Initialise/CallInitial/CallRegridInitialMeta
 14.8    43.321  43.317  43.323   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
======================================================================
      256     0.833 |   13.3676029
INFO (TimerReport): Timer Report at iteration 320 time 1.04167
INFO (TimerReport): Top timers at iteration 320 time 1.04167
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   349.924 349.910 349.935   CCTK total time
 86.4   302.220 295.388 343.085   meta mode/meta mode/global mode
 36.6   128.032 128.015 132.256   main
 36.6   128.032 128.015 132.256   meta mode
 27.2    95.033  95.019  99.257   meta mode/meta mode
 27.2    95.008  94.998  99.241   main/Initialise
 26.0    91.100  84.625  93.098   main/Evolve/CallEvol
 25.7    89.989  89.933 133.520   [0084] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 25.4    88.906  82.652  90.846   main/Evolve/CallEvol/CCTK_EVOL
 25.3    88.687  82.432  90.632   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 24.4    85.317  85.242  85.395   main/Initialise/CallInitial
 23.3    81.665  81.529 121.048   main/Evolve/CallAnalysis
 23.2    81.051  81.016 120.372   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 23.2    81.043  81.008 120.364   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 23.2    81.024  80.989 120.344   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 23.2    81.020  80.985 120.340   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 22.2    77.716  76.152  78.701   meta mode/meta mode/global mode/level(0)
 16.6    58.258  50.857  62.784   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 13.6    47.467  42.398  62.868   meta mode/meta mode/global mode/level(8)
 13.5    47.264   6.360  54.070   main/Evolve/DoTerminate
======================================================================
      320     1.042 |   13.3587225
INFO (TimerReport): Timer Report at iteration 384 time 1.25
INFO (TimerReport): Top timers at iteration 384 time 1.25
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   405.891 405.877 405.903   CCTK total time
 85.6   347.481 339.285 397.619   meta mode/meta mode/global mode
 31.5   128.032 128.015 132.256   main
 31.5   128.032 128.015 132.256   meta mode
 27.2   110.215 110.151 163.566   [0084] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 26.9   109.083 101.323 111.478   main/Evolve/CallEvol
 26.2   106.449  98.957 108.782   main/Evolve/CallEvol/CCTK_EVOL
 26.2   106.187  98.694 108.533   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 25.1   102.019 101.853 151.237   main/Evolve/CallAnalysis
 25.0   101.282 101.240 150.423   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 25.0   101.273 101.231 150.414   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 24.9   101.249 101.208 150.390   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 24.9   101.245 101.202 150.385   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 23.4    95.033  95.019  99.257   meta mode/meta mode
 23.4    95.008  94.998  99.241   main/Initialise
 21.0    85.317  85.242  85.395   main/Initialise/CallInitial
 19.2    77.937  76.363  78.922   meta mode/meta mode/global mode/level(0)
 17.2    69.750  60.897  75.339   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 14.3    57.895   7.710  66.066   main/Evolve/DoTerminate
 14.0    56.840  50.761  75.316   meta mode/meta mode/global mode/level(8)
======================================================================
      384     1.250 |   13.3640274
INFO (TimerReport): Timer Report at iteration 448 time 1.45833
INFO (TimerReport): Top timers at iteration 448 time 1.45833
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   462.085 462.070 462.096   CCTK total time
 85.1   393.042 383.470 452.454   meta mode/meta mode/global mode
 28.2   130.479 130.407 193.651   [0084] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 27.7   128.032 128.015 132.256   main
 27.7   128.032 128.015 132.256   meta mode
 27.6   127.360 118.298 130.165   main/Evolve/CallEvol
 26.9   124.282 115.532 127.024   main/Evolve/CallEvol/CCTK_EVOL
 26.8   123.976 115.225 126.733   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 26.5   122.412 122.221 181.464   main/Evolve/CallAnalysis
 26.3   121.551 121.499 180.514   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 26.3   121.540 121.488 180.503   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 26.3   121.513 121.462 180.475   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 26.3   121.507 121.456 180.469   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 20.6    95.033  95.019  99.257   meta mode/meta mode
 20.6    95.008  94.998  99.241   main/Initialise
 18.5    85.317  85.242  85.395   main/Initialise/CallInitial
 17.6    81.444  71.070  88.081   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 16.9    78.157  76.574  79.142   meta mode/meta mode/global mode/level(0)
 14.8    68.451   8.982  77.993   main/Evolve/DoTerminate
 14.3    66.215  59.133  87.759   meta mode/meta mode/global mode/level(8)
======================================================================
      448     1.458 |   13.3618973
INFO (TimerReport): Timer Report at iteration 512 time 1.66667
INFO (TimerReport): Top timers at iteration 512 time 1.66667
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   518.066 518.053 518.083   CCTK total time
 84.6   438.367 427.423 507.066   meta mode/meta mode/global mode
 29.1   150.731 150.652 223.729   [0084] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 28.1   145.375 135.012 148.573   main/Evolve/CallEvol
 27.6   142.793 142.573 211.681   main/Evolve/CallAnalysis
 27.4   141.859 131.848 145.018   main/Evolve/CallEvol/CCTK_EVOL
 27.4   141.810 141.750 210.597   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 27.4   141.797 141.738 210.584   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 27.4   141.766 141.706 210.553   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 27.4   141.759 141.699 210.546   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 27.3   141.510 131.498 144.686   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 24.7   128.032 128.015 132.256   main
 24.7   128.032 128.015 132.256   meta mode
 18.3    95.033  95.019  99.257   meta mode/meta mode
 18.3    95.008  94.998  99.241   main/Initialise
 17.9    92.974  81.105 100.669   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 16.5    85.317  85.242  85.395   main/Initialise/CallInitial
 15.3    79.031  10.265  89.945   main/Evolve/DoTerminate
 15.1    78.432  76.848  79.444   meta mode/meta mode/global mode/level(0)
 14.6    75.579  67.495 100.201   meta mode/meta mode/global mode/level(8)
======================================================================
      512     1.667 |   13.3670797
INFO (TimerReport): Timer Report before terminating at iteration 512 time 1.66667
INFO (TimerReport): Top timers at iteration 512 time 1.66667
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   548.121 548.108 548.195   CCTK total time
 83.7   458.583 447.638 537.121   meta mode/meta mode/global mode
 82.7   453.092 448.867 453.106   main/Evolve
 31.2   170.945 170.856 253.780   [0084] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
 29.7   163.010 162.786 241.736   main/Evolve/CallAnalysis
 29.6   162.023 161.954 240.648   main/Evolve/CallAnalysis/CCTK_ANALYSIS
 29.6   162.010 161.942 240.635   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
 29.6   161.979 161.910 240.603   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
 29.6   161.973 161.903 240.597   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/zzz_TimerReport_Output
 26.5   145.375 135.012 148.573   main/Evolve/CallEvol
 25.9   141.859 131.848 145.018   main/Evolve/CallEvol/CCTK_EVOL
 25.8   141.510 131.498 144.686   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 23.4   128.032 128.015 132.256   main
 23.4   128.032 128.015 132.256   meta mode
 17.3    95.033  95.019  99.257   meta mode/meta mode
 17.3    95.008  94.998  99.241   main/Initialise
 17.0    92.974  81.105 100.669   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 16.2    88.866  10.265  99.786   main/Evolve/DoTerminate
 15.6    85.317  85.242  85.395   main/Initialise/CallInitial
 14.3    78.432  76.848  79.444   meta mode/meta mode/global mode/level(0)
======================================================================
--------------------------------------------------------------------------------
Done.
TACC:  Shutdown complete. Exiting. 
======================================================================
Job Ended at Fri Feb  7 20:09:28 CST 2025
