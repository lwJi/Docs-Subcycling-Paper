$ mkdir -p q1-Z4cowGPU-N64_r0000
$ cp q1-Z4cowGPU-N64.par q1-Z4cowGPU-N64_r0000
$ cd q1-Z4cowGPU-N64_r0000
======================================================================
Launch MPI code...
----------------------------------------------------------------------
MPIRUN = ibrun /home1/08708/liwei/EinsteinToolkit/Cactus/exe/cactus_etk q1-Z4cowGPU-N64.par

Job started on c613-101.vista.tacc.utexas.edu at Mon Feb 24 03:11:13 PM CST 2025
======================================================================
TACC:  Starting up job 140679 
TACC:  Setting up parallel environment for OpenMPI mpirun. 
TACC:  Starting parallel tasks... 
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.17.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.17.0
Compile date:      Feb 21 2025 (21:02:32)
Run date:          Feb 24 2025 (15:11:15-0600)
Run host:          c613-101.vista.tacc.utexas.edu (pid=3743728)
Working directory: /scratch/08708/liwei/q1/gcc-nvcc/q1-Z4cowGPU-N64_r0000
Executable:        /home1/08708/liwei/EinsteinToolkit/Cactus/exe/cactus_etk
Parameter file:    q1-Z4cowGPU-N64.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->ADMBaseX BoxInBox CarpetX CoordinatesX ODESolvers TimerReport TmunuBaseX Z4cowGPU<---
Thorn ADMBaseX requests automatic activation of Loop
Thorn CarpetX requests automatic activation of AMReX
Thorn CarpetX requests automatic activation of IOUtil
Thorn CarpetX requests automatic activation of MPI
Thorn CarpetX requests automatic activation of yaml_cpp
Thorn CarpetX requests automatic activation of zlib
Thorn CarpetX requests automatic activation of Arith
Thorn CarpetX requests automatic activation of CarpetXRegrid
Thorn CarpetX requests automatic activation of ADIOS2
Thorn CarpetX requests automatic activation of openPMD
Thorn CarpetX requests automatic activation of Silo
Thorn ODESolvers requests automatic activation of Subcycling
Thorn Z4cowGPU requests automatic activation of Derivs
Thorn Z4cowGPU requests automatic activation of NewRadX
Thorn Arith requests automatic activation of NSIMD
Thorn MPI requests automatic activation of hwloc
Thorn openPMD requests automatic activation of HDF5
Activating thorn ADIOS2...Success -> active implementation ADIOS2
Activating thorn ADMBaseX...Success -> active implementation ADMBaseX
Activating thorn AMReX...Success -> active implementation AMReX
Activating thorn Arith...Success -> active implementation Arith
Activating thorn BoxInBox...Success -> active implementation BoxInBox
Activating thorn CarpetX...Success -> active implementation Driver
Activating thorn CarpetXRegrid...Success -> active implementation CarpetXRegrid
Activating thorn CoordinatesX...Success -> active implementation CoordinatesX
Activating thorn Derivs...Success -> active implementation Derivs
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn Loop...Success -> active implementation Loop
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NewRadX...Success -> active implementation NewRadX
Activating thorn NSIMD...Success -> active implementation NSIMD
Activating thorn ODESolvers...Success -> active implementation ODESolvers
Activating thorn openPMD...Success -> active implementation openPMD
Activating thorn Silo...Success -> active implementation Silo
Activating thorn Subcycling...Success -> active implementation Subcycling
Activating thorn TimerReport...Success -> active implementation timerreport
Activating thorn TmunuBaseX...Success -> active implementation TmunuBaseX
Activating thorn yaml_cpp...Success -> active implementation yaml_cpp
Activating thorn Z4cowGPU...Success -> active implementation Z4cowGPU
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CarpetX::Driver_Startup: Start up the driver
      IOUtil::IOUtil_Startup: Startup routine
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      Arith::Test_smallvector: [meta] Test small vectors
      Arith::Test_spvect: [meta] Test sparse vectors
  Parameter checking routines
    [CCTK_PARAMCHECK]

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
      [CCTK_BASEGRID]
        CarpetXRegrid::CarpetXRegrid_InitError: Initialize regridding error to zero
        CoordinatesX::CoordinatesX_Setup: Set coordinate grid functions
        GROUP ODESolvers_BaseGrid: Set up constants (e.g. coordinates) everywhere on the grid
      [CCTK_INITIAL]
        BoxInBox::BoxInBox_Init: [global] Initialize
        GROUP ODESolvers_Initial: Set up initial conditions on interior of state vector
          GROUP ADMBaseX_InitialData: Schedule group for calculating ADM initial data
            ADMBaseX::ADMBaseX_initial_data: Set up Cartesian Minkowski initial data
          GROUP ADMBaseX_InitialGauge: Schedule group for the ADM initial gauge condition
            ADMBaseX::ADMBaseX_initial_lapse: Set lapse to one
            ADMBaseX::ADMBaseX_initial_dtlapse: Set dtlapse to zero
            ADMBaseX::ADMBaseX_initial_shift: Set shift to zero
            ADMBaseX::ADMBaseX_initial_dtshift: Set dtshift to zero
          GROUP ADMBaseX_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        GROUP Subcycling_RMBndryGroup: Check if the ghost points are at refinement boundary
          Subcycling::Subcycling_SetLevelNeighbor: Set level_neighbor
          Subcycling::Subcycling_SetIsRMBndry: Set isrmbndry
        GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
          TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
          GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
        GROUP Z4cowGPU_InitialGroup: Convert ADM to Z4c variables
          Z4cowGPU::Z4cowGPU_Initial1: Convert ADM to Z4c variables, part 1
          Z4cowGPU::Z4cowGPU_Initial2: Convert ADM to Z4c variables, part 2
          Z4cowGPU::Z4cowGPU_InitialLapse: Set initial lapse
        GROUP Z4cowGPU_PostStepGroup: Post-process Z4c variables
          Z4cowGPU::Z4cowGPU_Enforce: Enforce algebraic Z4c constraints
          Z4cowGPU::Z4cowGPU_Sync: [global] Synchronize
        GROUP Z4cowGPU_PostStepGroup2: Post-process Z4c variables, part 2
      [CCTK_POSTINITIAL]
        BoxInBox::EstimateError: Estimate error
        GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
          GROUP Z4cowGPU_PostStepGroup: Post-process Z4c variables
            Z4cowGPU::Z4cowGPU_Enforce: Enforce algebraic Z4c constraints
            Z4cowGPU::Z4cowGPU_Sync: [global] Synchronize
          GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
          GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
            TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
            GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
          GROUP Z4cowGPU_PostStepGroup2: Post-process Z4c variables, part 2
          GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
        GROUP ODESolvers_EstimateError: Estimate discretization error (for regridding)
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        BoxInBox::EstimateError: Estimate error
        GROUP ODESolvers_EstimateError: Estimate discretization error (for regridding)
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CarpetXRegrid::CarpetXRegrid_InitError: Initialize regridding error to zero
        CoordinatesX::CoordinatesX_Setup: Set coordinate grid functions
        GROUP ODESolvers_BaseGrid: Set up constants (e.g. coordinates) everywhere on the grid
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
          GROUP Z4cowGPU_PostStepGroup: Post-process Z4c variables
            Z4cowGPU::Z4cowGPU_Enforce: Enforce algebraic Z4c constraints
            Z4cowGPU::Z4cowGPU_Sync: [global] Synchronize
          GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
          GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
            TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
            GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
          GROUP Z4cowGPU_PostStepGroup2: Post-process Z4c variables, part 2
          GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
        GROUP ODESolvers_EstimateError: Estimate discretization error (for regridding)
        GROUP Subcycling_RMBndryGroup: Check if the ghost points are at refinement boundary
          Subcycling::Subcycling_SetLevelNeighbor: Set level_neighbor
          Subcycling::Subcycling_SetIsRMBndry: Set isrmbndry
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
        CarpetX::CarpetX_CheckpointInitial: [meta] Checkpoint initial conditions
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        GROUP ODESolvers_Analysis: Calculate analysis quantities everywhere
        TimerReport::zzz_TimerReport_Output: [global] Print the timer report
        GROUP Z4cowGPU_AnalysisGroup: Analyse Z4c variables
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
        GROUP Z4cowGPU_PostStepGroup: Post-process Z4c variables
          Z4cowGPU::Z4cowGPU_Enforce: Enforce algebraic Z4c constraints
          Z4cowGPU::Z4cowGPU_Sync: [global] Synchronize
        GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
        GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
          TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
          GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
        GROUP Z4cowGPU_PostStepGroup2: Post-process Z4c variables, part 2
        GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
      GROUP Subcycling_RMBndryGroup: Check if the ghost points are at refinement boundary
        Subcycling::Subcycling_SetLevelNeighbor: Set level_neighbor
        Subcycling::Subcycling_SetIsRMBndry: Set isrmbndry
      GROUP Z4cowGPU_PostStepGroup: Post-process Z4c variables
        Z4cowGPU::Z4cowGPU_Enforce: Enforce algebraic Z4c constraints
        Z4cowGPU::Z4cowGPU_Sync: [global] Synchronize
      GROUP Z4cowGPU_PostStepGroup2: Post-process Z4c variables, part 2
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
      ODESolvers::ODESolvers_Solve_Subcycling: [level] Solve ODEs using Subcycling
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
        GROUP Z4cowGPU_PostStepGroup: Post-process Z4c variables
          Z4cowGPU::Z4cowGPU_Enforce: Enforce algebraic Z4c constraints
          Z4cowGPU::Z4cowGPU_Sync: [global] Synchronize
        GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
        GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
          TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
          GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
        GROUP Z4cowGPU_PostStepGroup2: Post-process Z4c variables, part 2
        GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
    [CCTK_POSTSTEP]
      BoxInBox::EstimateError: Estimate error
      GROUP ODESolvers_EstimateError: Estimate discretization error (for regridding)
    if (checkpoint)
      [CCTK_CHECKPOINT]
      CarpetX::CarpetX_Checkpoint: [meta] Checkpoint
      TimerReport::zzz_TimerReport_Checkpoint: [global] Print the timer report
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      GROUP ODESolvers_Analysis: Calculate analysis quantities everywhere
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report
      GROUP Z4cowGPU_AnalysisGroup: Analyse Z4c variables
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      CarpetX::CarpetX_CheckpointTerminate: [meta] Checkpoint before terminating
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report

  Shutdown routines
    [CCTK_SHUTDOWN]
      CarpetX::Driver_Shutdown: [meta] Shut down the driver

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      GROUP ODESolvers_PostStep: Apply boundary conditions to state vector, and project if necessary
        GROUP Z4cowGPU_PostStepGroup: Post-process Z4c variables
          Z4cowGPU::Z4cowGPU_Enforce: Enforce algebraic Z4c constraints
          Z4cowGPU::Z4cowGPU_Sync: [global] Synchronize
        GROUP ADMBaseX_SetADMVars: Set ADM variables in this group
        GROUP TmunuBaseX_SetTmunuVars: Schedule group for setting T_munu
          TmunuBaseX::TmunuBaseX_ZeroTmunu: Set T_munu to zero
          GROUP TmunuBaseX_AddToTmunu: Add to T_munu here
        GROUP Z4cowGPU_PostStepGroup2: Post-process Z4c variables, part 2
        GROUP ADMBaseX_SetADMRHS: Set ADM RHS variables in this group
      GROUP Subcycling_RMBndryGroup: Check if the ghost points are at refinement boundary
        Subcycling::Subcycling_SetLevelNeighbor: Set level_neighbor
        Subcycling::Subcycling_SetIsRMBndry: Set isrmbndry
      GROUP Z4cowGPU_PostStepGroup: Post-process Z4c variables
        Z4cowGPU::Z4cowGPU_Enforce: Enforce algebraic Z4c constraints
        Z4cowGPU::Z4cowGPU_Sync: [global] Synchronize
      GROUP Z4cowGPU_PostStepGroup2: Post-process Z4c variables, part 2
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.1, API version 0x20500
--------------------------------------------------------------------------------
                                                            
   _______ _______  ______  _____  _______ _______ _     _  
   |       |_____| |_____/ |_____] |______    |     \___/   
   |_____  |     | |    \_ |       |______    |    _/   \_  
                                                            
AMR driver provided by CarpetX,
using AMReX 25.01-dirty (MPI, no OpenMP, accelerators, optimized)
--------------------------------------------------------------------------------

Initializing AMReX (25.01-dirty)...
MPI initialized with 64 MPI processes
MPI initialized with thread support level 2
Initializing CUDA...
CUDA initialized with 64 devices.
AMReX (25.01-dirty) initialized
INFO (CarpetX): 
Symmetries:
  lower x: none
  lower y: none
  lower z: none
  upper x: none
  upper y: none
  upper z: none
Default boundaries:
  lower x: linear_extrapolation
  lower y: linear_extrapolation
  lower z: linear_extrapolation
  upper x: linear_extrapolation
  upper y: linear_extrapolation
  upper z: linear_extrapolation
INFO (Arith): Test_smallvector
INFO (Arith): Test_spvect
INFO (CarpetX): Setting initial values for max_grid_size values for all levels
INFO (CarpetX): Setting up initial conditions...
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.833333
INFO (CarpetX): Patch 0:
INFO (CarpetX):   Grid extent:
INFO (CarpetX):     gsh=[247,247,247]
INFO (CarpetX):     blocking_factor=[8,8,8]
INFO (CarpetX):     max_grid_size=[64,64,64]
INFO (CarpetX):     max_tile_size=[10240000,10240000,10240000]
INFO (CarpetX):   Domain extent:
INFO (CarpetX):     xmin=[-400,-400,-400]
INFO (CarpetX):     xmax=[400.00000000000006,400.00000000000006,400.00000000000006]
INFO (CarpetX):     base dx=[3.3333333333333335,3.3333333333333335,3.3333333333333335]
INFO (CarpetX): Initializing level 0...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.833333
INFO (CarpetX): Initializing level 1...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX):   level 2: 64 boxes, 20123648 cells (2.275%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.833333
INFO (CarpetX): Initializing level 2...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX):   level 2: 64 boxes, 20123648 cells (2.275%, 12%)
INFO (CarpetX):   level 3: 64 boxes, 21307392 cells (0.301%, 13%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.833333
INFO (CarpetX): Initializing level 3...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX):   level 2: 64 boxes, 20123648 cells (2.275%, 12%)
INFO (CarpetX):   level 3: 64 boxes, 21307392 cells (0.301%, 13%)
INFO (CarpetX):   level 4: 64 boxes, 16588800 cells (0.0293%, 10%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.833333
INFO (CarpetX): Initializing level 4...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX):   level 2: 64 boxes, 20123648 cells (2.275%, 12%)
INFO (CarpetX):   level 3: 64 boxes, 21307392 cells (0.301%, 13%)
INFO (CarpetX):   level 4: 64 boxes, 16588800 cells (0.0293%, 10%)
INFO (CarpetX):   level 5: 64 boxes, 10027008 cells (0.002214%, 8%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.833333
INFO (CarpetX): Initializing level 5...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX):   level 2: 64 boxes, 20123648 cells (2.275%, 12%)
INFO (CarpetX):   level 3: 64 boxes, 21307392 cells (0.301%, 13%)
INFO (CarpetX):   level 4: 64 boxes, 16588800 cells (0.0293%, 10%)
INFO (CarpetX):   level 5: 64 boxes, 10027008 cells (0.002214%, 8%)
INFO (CarpetX):   level 6: 64 boxes, 12976128 cells (0.0003581%, 16%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.833333
INFO (CarpetX): Initializing level 6...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX):   level 2: 64 boxes, 20123648 cells (2.275%, 12%)
INFO (CarpetX):   level 3: 64 boxes, 21307392 cells (0.301%, 13%)
INFO (CarpetX):   level 4: 64 boxes, 16588800 cells (0.0293%, 10%)
INFO (CarpetX):   level 5: 64 boxes, 10027008 cells (0.002214%, 8%)
INFO (CarpetX):   level 6: 64 boxes, 12976128 cells (0.0003581%, 16%)
INFO (CarpetX):   level 7: 64 boxes, 8192000 cells (2.826e-05%, 8%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.833333
INFO (CarpetX): Initializing level 7...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX):   level 2: 64 boxes, 20123648 cells (2.275%, 12%)
INFO (CarpetX):   level 3: 64 boxes, 21307392 cells (0.301%, 13%)
INFO (CarpetX):   level 4: 64 boxes, 16588800 cells (0.0293%, 10%)
INFO (CarpetX):   level 5: 64 boxes, 10027008 cells (0.002214%, 8%)
INFO (CarpetX):   level 6: 64 boxes, 12976128 cells (0.0003581%, 16%)
INFO (CarpetX):   level 7: 64 boxes, 8192000 cells (2.826e-05%, 8%)
INFO (CarpetX):   level 8: 64 boxes, 8192000 cells (3.532e-06%, 12%)
INFO (CarpetX): Iteration: 0   time: 0   delta_time: 0.833333
INFO (CarpetX): Initializing level 8...
INFO (CarpetX): Regridding...
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX):   level 2: 64 boxes, 20123648 cells (2.275%, 12%)
INFO (CarpetX):   level 3: 64 boxes, 21307392 cells (0.301%, 13%)
INFO (CarpetX):   level 4: 64 boxes, 16588800 cells (0.0293%, 10%)
INFO (CarpetX):   level 5: 64 boxes, 10027008 cells (0.002214%, 8%)
INFO (CarpetX):   level 6: 64 boxes, 12976128 cells (0.0003581%, 16%)
INFO (CarpetX):   level 7: 64 boxes, 8192000 cells (2.826e-05%, 8%)
INFO (CarpetX):   level 8: 64 boxes, 8192000 cells (3.532e-06%, 12%)
INFO (CarpetX): Initialized 9 levels
INFO (TimerReport): Timer Report at iteration 0 time 0
INFO (TimerReport): Top timers at iteration 0 time 0
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   0.669208 0.647068 0.691845   CCTK total time
 61.7   0.412660 0.403132 0.418748   Sync
 41.7   0.278729 0.274785 0.285773   InitialiseRegrid [refined]
  3.0   0.020061 0.019900 0.020240   InitialiseRegrid [coarse]
  2.9   0.019611 0.019430 0.019781   Restrict
  2.9   0.019482 0.019297 0.019649   Restrict::average_down
  0.7   0.004666 0.002780 0.007853   apply_boundary_conditions
  0.7   0.004491 0.003151 0.006223   prolongate_3d_rf2<[vertex,vertex,vertex],[poly,poly,poly],[5,5,5,none]>[thread=0]
  0.6   0.003886 0.003745 0.004123   CallFunction TmunuBaseX_SetTmunuVars: TmunuBaseX::TmunuBaseX_ZeroTmunu
  0.6   0.003707 0.003431 0.004137   CallFunction Subcycling_RMBndryGroup: Subcycling::Subcycling_SetIsRMBndry
  0.5   0.003525 0.003463 0.003568   CallFunction Z4cowGPU_PostStepGroup: Z4cowGPU::Z4cowGPU_Enforce
  0.5   0.003061 0.002958 0.003173   [0017] Z4cowGPU: Z4cowGPU_Initial2 in CCTK_INITIAL
  0.5   0.003040 0.002939 0.003147   CallFunction Z4cowGPU_InitialGroup: Z4cowGPU::Z4cowGPU_Initial2
  0.4   0.003006 0.002749 0.003387   [0014] Subcycling: Subcycling_SetIsRMBndry in CCTK_INITIAL
  0.4   0.002870 0.002605 0.003676   [0006] CoordinatesX: CoordinatesX_Setup in CCTK_BASEGRID
  0.4   0.002852 0.002586 0.003655   CallFunction CCTK_BASEGRID: CoordinatesX::CoordinatesX_Setup
  0.4   0.002517 0.002404 0.002874   [0016] Z4cowGPU: Z4cowGPU_Initial1 in CCTK_INITIAL
  0.4   0.002501 0.002389 0.002857   CallFunction Z4cowGPU_InitialGroup: Z4cowGPU::Z4cowGPU_Initial1
  0.4   0.002460 0.002171 0.002721   [0008] ADMBaseX: ADMBaseX_initial_data in CCTK_INITIAL
  0.4   0.002446 0.002162 0.002708   CallFunction ADMBaseX_InitialData: ADMBaseX::ADMBaseX_initial_data
======================================================================
INFO (CarpetX): Starting evolution...
INFO (CarpetX): Regridding...
INFO (CarpetX): Setting max_grid_size values for all levels before regridding
INFO (CarpetX):   old levels 9, new levels 9
INFO (CarpetX):   level 0: 64 boxes, 13824000 cells (100%)
INFO (CarpetX):   level 1: 64 boxes, 20123648 cells (18.2%, 18%)
INFO (CarpetX):   level 2: 64 boxes, 20123648 cells (2.275%, 12%)
INFO (CarpetX):   level 3: 64 boxes, 21307392 cells (0.301%, 13%)
INFO (CarpetX):   level 4: 64 boxes, 16588800 cells (0.0293%, 10%)
INFO (CarpetX):   level 5: 64 boxes, 10027008 cells (0.002214%, 8%)
INFO (CarpetX):   level 6: 64 boxes, 12976128 cells (0.0003581%, 16%)
INFO (CarpetX):   level 7: 64 boxes, 8192000 cells (2.826e-05%, 8%)
INFO (CarpetX):   level 8: 64 boxes, 8192000 cells (3.532e-06%, 12%)
INFO (ODESolvers): Integrator is RK4
INFO (CarpetX): Simulation time: 0.00325521   Iterations per second: 3.1508   Simulation time per second: 2.62566
INFO (CarpetX): Grid cells: 1.31355e+08   Grid cell updates per second: 4.13872e+08
INFO (CarpetX): Performance:
INFO (CarpetX):   total evolution time:            0.31738 sec
INFO (CarpetX):   total evolution compute time:    0.317369 sec
INFO (CarpetX):   total evolution output time:     1.09673e-05 sec
INFO (CarpetX):   total iterations:                1
INFO (CarpetX):   total cells updated:             1.31355e+08
INFO (CarpetX):   average iterations per second: 3.1508
INFO (CarpetX):   average cell updates per second: 4.13872e+08
INFO (CarpetX): Simulation time: 0.00651042   Iterations per second: 52.6096   Simulation time per second: 43.8414
INFO (CarpetX): Grid cells: 1.31355e+08   Grid cell updates per second: 6.91052e+09
INFO (CarpetX): Performance:
INFO (CarpetX):   total evolution time:            0.336388 sec
INFO (CarpetX):   total evolution compute time:    0.336376 sec
INFO (CarpetX):   total evolution output time:     1.19209e-05 sec
INFO (CarpetX):   total iterations:                2
INFO (CarpetX):   total cells updated:             2.62709e+08
INFO (CarpetX):   average iterations per second: 5.94552
INFO (CarpetX):   average cell updates per second: 7.80971e+08
INFO (CarpetX): Shutting down...
INFO (TimerReport): Timer Report before terminating at iteration 2 time 0.00651042
INFO (TimerReport): Top timers at iteration 2 time 0.00651042
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   2.81819 2.80872 2.82009   Initialise
 37.3   1.05015 1.04993 1.05273   CCTK total time
 15.7   0.44196 0.43098 0.45053   Sync
 12.0   0.33813 0.33706 0.33817   Evolve
 10.3   0.29046 0.28786 0.29430   [0036] ODESolvers: ODESolvers_Solve_Subcycling in CCTK_EVOL
 10.3   0.29044 0.28785 0.29429   CallFunction CCTK_EVOL: ODESolvers::ODESolvers_Solve_Subcycling
 10.3   0.29043 0.28783 0.29427   ODESolvers::Solve
  9.9   0.27873 0.27479 0.28577   InitialiseRegrid [refined]
  2.6   0.07236 0.05678 0.08612   ODESolvers::Solve::poststep
  2.3   0.06581 0.06578 0.06690   [0035] TimerReport: zzz_TimerReport_Output in CCTK_ANALYSIS
  2.3   0.06579 0.06577 0.06689   CallFunction CCTK_ANALYSIS: TimerReport::zzz_TimerReport_Output
  1.9   0.05255 0.04454 0.05827   CallScheduleGroup
  1.8   0.05121 0.04323 0.05689   ODESolvers::Solve::rhs
  1.5   0.04184 0.04104 0.04337   [0037] Z4cowGPU: Z4cowGPU_RHS in ODESolvers_RHS
  1.5   0.04173 0.04093 0.04326   CallFunction Z4cowGPU_RHSGroup: Z4cowGPU::Z4cowGPU_RHS
  0.7   0.02083 0.02053 0.02108   Restrict
  0.7   0.02069 0.02040 0.02093   Restrict::average_down
  0.7   0.02006 0.01990 0.02024   InitialiseRegrid [coarse]
  0.4   0.01262 0.01261 0.01265   EvolveRegrid
  0.3   0.00901 0.00119 0.01418   [0038] Z4cowGPU: Z4cowGPU_Apply_NewRadX_BC in ODESolvers_RHS
======================================================================
Total GPU global memory (MB) spread across MPI: [97280 ... 97280]
Free  GPU global memory (MB) spread across MPI: [91571 ... 91795]
[The         Arena] space (MB) allocated spread across MPI: [72960 ... 72960]
[The         Arena] space (MB) used      spread across MPI: [0 ... 0]
[The  Device Arena] space (MB) allocated spread across MPI: [192 ... 291]
[The  Device Arena] space (MB) used      spread across MPI: [0 ... 0]
[The  Pinned Arena] space (MB) allocated spread across MPI: [8 ... 8]
[The  Pinned Arena] space (MB) used      spread across MPI: [0 ... 0]
AMReX (25.01-dirty) finalized
--------------------------------------------------------------------------------
Done.
TACC:  Shutdown complete. Exiting. 
======================================================================
Job Ended at Mon Feb 24 03:11:19 PM CST 2025
